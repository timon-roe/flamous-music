{"version":3,"sources":["../node_modules/hyperapp/src/index.js","../node_modules/amplitudejs/dist/amplitude.js","../node_modules/picostyle/src/index.js","../node_modules/tslib/tslib.es6.js","../node_modules/framesync/dist/framesync.es.js","../node_modules/style-value-types/dist/style-value-types.es.js","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/stylefire/dist/stylefire.es.js","../node_modules/popmotion/dist/popmotion.es.js","../node_modules/popmotion/lib/calc.js","../node_modules/popmotion/lib/transformers.js","components/ScrubBar.js","albums.js","components/Page.js","components/Gallery.js","components/Header.js","components/Home.js","songs.js","index.js"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","nodeName","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","setPartialState","concat","scheduleRender","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","insertBefore","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","target","source","out","value","slice","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","style","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","removeElement","done","removeChild","removeChildren","ondestroy","onremove","cache","decls","nodeDecls","JSON","stringify","createStyle","class","filter","Boolean","join","keyframes","_id","sheet","head","hyphenate","str","replace","insert","rule","insertRule","cssRules","obj","id","forEach","wrap","stringToWrap","wrapper","parse","classname","isInsideObj","arr","prop","sub","test","__extends","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","n","apply","e","indexOf","getOwnPropertySymbols","decorators","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","next","rejected","step","body","_","f","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","m","exports","o","ar","error","asyncIterator","q","a","resume","fulfill","settle","shift","cooked","raw","mod","__esModule","default","currentFrameTime","hasRAF","window","undefined","requestAnimationFrame","prevTime","onNextFrame","callback","currentTime","Date","now","timeToCall","Math","max","createRenderStep","startRenderLoop","functionsToRun","functionsToRunNextFrame","numThisFrame","isProcessing","indexOfCallback","splice","_a","immediate","addToCurrentBuffer","buffer","HAS_PERFORMANCE_NOW","performance","willRenderNextFrame","MAX_ELAPSED","defaultElapsed","useDefaultElapsed","currentFramestamp","elapsed","processFrame","frameStart","frameUpdate","frameRender","frameEnd","framestamp","min","process","onFrameStart","schedule","onFrameUpdate","onFrameRender","onFrameEnd","cancelOnFrameStart","cancel","cancelOnFrameUpdate","cancelOnFrameRender","cancelOnFrameEnd","timeSinceLastFrame","complex","clamp","contains","term","isFirstChars","getValueFromFunctionString","substring","lastIndexOf","splitCommaDelimited","split","number","parseFloat","alpha","transform","scale","createUnitType","unit","containsUnit","degrees","percent","px","vh","vw","clampRgbUnit","onlyColorRegex","isRgba","red","isHsla","hue","splitColorValues","terms","numTerms","values","valuesArray","rgbaTemplate","green","blue","_b","hslaTemplate","saturation","lightness","rgbUnit","round","testRgbaString","rgba","alpha$$1","testHslaString","hsla","hex","substr","parseInt","color","floatRegex","colorRegex","COLOR_TOKEN","NUMBER_TOKEN","numValues","foundNumbers","match","foundColors","input","parsed","template","token","numColors","numNumbers","output","invariant","HEY_LISTEN","warning","buildStylePropertyString","testElement","createStyler","onRead","onRender","aliasMap","_c","useCache","props","changedValues","hasChanged","setValue","unmappedKey","currentValue","forceRender","CAMEL_CASE_PATTERN","REPLACE_TEMPLATE","camelToDash","setDomAttrs","attrs","camelCache","Map","dashCache","prefixes","numPrefixes","testPrefix","prefix","noPrefix","prefixedPropertyName","charAt","toUpperCase","set","prefixer","asDashCase","has","get","axes","order","TRANSFORM_ORIGIN_X","TRANSFORM_ORIGIN_Y","transformProps","reduce","acc","axesAcc","axesKey","transformPropDictionary","dict","isTransformProp","sortTransformProps","isTransformOriginProp","valueTypes","getValueType","NUMBER","OBJECT","COLON","SEMI_COLON","TRANSFORM_ORIGIN","TRANSFORM","TRANSLATE_Z","TRANSFORM_NONE","styleRule","enableHardwareAcceleration","blacklist","valuesToChange","keys","propertyString","transformString","hasTransformOrigin","transformIsDefault","hasTransform","transformHasZ","numChangedValues","stateKey","sort","totalNumChangedValues","isTransformKey","valueType","transformOriginX","transformOriginY","transformOriginZ","SCROLL_LEFT","SCROLL_TOP","scrollValues","Set","cssStyler","preparseOutput","domValue","getComputedStyle","getPropertyValue","cssText","scrollLeft","scrollTop","css","ZERO_NOT_ZERO","percentToPixels","percent$$1","build","dimensions","isPath","pathLength","hasDashArray","dashArrayStyles","scale$$1","scaleX","scaleY","width","originX","x","height","originY","scaleTransformX","scaleTransformY","scaleReplaceX","scaleReplaceY","translateX","translateY","rotate","skewX","skewY","pathSpacing","defaultValue","valueTypes$1","getValueType$1","svgStyler","getAttribute","svg","getBBox","tagName","getTotalLength","viewport","pageYOffset","pageXOffset","scrollTo","WeakMap","createDOMStyler","styler","HTMLElement","SVGElement","getStyler","index","nodeOrSelector","querySelector","createStylerFactory","buildStyles","ValueReaction","styleValueTypes","isNum","isPoint","point","isPoint3D","z","toDecimal","num","precision","pow","ZERO_POINT","distance1D","abs","angle","radiansToDegrees","atan2","degreesToRadians","degrees$$1","PI","dilate","dilation","distance","xDelta","yDelta","zDelta","sqrt","getProgressFromValue","from","to","toFromDifference","getValueFromProgress","progress","pointFromAngleAndDistance","origin","cos","sin","radians","smooth","newValue","duration","smoothing","speedPerFrame","xps","frameDuration","speedPerSecond","velocity","stepProgress","steps","segment","progressOfTarget","floor","calc","freeze","noop","appendUnit","applyOffset","hasReceivedFrom","applyOffsetTo","getOffset","blend","fromExpo","toExpo","blendColor","fromColor","toColor","blended","blendFunc","blendArray","blendValue","fromThis","toThis","combineFunctions","pipe","transformers","_i","conditional","check","slowInterpolate","rangeLength","rangeEasing","finalIndex","reverse","progressInRange","easedProgress","fastInterpolate","minA","maxA","minB","maxB","interpolate","generateStaticSpring","alterDisplacement","constant","displacement","springModifiedDisplacement","linearSpring","nonlinearSpring","rangeSize","smooth$1","strength","previousValue","lastUpdated","timeDelta","snap","points","i_1","numPoints_1","lastDistance","distance$$1","st","transformMap","childTransformers","childTransformer","Chainable","applyMiddleware","middleware","funcs","pipedUpdate","update","while","predicate","complete","Observer","observer","onComplete","_this","isActive","updateObserver","err","createObserver","observerCandidate","Action","_super","start","isComplete","subscription","init","observerProps","api","stop","registerParent","BaseMulticast","subscribers","subscriber","subscribe","Multicast","multicast","isValueList","isArray","isSingleValue","typeOfV","scheduleVelocityCheck","velocityCheck","prev","current","updateCurrent","getVelocityOfCurrent","getSingleVelocity","getListVelocity","getMapVelocity","initialSubscription","getVelocity","multi","getCount","getFirst","getOutput","mapApi","setProp","startActions","numActions","updateOutput","numCompletedActions","subs","hasCompleted","methodName","composite","args","propKey","starter","parallel","parallel$1","createVectorTests","typeTests","testNames","isVectorProp","getVectorKeys","vectorKeys","testVectorProps","isVector","unitTypes","findUnitType","find","isUnitProp","createAction","reduceArrayValue","createArrayAction","firstVectorKey","actionList","childActionProps","getActionCreator","reduceObjectValue","createObjectAction","actionMap","createUnitAction","unitType","createColorAction","createComplexAction","valueTemplate","createTransformer","createVectorAction","vectorAction","testProp","actionCreator","frame","startTime","nextFrame","decay","_d","power","_e","timeConstant","_f","restDelta","modifyTarget","amplitude","idealTarget","timer","delta","exp","isMoving","vectorDecay","func","DEFAULT_OVERSHOOT_STRENGTH","createReversedEasing","easing","createMirroredEasing","linear","createExpoIn","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","createBackIn","backIn","backOut","backInOut","createAnticipateEasing","backEasing","anticipate","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","K_SPLINE_TABLE_SIZE","K_SAMPLE_STEP_SIZE","FLOAT_32_SUPPORTED","Float32Array","a1","a2","getSlope","calcBezier","cubicBezier","mX1","mY1","mX2","mY2","sampleValues","_precomputed","getTForX","aX","currentSample","intervalStart","dist","guessForT","initialSlope","lastSample","aGuessT","currentSlope","currentX","newtonRaphsonIterate","aA","aB","currentT","binarySubdivide","precompute","calcSampleValues","resolver","returnValue","scrubber","ease","vectorScrubber","clampProgress","tween","tweenTimer","flip","loop","yoyo","_g","_h","_j","_k","playDirection","_l","flipCount","_m","yoyoCount","_o","loopCount","playhead","reverseTween","updateTween","seek","startTimer","isStepTaken","isTweenComplete","stopTimer","newProgress","clampProgress$1","defaultEasings","defaultTimings","interpolateScrubbers","scrubbers","finalInputIndex","finalScrubberIndex","scrub","easings","times","tweenProps","physics","acceleration","friction","springStrength","restSpeed","distanceToTarget","vectorPhysics","spring","stiffness","damping","mass","initialVelocity","position","prevPosition","springTimer","dampingRatio","angularFreq","envelope","expoDecay","isBelowVelocityThreshold","isBelowDisplacementThreshold","vectorSpring","DEFAULT_DURATION","flattenTimings","instructions","flatInstructions","lastArg","isStaggered","staggerDelay","segments","numSegments","offset","item","flattenArrayInstructions","instruction","convertDefToProps","def","prevTimeTo","timeFrom","at","timeTo","timeline","calculatedDuration","animationDefs","tracks","numDefs","track","Error","trackKeyframes","keyframeProps","listen","options","eventNames","eventName","defaultPointerPos","eventToPoint","clientX","clientY","pageX","pageY","isTouchDevice","updatePointsLocation","touches","numTouches","thisTouch","multitouch","preventDefault","initialDistance","initialRotation","isGesture","firstTouch","secondTouch","updatePoint","newDistance","newRotation","updateOnMove","passive","getIsTouchDevice","isMouseDevice","updatePointLocation","mouse","getFirstTouch","pointer","applyXOffset_1","applyYOffset_1","delta_1","chain","playCurrent","crossfade","balance","fadable","va","vb","delay","timeToDelay","timeout","setTimeout","clearTimeout","merge","thisAction","scheduler","schedulee","latest","schedulerSub","scheduleeSub","stagger","interval","intervalIsNumber","actionsWithDelay","everyFrame","ScrubBar","makeInteractive","playPause","nextSong","previousSong","handleStyler","handle","currentHandle","direction","stopPointer","axis","springCurve","oneDirectionalPointer","log","Bubble","playingState","Indicator","SongCover","Song","Artist","Info","Wrapper","image","artist","placeholder","Page","AXIS_LOCK_THRESHOLD","isAxisLocked","handleX","handleSub","unsubscribe","currentPointer","clickLock","pointerX","val","upListener","currentPos","isGoingBack","clientWidth","pageWidth","stopSpring","flamous","killPage","Gallery","cover_art_url","addPage","FlexWrapper","Item","Cover","src","Header","title","Home","albums","songs","images","AppShell","Amplitude","setDebug","songList","meta","getActiveSongMetadata","Image","onload","updateMetaData","setPlayState","getDefaultAlbumArt","metaData","navigator","mediaSession","MediaMetadata","pages","isPlaying","playingContext","audio","paused","info","play","pause","setActionHandler"],"mappings":"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","file":"src.6b0828bb.map","sourceRoot":"../src","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        var style = value == null || value[i] == null ? \"\" : value[i]\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style)\n        } else {\n          element[name][i] = style\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Amplitude\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Amplitude\"] = factory();\n\telse\n\t\troot[\"Amplitude\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * These variables make Amplitude run. The config is the most important\n * containing active settings and parameters.\n *\n * The config JSON is the global settings for ALL of Amplitude functions.\n * This is global and contains all of the user preferences. The default\n * settings are set, and the user overwrites them when they initialize\n * Amplitude.\n *\n * @module config\n * @type {object}\n * @property {string}  \tconfig.version          \t\t\t\t- The current version of AmplitudeJS.\n * @property {object} \tconfig.active_song \t\t \t\t\t\t\t-\tHandles all of the audio.\n * @property {object} \tconfig.active_metadata\t\t\t\t\t- Contains the active metadata for the song.\n * @property {string} \tconfig.active_album\t\t\t\t\t\t\t- Holds the active album name. Used to check and see if the album changed and run the album changed callback.\n * @property {number} \tconfig.active_index\t\t\t\t\t\t\t- Contains the index of the actively playing song.\n * @property {string} \tconfig.active_playlist\t\t\t\t\t- Contains the key to the active playlist index.\n * @property {boolean}\tconfig.autoplay\t\t\t\t\t\t\t\t\t- Set to true to autoplay the song\n * @property {number} \tconfig.playback_speed\t\t\t\t\t\t- Sets the initial playback speed of the song. The values for this can be 1.0, 1.5, 2.0\n * @property {object} \tconfig.callbacks\t\t\t\t\t\t\t\t- The user can pass a JSON object with a key => value store of callbacks to be run at certain events.\n * @property {array} \t\tconfig.songs\t\t\t\t\t\t\t\t\t\t- Contains all of the songs the user has passed to Amplitude to use.\n * @property {object} \tconfig.playlists\t\t\t\t\t\t\t\t- Contains all of the playlists the user created.\n * @property {object} \tconfig.start_song \t\t\t\t\t\t\t- The index of the song that AmplitudeJS should start with.\n * @property {object} \tconfig.shuffled_playlists\t\t\t\t- Will contain shuffled playlists.\n * @property {string} \tconfig.starting_playlist \t\t\t\t- The starting playlist the player will intiialize to.\n * @property {object} \tconfig.shuffled_statuses \t\t\t\t- Contains whether the current playlist is in shuffle mode or not.\n * @property {object} \tconfig.repeat_statuses \t\t\t\t\t- Contains whether the playlist is in repeat mode or not.\n * @property {object} \tconfig.shuffled_active_indexes\t- Contains the active index in a shuffled playlist.\n * @property {boolean} \tconfig.repeat \t\t\t\t\t\t\t\t\t- When repeat is on, when the song ends the song will replay itself.\n * @property {object} \tconfig.shuffle_list\t\t\t\t\t\t\t- When shuffled, gets populated with the songs the user provided in a random order.\n * @property {boolean} \tconfig.shuffle_on\t\t\t\t\t\t\t\t- When on, gets set to true so when traversing through songs, AmplitudeJS knows whether or not to use the songs object or the shuffle_list\n * @property {number} \tconfig.shuffle_active_index \t\t- When shuffled, this index is used to let AmplitudeJS know where it's at when traversing.\n * @property {string}\t\tconfig.default_album_art \t\t\t\t- The user can set default album art to be displayed if the song they set doesn't contain album art.\n * @property {boolean} \tconfig.debug\t\t\t\t\t\t\t\t\t\t- When set to true, AmplitudeJS will print to the console any errors providing helpful feedback to the user.\n * @property {number} \tconfig.volume \t\t\t\t\t\t\t\t\t- The user can set the initial volume to a number between 0 and 1 over-riding the default of .5\n * @property {number} \tconfig.pre_mute_volume \t\t\t\t\t- This is set on mute so that when a user un-mutes AmplitudeJS knows what to restore the volume to.\n * @property {number}\t\tconfig.volume_increment \t\t\t\t- The default values are an integer between 1 and 100 for how much the volume should increase when the user presses the volume up button.\n * @property {number}\t\tconfig.volume_decrement \t\t\t\t- The default values are an integer between 1 and 100 for how much the volume should decrease when the user presses the volume down button.\n * @property {string} \tconfig.soundcloud_client \t\t\t\t- When using SoundCloud, the user will have to provide their API Client ID\n * @property {boolean} \tconfig.soundcloud_use_art \t\t\t- The user can set this to true and AmplitudeJS will use the album art for the song returned from the Soundcloud API\n * @property {number} \tconfig.soundcloud_song_count \t\t- Used on config to count how many songs are from Soundcloud and compare it to how many are ready for when to move to the rest of the configuration\n * @property {number} \tconfig.soundcloud_songs_ready \t- Used on config to count how many songs are ready so when we get all of the data from the SoundCloud API that we need this should match the SoundCloud song count meaning we can move to the rest of the config.\n * @property {integer}\tconfig.is_touch_moving \t\t\t\t\t- Flag for if the user is moving the screen.\n * @property {boolean}\tconfig.buffered\t\t\t\t\t\t\t\t\t- How much of the song is buffered.\n * @property {object} \tconfig.bindings\t\t\t\t\t\t\t\t\t- Array of bindings to certain key events.\n * @property {boolean} \tconfig.continue_next \t\t\t\t\t\t- Determines when a song ends, we should continue to the next song.\n */\nmodule.exports = {\n  version: '3.3.0',\n\n  active_song: new Audio(),\n\n  active_metadata: {},\n\n  active_album: '',\n\n  active_index: 0,\n\n  active_playlist: '',\n\n  autoplay: false,\n\n  playback_speed: 1.0,\n\n  callbacks: {},\n\n  songs: [],\n\n  playlists: {},\n\n  start_song: '',\n\n  shuffled_playlists: {},\n\n  starting_playlist: '',\n\n  shuffled_statuses: {},\n\n  shuffled_active_indexes: {},\n\n  repeat_statuses: {},\n\n  repeat: false,\n\n  repeat_song: false,\n\n  shuffle_list: {},\n\n  shuffle_on: false,\n\n  shuffle_active_index: 0,\n\n  default_album_art: '',\n\n  debug: false,\n\n  volume: .5,\n\n  pre_mute_volume: .5,\n\n  volume_increment: 5,\n\n  volume_decrement: 5,\n\n  soundcloud_client: '',\n\n  soundcloud_use_art: false,\n\n  soundcloud_song_count: 0,\n\n  soundcloud_songs_ready: 0,\n\n  is_touch_moving: false,\n\n  buffered: 0,\n\n  bindings: {},\n\n  continue_next: true\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _core = __webpack_require__(3);\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _visual = __webpack_require__(2);\n\nvar _visual2 = _interopRequireDefault(_visual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * For the sake of code clarity, these functions perform helper tasks\n * assisting the logical functions with what they need such as setting\n * the proper song index after an event has occured.\n *\n * @module core/AmplitudeHelpers\n */\n\n\n/**\n * AmplitudeJS Core Module\n * @module core/AmplitudeCore\n */\nvar AmplitudeHelpers = function () {\n\t/**\n  * Resets the config to the default state. This is called on initialize\n  * to ensure the user's config is what matters.\n  *\n  * Public Accessor: AmplitudeHelpers.resetConfig()\n  *\n  * @access public\n  */\n\tfunction resetConfig() {\n\t\t_config2.default.active_song = new Audio();\n\t\t_config2.default.active_metadata = {};\n\t\t_config2.default.active_album = '';\n\t\t_config2.default.active_index = 0;\n\t\t_config2.default.active_playlist = '';\n\t\t_config2.default.active_playlist = '';\n\t\t_config2.default.autoplay = false;\n\t\t_config2.default.playback_speed = 1.0;\n\t\t_config2.default.callbacks = {};\n\t\t_config2.default.songs = [];\n\t\t_config2.default.playlists = {};\n\t\t_config2.default.start_song = '';\n\t\t_config2.default.shuffled_playlists = {};\n\t\t_config2.default.shuffled_statuses = {};\n\t\t_config2.default.repeat = false;\n\t\t_config2.default.shuffle_list = {};\n\t\t_config2.default.shuffle_on = false;\n\t\t_config2.default.shuffle_active_index = 0;\n\t\t_config2.default.default_album_art = '';\n\t\t_config2.default.debug = false;\n\t\t_config2.default.handle_song_elements = true;\n\t\t_config2.default.volume = .5;\n\t\t_config2.default.pre_mute_volume = .5;\n\t\t_config2.default.volume_increment = 5;\n\t\t_config2.default.volume_decrement = 5;\n\t\t_config2.default.soundcloud_client = '';\n\t\t_config2.default.soundcloud_use_art = false;\n\t\t_config2.default.soundcloud_song_count = 0;\n\t\t_config2.default.soundcloud_songs_ready = 0;\n\t\t_config2.default.continue_next = true;\n\t}\n\n\t/**\n  * Writes out debug message to the console if enabled.\n  *\n  * Public Accessor: AmplitudeHelpers.writeDebugMessage( message )\n  *\n  * @access public\n  * @param {string} message - The string that gets printed to alert the user of a debugging error.\n  */\n\tfunction writeDebugMessage(message) {\n\t\tif (_config2.default.debug) {\n\t\t\tconsole.log(message);\n\t\t}\n\t}\n\n\t/**\n  * Runs a user defined callback method\n  *\n  * Public Accessor: AmplitudeHelpers.runCallback( callbackName )\n  *\n  * @access public\n  * @param {string} callbackName - The name of the callback we are going to run.\n  */\n\tfunction runCallback(callbackName) {\n\t\t/*\n  \tChecks to see if a user defined a callback method for the\n  \tcallback we are running.\n  */\n\t\tif (_config2.default.callbacks[callbackName]) {\n\t\t\t/*\n   \tBuild the callback function\n   */\n\t\t\tvar callbackFunction = _config2.default.callbacks[callbackName];\n\n\t\t\t/*\n   \tWrite a debug message stating the callback we are running\n   */\n\t\t\twriteDebugMessage('Running Callback: ' + callbackName);\n\n\t\t\t/*\n   \tRun the callback function and catch any errors\n   */\n\t\t\ttry {\n\t\t\t\tcallbackFunction();\n\t\t\t} catch (error) {\n\t\t\t\tif (error.message == \"CANCEL EVENT\") {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\twriteDebugMessage('Callback error: ' + error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Changes the active song in the config. This happens in multiple\n  * scenarios: The user clicks a play button that has an index that is\n  * different than what is currently playing, the song ends and the next\n  * song begins, etc.\n  *\n  * Public Accessor: AmplitudeHelpers.changeSong( songIndex )\n  *\n  * @access public\n  * @param {number} songIndex - The song index we are changing to\n  *\n  */\n\tfunction changeSong(songIndex) {\n\t\t/*\n  \tGrab the song at the index defined by the user.\n  */\n\t\tvar song = _config2.default.songs[songIndex];\n\n\t\t/*\n  \tStops the currently playing song so we can adjust\n  \twhat we need.\n  */\n\t\t_core2.default.stop();\n\n\t\t/**\n   * @todo: Stop Visualization\n   */\n\n\t\t/*\n  \tSet all play buttons to pause while we change\n  \tthe song.\n  */\n\t\t_visual2.default.setPlayPauseButtonsToPause();\n\n\t\t/*\n  \tSince it is a new song, we reset the song sliders. These\n  \treact to time updates and will eventually be updated but we\n  \tforce update them is if there is a song slider bound to a\n  \tspecific song, they won't update.\n  */\n\t\t_visual2.default.resetSongSliders();\n\n\t\t/*\n  \tResets the progress bars\n  */\n\t\t_visual2.default.resetSongPlayedProgressBars();\n\n\t\t/*\n  \tReset all the time place holders accordingly.\n  */\n\t\t_visual2.default.resetTimes();\n\n\t\t/*\n  \tRun a callback if an album is going\n  \tto change.\n  */\n\t\tif (checkNewAlbum(song)) {\n\t\t\trunCallback('album_change');\n\t\t}\n\n\t\t/*\n  \tSet the new song information so we can use the\n  \tactive meta data later on.\n  */\n\t\tsetNewSong(song, songIndex);\n\n\t\t/*\n  \tDisplay the new visual metadata now that the config has\n  \tbeen changed. This will show the new song.\n  */\n\t\t_visual2.default.displaySongMetadata();\n\n\t\t/*\n  \tSets the active container. This is a class that\n  \tdesigners can use on an element that contains the current\n  \tsong's controls to show it's highlighted.\n  */\n\t\t_visual2.default.setActiveContainer();\n\n\t\t/*\n  \tSets the active song's duration\n  */\n\t\t_visual2.default.syncSongDuration();\n\n\t\t/*\n  \tRun song change callback.\n  */\n\t\trunCallback('song_change');\n\t}\n\n\t/**\n  * Checks to see if the new song to be played is different than the song\n  * that is currently playing. To be true, the user would have selected\n  * play on a new song with a new index. To be false, the user would have\n  * clicked play/pause on the song that was playing.\n  *\n  * Public Accessor: AmplitudeHelpers.checkNewSong( songIndex )\n  *\n  * @access public\n  * @param {number} songIndex - The index of the new song to be played.\n  * @returns {boolean} True if we are setting a new song, false if we are not setting a new song.\n  */\n\tfunction checkNewSong(songIndex) {\n\t\tif (songIndex != _config2.default.active_index) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n  * Checks to see if there is a new album\n  *\n  * Public Accessor: AmplitudeHelpers.checkNewAlbum( new Album )\n  *\n  * @access public\n  * @param {string} newAlbum - Checks to see if the new song will have a new album.\n  * @returns {boolean} True if there is a new album, false if there is not a new ablum.\n  */\n\tfunction checkNewAlbum(newAlbum) {\n\t\tif (_config2.default.active_album != newAlbum) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n  * Checks to see if there is a new playlist\n  *\n  * Public Accessor: AmplitudeHelpers.checkNewPlaylist( playlist )\n  *\n  * @access public\n  * @param {string} playlist - The playlist passed in to check against the active playlist.\n  * @returns {boolean} True if there is a new playlist, false if there is not a new playlist.\n  */\n\tfunction checkNewPlaylist(playlist) {\n\t\tif (_config2.default.active_playlist != playlist) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n  * Sets the new song in the config. Sets the src of the audio object,\n  * updates the\tmetadata and sets the active album.\n  *\n  * @access private\n  * @param {object} song \t- The song object of the song we are changing to.\n  * @param {number} index \t- The index of the song in the songs object we are changing.\n  */\n\tfunction setNewSong(song, index) {\n\t\t_config2.default.active_song.src = song.url;\n\t\t_config2.default.active_metadata = song;\n\t\t_config2.default.active_album = song.album;\n\t\t_config2.default.active_index = index;\n\t}\n\n\t/**\n  * Shuffles individual songs in the config\n  * Based off of: http://www.codinghorror.com/blog/2007/12/the-danger-of-naivete.html\n  *\n  * Public Accessor: AmplitudeHelpers.shuffleSongs()\n  *\n  * @access public\n  */\n\tfunction shuffleSongs() {\n\t\t/*\n  \tBuilds a temporary array with the length of the config.\n  */\n\t\tvar shuffleTemp = new Array(_config2.default.songs.length);\n\n\t\t/*\n  \tSet the temporary array equal to the songs array.\n  */\n\t\tfor (var i = 0; i < _config2.default.songs.length; i++) {\n\t\t\tshuffleTemp[i] = _config2.default.songs[i];\n\t\t\tshuffleTemp[i].original_index = i;\n\t\t}\n\n\t\t/*\n  \tIterate ove rthe songs and generate random numbers to\n  \tswap the indexes of the shuffle array.\n  */\n\t\tfor (var _i = _config2.default.songs.length - 1; _i > 0; _i--) {\n\t\t\tvar randNum = Math.floor(Math.random() * _config2.default.songs.length + 1);\n\t\t\tshuffleSwap(shuffleTemp, _i, randNum - 1);\n\t\t}\n\n\t\t/*\n  \tSet the shuffle list to the shuffle temp.\n  */\n\t\t_config2.default.shuffle_list = shuffleTemp;\n\t}\n\n\t/**\n  * Shuffle songs in a playlist\n  *\n  * Public Accessor: AmplitudeHelpers.shufflePlaylistSongs( playlist )\n  *\n  * @access public\n  * @param {string} playlist - The playlist we are shuffling.\n  */\n\tfunction shufflePlaylistSongs(playlist) {\n\t\t/*\n  \tBuilds a temporary array with the length of the playlist songs.\n  */\n\t\tvar shuffleTemp = new Array(_config2.default.playlists[playlist].length);\n\n\t\t/*\n  \tSet the temporary array equal to the playlist array.\n  */\n\t\tfor (var i = 0; i < _config2.default.playlists[playlist].length; i++) {\n\t\t\tshuffleTemp[i] = _config2.default.songs[_config2.default.playlists[playlist][i]];\n\t\t\tshuffleTemp[i].original_index = _config2.default.playlists[playlist][i];\n\t\t}\n\n\t\t/*\n  \tIterate ove rthe songs and generate random numbers to\n  \tswap the indexes of the shuffle array.\n  */\n\t\tfor (var _i2 = _config2.default.playlists[playlist].length - 1; _i2 > 0; _i2--) {\n\t\t\tvar randNum = Math.floor(Math.random() * _config2.default.playlists[playlist].length + 1);\n\t\t\tshuffleSwap(shuffleTemp, _i2, randNum - 1);\n\t\t}\n\n\t\t/*\n  \tSet the shuffle list to the shuffle temp.\n  */\n\t\t_config2.default.shuffled_playlists[playlist] = shuffleTemp;\n\t}\n\n\t/**\n  * Swaps and randomizes the song shuffle.\n  *\n  * @access private\n  * @param {object} shuffleList \t- The list of songs that is going to be shuffled\n  * @param {number} original \t\t- The original index of he song in the songs array\n  * @param {number} random \t\t\t- The randomized index that will be the new index of the song in the shuffle array.\n  */\n\tfunction shuffleSwap(shuffleList, original, random) {\n\t\tvar temp = shuffleList[original];\n\t\tshuffleList[original] = shuffleList[random];\n\t\tshuffleList[random] = temp;\n\t}\n\n\t/**\n  * Sets the active playlist\n  *\n  * Public Accessor: AmplitudeHelpers.setActivePlaylist( playlist )\n  *\n  * @access public\n  * @param {string} playlist - The string of the playlist being set to active.\n  */\n\tfunction setActivePlaylist(playlist) {\n\t\t/*\n  \tIf the active playlist is different than the playlist being set,\n  \twe run the `playlist_changed` callback.\n  */\n\t\tif (_config2.default.active_playlist != playlist) {\n\t\t\trunCallback('playlist_changed');\n\t\t}\n\n\t\t/*\n  \tSet the active playlist to the playlist parameter.\n  */\n\t\t_config2.default.active_playlist = playlist;\n\t}\n\n\t/**\n  * Determines if the string passed in is a URL or not\n  *\n  * Public Accessor: AmplitudeHelpers.isURL( url )\n  *\n  * @access public\n  * @param {string} url - The string we are testing to see if it's a URL.\n  * @returns {boolean} True if the string is a url, false if it is not.\n  */\n\tfunction isURL(url) {\n\t\t/*\n  \tTest the string against the URL pattern and return if it matches\n  */\n\t\tvar pattern = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n\t\treturn pattern.test(url);\n\t}\n\n\t/**\n  * Determines if what is passed in is an integer or not.\n  *\n  * Public Accessor: AmplitudeHelpers.isInt( int )\n  *\n  * @access public\n  * @param {string|number} int - The variable we are testing to see is an integer or not.\n  * @returns {boolean} If the variable is an integer or not.\n  */\n\tfunction isInt(int) {\n\t\treturn !isNaN(int) && parseInt(Number(int)) == int && !isNaN(parseInt(int, 10));\n\t}\n\n\t/*\n \tReturns the public functions\n */\n\treturn {\n\t\tresetConfig: resetConfig,\n\t\twriteDebugMessage: writeDebugMessage,\n\t\trunCallback: runCallback,\n\t\tchangeSong: changeSong,\n\t\tcheckNewSong: checkNewSong,\n\t\tcheckNewAlbum: checkNewAlbum,\n\t\tcheckNewPlaylist: checkNewPlaylist,\n\t\tshuffleSongs: shuffleSongs,\n\t\tshufflePlaylistSongs: shufflePlaylistSongs,\n\t\tsetActivePlaylist: setActivePlaylist,\n\t\tisURL: isURL,\n\t\tisInt: isInt\n\t};\n}();\n\n/**\n * AmplitudeJS Visual Sync\n * @module visual/AmplitudeVisualSync\n*/\n/**\n * Imports the config module\n * @module config\n */\nexports.default = AmplitudeHelpers;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _helpers = __webpack_require__(10);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Helps with the syncing of the display data\n *\n * @module visual/AmplitudeVisualSync\n */\n/**\n * Imports the config module\n * @module config\n */\nvar AmplitudeVisualSync = function () {\n\t/**\n  * Visually displays the current time on the screen. This is called on\n  * time update for the current song.\n  *\n  * @access public\n  * @param {object} currentTime \t\t\t\t\t- An object containing the current time for the song in seconds, minutes, and hours.\n  * @param {float} completionPercentage\t- The percent of the way through the song the user is at.\n  */\n\tfunction syncCurrentTime(currentTime, completionPercentage) {\n\t\t/*\n  \tSet current hour display.\n  */\n\t\t_helpers2.default.syncCurrentHours(currentTime.hours);\n\n\t\t/*\n  \tSet current minute display.\n  */\n\t\t_helpers2.default.syncCurrentMinutes(currentTime.minutes);\n\n\t\t/*\n  \tSet current second display.\n  */\n\t\t_helpers2.default.syncCurrentSeconds(currentTime.seconds);\n\n\t\t/*\n  \tSet current time display.\n  */\n\t\t_helpers2.default.syncCurrentTime(currentTime);\n\n\t\t/*\n  \tSet all song sliders to be to the current percentage\n  \tof the song played.\n  */\n\t\tsyncMainSliderLocation(completionPercentage);\n\t\tsyncPlaylistSliderLocation(_config2.default.active_playlist, completionPercentage);\n\t\tsyncSongSliderLocation(_config2.default.active_playlist, _config2.default.active_index, completionPercentage);\n\n\t\t_helpers2.default.syncSongPlayedProgressBar(completionPercentage);\n\t}\n\n\t/**\n  * Visually sync all of the times to the initial time of 0. This is so\n  * we can keep all the players in sync\n  *\n  * @access public\n  */\n\tfunction resetTimes() {\n\t\t_helpers2.default.resetCurrentHours();\n\t\t_helpers2.default.resetCurrentMinutes();\n\t\t_helpers2.default.resetCurrentSeconds();\n\t\t_helpers2.default.resetCurrentTime();\n\t}\n\n\t/**\n  * Visually syncs the song sliders back to 0. This usually happens when\n  * a song has changed, we ensure that all song sliders get reset.\n  *\n  * @access public\n  */\n\tfunction resetSongSliders() {\n\t\tvar songSliders = document.getElementsByClassName(\"amplitude-song-slider\");\n\n\t\t/*\n  \tIterate over all of the song sliders and set them to\n  \t0 essentially resetting them.\n  */\n\t\tfor (var i = 0; i < songSliders.length; i++) {\n\t\t\tsongSliders[i].value = 0;\n\t\t}\n\t}\n\n\t/**\n  * Sets all of the song buffered progress bars to 0\n  *\n  * @access public\n  */\n\tfunction resetSongBufferedProgressBars() {\n\t\t/*\n  \tGets all of the song buffered progress bars.\n  */\n\t\tvar songBufferedProgressBars = document.getElementsByClassName(\"amplitude-buffered-progress\");\n\n\t\t/*\n  \tIterate over all of the song buffered progress bar and\n  \tset them to 0 which is like re-setting them.\n  */\n\t\tfor (var i = 0; i < songBufferedProgressBars.length; i++) {\n\t\t\tsongBufferedProgressBars[i].value = 0;\n\t\t}\n\t}\n\n\t/**\n  * Sets all of the song played progress bars to 0\n  *\n  * @access public\n  */\n\tfunction resetSongPlayedProgressBars() {\n\t\tvar songPlayedProgressBars = document.getElementsByClassName(\"amplitude-song-played-progress\");\n\n\t\tfor (var i = 0; i < songPlayedProgressBars.length; i++) {\n\t\t\tsongPlayedProgressBars[i].value = 0;\n\t\t}\n\t}\n\n\t/**\n  * Applies the class 'amplitude-active-song-container' to the element\n  * containing visual information regarding the active song.\n  *\n  * @access public\n  */\n\tfunction setActiveContainer() {\n\t\tvar songContainers = document.getElementsByClassName('amplitude-song-container');\n\n\t\t/*\n  \tRemoves all of the active song containrs.\n  */\n\t\tfor (var i = 0; i < songContainers.length; i++) {\n\t\t\tsongContainers[i].classList.remove('amplitude-active-song-container');\n\t\t}\n\n\t\t/*\n  \tFinds the active index and adds the active song container to the element\n  \tthat represents the song at the index.\n  */\n\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\tif (document.querySelectorAll('.amplitude-song-container[amplitude-song-index=\"' + _config2.default.active_index + '\"]')) {\n\t\t\t\tvar _songContainers = document.querySelectorAll('.amplitude-song-container[amplitude-song-index=\"' + _config2.default.active_index + '\"]');\n\n\t\t\t\tfor (var _i = 0; _i < _songContainers.length; _i++) {\n\t\t\t\t\tif (!_songContainers[_i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\t\t_songContainers[_i].classList.add('amplitude-active-song-container');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (document.querySelectorAll('.amplitude-song-container[amplitude-song-index=\"' + _config2.default.active_index + '\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]')) {\n\t\t\t\tvar _songContainers2 = document.querySelectorAll('.amplitude-song-container[amplitude-song-index=\"' + _config2.default.active_index + '\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]');\n\n\t\t\t\tfor (var _i2 = 0; _i2 < _songContainers2.length; _i2++) {\n\t\t\t\t\t_songContainers2[_i2].classList.add('amplitude-active-song-container');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Displays the active song's metadata. This is called after a song has\n  * been changed. This method takes the active song and displays the\n  * metadata. So once the new active song is set, we update all of the\n  * screen elements.\n  *\n  * @access public\n  */\n\tfunction displaySongMetadata() {\n\t\t/*\n  \tDefine the image meta data keys. These are managed separately\n  \tsince we aren't actually changing the inner HTML of these elements.\n  */\n\t\tvar imageMetaDataKeys = ['cover_art_url', 'station_art_url', 'podcast_episode_cover_art_url'];\n\n\t\t/*\n  \tThese are the ignored keys that we won't be worrying about displaying.\n  \tEvery other key in the song object can be displayed.\n  */\n\t\tvar ignoredKeys = ['url', 'live'];\n\n\t\t/*\n  \tGet all of the song info elements\n  */\n\t\tvar songInfoElements = document.querySelectorAll('[amplitude-song-info]');\n\n\t\t/*\n  \tIterate over all of the song info elements. We will either\n  \tset these to the new values, or clear them if the active song\n  \tdoesn't have the info set.\n  */\n\t\tfor (var i = 0; i < songInfoElements.length; i++) {\n\t\t\t/*\n   \tGet the info so we can check if the active meta data has the\n   \tkey.\n   */\n\t\t\tvar info = songInfoElements[i].getAttribute('amplitude-song-info');\n\n\t\t\t/*\n   \tGet the song info element playlist.\n   */\n\t\t\tvar playlist = songInfoElements[i].getAttribute('amplitude-playlist');\n\n\t\t\t/*\n   \tGet the main song info flag.\n   */\n\t\t\tvar main = songInfoElements[i].getAttribute('amplitude-main-song-info');\n\n\t\t\t/*\n   \tIf the playlists match or the element is a main element, then\n   \twe set the song info.\n   */\n\t\t\tif (_config2.default.active_playlist == playlist || main == 'true') {\n\t\t\t\t/*\n    \tIf the active metadata has the key, then we set it,\n    \totherwise we clear it. If it's an image element then\n    \twe default it to the default info if needed.\n    */\n\t\t\t\tif (_config2.default.active_metadata[info] != undefined) {\n\t\t\t\t\tif (imageMetaDataKeys.indexOf(info) >= 0) {\n\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', _config2.default.active_metadata[info]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsongInfoElements[i].innerHTML = _config2.default.active_metadata[info];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tWe look for the default album art because\n     \tthe actual key didn't exist. If the default album\n     \tart doesn't exist then we set the src attribute\n     \tto null.\n     */\n\t\t\t\t\tif (imageMetaDataKeys.indexOf(info) >= 0) {\n\t\t\t\t\t\tif (_config2.default.default_album_art != '') {\n\t\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', _config2.default.default_album_art);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', '');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsongInfoElements[i].innerHTML = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n   * Sets the first song in the playlist. This is used to fill in the meta\n  * data in the playlist\n  *\n  * @param {object} song \t\t\t- The song we are setting to be the first song in the playlist\n  * @param {string} playlist \t- Key of the playlist we are setting the first song in\n  */\n\tfunction setFirstSongInPlaylist(song, playlist) {\n\t\t/*\n  \tDefine the image meta data keys. These are managed separately\n  \tsince we aren't actually changing the inner HTML of these elements.\n  */\n\t\tvar imageMetaDataKeys = ['cover_art_url', 'station_art_url', 'podcast_episode_cover_art_url'];\n\n\t\t/*\n  \tThese are the ignored keys that we won't be worrying about displaying.\n  \tEvery other key in the song object can be displayed.\n  */\n\t\tvar ignoredKeys = ['url', 'live'];\n\n\t\t/*\n  \tGet all of the song info elements\n  */\n\t\tvar songInfoElements = document.querySelectorAll('[amplitude-song-info][amplitude-playlist=\"' + playlist + '\"]');\n\n\t\t/*\n  \tIterate over all of the song info elements. We will either\n  \tset these to the new values, or clear them if the active song\n  \tdoesn't have the info set.\n  */\n\t\tfor (var i = 0; i < songInfoElements.length; i++) {\n\t\t\t/*\n   \tGet the info so we can check if the active meta data has the\n   \tkey.\n   */\n\t\t\tvar info = songInfoElements[i].getAttribute('amplitude-song-info');\n\n\t\t\t/*\n   \tGet the song info element playlist.\n   */\n\t\t\tvar elementPlaylist = songInfoElements[i].getAttribute('amplitude-playlist');\n\n\t\t\t/*\n   \tIf the playlists match or the element is a main element, then\n   \twe set the song info.\n   */\n\t\t\tif (elementPlaylist == playlist) {\n\t\t\t\t/*\n    \tIf the active metadata has the key, then we set it,\n    \totherwise we clear it. If it's an image element then\n    \twe default it to the default info if needed.\n    */\n\t\t\t\tif (song[info] != undefined) {\n\t\t\t\t\tif (imageMetaDataKeys.indexOf(info) >= 0) {\n\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', song[info]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsongInfoElements[i].innerHTML = song[info];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tWe look for the default album art because\n     \tthe actual key didn't exist. If the default album\n     \tart doesn't exist then we set the src attribute\n     \tto null.\n     */\n\t\t\t\t\tif (imageMetaDataKeys.indexOf(info) >= 0) {\n\t\t\t\t\t\tif (song.default_album_art != '') {\n\t\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', song.default_album_art);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', '');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsongInfoElements[i].innerHTML = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Sets all of the visual playback speed buttons to have the right class\n  * to display the background image that represents the current playback\n  * speed.\n  *\n  * @access public\n  */\n\tfunction syncPlaybackSpeed() {\n\t\t/*\n  \tGets all of the playback speed classes.\n  */\n\t\tvar playbackSpeedClasses = document.getElementsByClassName(\"amplitude-playback-speed\");\n\n\t\t/*\n  \tIterates over all of the playback speed classes\n  \tapplying the right speed class for visual purposes.\n  */\n\t\tfor (var i = 0; i < playbackSpeedClasses.length; i++) {\n\t\t\t/*\n   \tRemoves all of the old playback speed classes.\n   */\n\t\t\tplaybackSpeedClasses[i].classList.remove('amplitude-playback-speed-10');\n\t\t\tplaybackSpeedClasses[i].classList.remove('amplitude-playback-speed-15');\n\t\t\tplaybackSpeedClasses[i].classList.remove('amplitude-playback-speed-20');\n\n\t\t\t/*\n   \tSwitch the current playback speed and apply the appropriate\n   \tspeed class.\n   */\n\t\t\tswitch (_config2.default.playback_speed) {\n\t\t\t\tcase 1:\n\t\t\t\t\tplaybackSpeedClasses[i].classList.add('amplitude-playback-speed-10');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1.5:\n\t\t\t\t\tplaybackSpeedClasses[i].classList.add('amplitude-playback-speed-15');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tplaybackSpeedClasses[i].classList.add('amplitude-playback-speed-20');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs the buffered progress bars to the current percentage in the config\n  *\n  * @access public\n  */\n\tfunction syncBufferedProgressBars() {\n\t\t/*\n  \tGets all of the song buffered progress bars.\n  */\n\t\tvar songBufferedProgressBars = document.getElementsByClassName(\"amplitude-buffered-progress\");\n\n\t\t/*\n  \tIterate over all of the song buffered progress bar and\n  \tset them to 0 which is like re-setting them.\n  */\n\t\tfor (var i = 0; i < songBufferedProgressBars.length; i++) {\n\t\t\tsongBufferedProgressBars[i].value = parseFloat(parseFloat(_config2.default.buffered) / 100);\n\t\t}\n\t}\n\n\t/**\n  * Visually syncs the volume sliders so they are all the same if there\n  * are more than one.\n  *\n  * @access public\n  */\n\tfunction syncVolumeSliders() {\n\t\tvar amplitudeVolumeSliders = document.getElementsByClassName(\"amplitude-volume-slider\");\n\n\t\t/*\n  \tIterates over all of the volume sliders for the song, setting the value\n  \tto the config value.\n  */\n\t\tfor (var i = 0; i < amplitudeVolumeSliders.length; i++) {\n\t\t\tamplitudeVolumeSliders[i].value = _config2.default.active_song.volume * 100;\n\t\t}\n\t}\n\n\t/**\n  * Sets all of the play pause buttons to paused.\n  *\n  * @access public\n  */\n\tfunction setPlayPauseButtonsToPause() {\n\t\t/*\n  \tGets all of the play pause elements\n  */\n\t\tvar playPauseElements = document.querySelectorAll('.amplitude-play-pause');\n\n\t\t/*\n  \tSets all of the elements to pause\n  */\n\t\tfor (var i = 0; i < playPauseElements.length; i++) {\n\t\t\t_helpers2.default.setElementPause(playPauseElements[i]);\n\t\t}\n\t}\n\n\t/**\n  * Syncs the main play pause buttons to the state of the active song.\n  *\n  * @param {string} state The state of the player\n  * @access public\n  */\n\tfunction syncMainPlayPause(state) {\n\t\t/*\n  \tEnsures we have a string for the state otherwise we grab the\n  \tstate from the config.\n  */\n\t\tif (typeof state != \"string\") {\n\t\t\tstate = _config2.default.active_song.paused ? \"paused\" : \"playing\";\n\t\t}\n\n\t\t/*\n  \tGet all play pause buttons.\n  */\n\t\tvar playPauseElements = document.querySelectorAll('.amplitude-play-pause[amplitude-main-play-pause=\"true\"]');\n\n\t\t/*\n  \tIterate over all of the play pause elements syncing the\n  \tdisplay visually.\n  */\n\t\tfor (var i = 0; i < playPauseElements.length; i++) {\n\t\t\t/*\n   \tDetermines what classes we should add and remove\n   \tfrom the elements.\n   */\n\t\t\tswitch (state) {\n\t\t\t\tcase 'playing':\n\t\t\t\t\t_helpers2.default.setElementPlay(playPauseElements[i]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'paused':\n\t\t\t\t\t_helpers2.default.setElementPause(playPauseElements[i]);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs the main playlist play pause buttons to the state of the active song.\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist we are setting the play pause state for.\n  * @param {string} state \t\t\t- Either playing or paused for the state of the active song.\n  */\n\tfunction syncPlaylistPlayPause(playlist, state) {\n\t\t/*\n  \tEnsures we have a string for the state otherwise we grab the\n  \tstate from the config.\n  */\n\t\tif (typeof state != \"string\") {\n\t\t\tstate = _config2.default.active_song.paused ? \"paused\" : \"playing\";\n\t\t}\n\n\t\t/*\n  \tGet all of the main playlist play pause elements\n  */\n\t\tvar playlistPlayPauseElements = document.querySelectorAll('.amplitude-play-pause[amplitude-playlist-main-play-pause=\"true\"]');\n\n\t\t/*\n  \tIterate over the play pause elements, syncing the state accordingly.\n  */\n\t\tfor (var i = 0; i < playlistPlayPauseElements.length; i++) {\n\t\t\t/*\n   \tIf the element has the same playlist attribute as the playlist\n   \tpassed in and the state is playing, we set the element to\n   \tbe playing otherwise we set it to pause. Setting to pause\n   \tmeans the element doesn't match the active playlist or the\n   \tstate is paused.\n   */\n\t\t\tif (playlistPlayPauseElements[i].getAttribute('amplitude-playlist') == playlist && state == 'playing') {\n\n\t\t\t\t_helpers2.default.setElementPlay(playlistPlayPauseElements[i]);\n\t\t\t} else {\n\t\t\t\t_helpers2.default.setElementPause(playlistPlayPauseElements[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs the song play pause buttons to the state of the active song.\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist we are setting the play pause state for.\n  * @param {int} song \t\t\t\t\t- The index of the song we are syncing the state for\n  * @param {string} state \t\t\t- Either playing or paused for the state of the active song.\n  */\n\tfunction syncSongPlayPause(playlist, song, state) {\n\t\t/*\n  \tEnsures we have a string for the state otherwise we grab the\n  \tstate from the config.\n  */\n\t\tif (typeof state != \"string\") {\n\t\t\tstate = _config2.default.active_song.paused ? \"paused\" : \"playing\";\n\t\t}\n\n\t\t/*\n  \tIf the playlist is null or empty, we make sure that any song\n  \tthat is a part of a playlist is set to paused.\n  */\n\t\tif (playlist == null || playlist == '') {\n\t\t\t/*\n   \tGet all of the individual song play pause buttons. These have an\n   \tamplitude-song-index attribute. Some have amplitude-playlist which\n   \tmeans they are individual songs within a playlist.\n   */\n\t\t\tvar songPlayPauseElements = document.querySelectorAll('.amplitude-play-pause[amplitude-song-index]');\n\n\t\t\t/*\n   \tIterate over all of the song play pause elements\n   */\n\t\t\tfor (var i = 0; i < songPlayPauseElements.length; i++) {\n\t\t\t\t/*\n    \tIf the song element has an attribute for amplitude-playlist then\n    \twe set it to paused no matter what because the state of the player\n    \tis not in a playlist mode.\n    */\n\t\t\t\tif (songPlayPauseElements[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\t_helpers2.default.setElementPause(songPlayPauseElements[i]);\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tIf the state of the song is playing and the song index matches the\n     \tindex of the song we have, we set the element to playing otherwise\n     \twe set the element to paused.\n     */\n\t\t\t\t\tif (state == 'playing' && songPlayPauseElements[i].getAttribute('amplitude-song-index') == song) {\n\t\t\t\t\t\t_helpers2.default.setElementPlay(songPlayPauseElements[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_helpers2.default.setElementPause(songPlayPauseElements[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tGet all of the individual song play pause buttons. These have an\n   \tamplitude-song-index attribute. Some have amplitude-playlist which\n   \tmeans they are individual songs within a playlist.\n   */\n\t\t\tvar _songPlayPauseElements = document.querySelectorAll('.amplitude-play-pause[amplitude-song-index]');\n\n\t\t\t/*\n   \tIterate over all of the individual play pause elements.\n   */\n\t\t\tfor (var _i3 = 0; _i3 < _songPlayPauseElements.length; _i3++) {\n\t\t\t\t/*\n    \tSince we have an active playlist this time, we want any stand alone\n    \tsongs to be set to paused since the scope is within a playlist.\n    \t\tWe check to see if the element has an amplitude-playlist attribute.\n    */\n\t\t\t\tif (_songPlayPauseElements[_i3].hasAttribute('amplitude-playlist')) {\n\n\t\t\t\t\t/*\n     \tCheck to see if the song index matches the index passed in and the\n     \tplaylist matches the scoped playlist we are looking for and the\n     \tstate of the player is playing, then we set the element to play. If those\n     \tthree parameters are not met, set the element to pause.\n     */\n\t\t\t\t\tif (_songPlayPauseElements[_i3].getAttribute('amplitude-song-index') == song && _songPlayPauseElements[_i3].getAttribute('amplitude-playlist') == playlist && state == 'playing') {\n\t\t\t\t\t\t_helpers2.default.setElementPlay(_songPlayPauseElements[_i3]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_helpers2.default.setElementPause(_songPlayPauseElements[_i3]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tSet any individual songs (songs outside of a playlist scope) to pause\n     \tsince we are in the scope of a playlist.\n     */\n\t\t\t\t\t_helpers2.default.setElementPause(_songPlayPauseElements[_i3]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs repeat for all of the repeat buttons. Users\n  * can apply styles to the 'amplitude-repeat-on' and\n  * 'amplitude-repeat-off' classes. They represent the state\n  * of the player.\n  */\n\tfunction syncRepeat() {\n\t\t/*\n  \tGets all of the repeat classes\n  */\n\t\tvar repeatClasses = document.getElementsByClassName(\"amplitude-repeat\");\n\n\t\t/*\n  \tIterate over all of the repeat classes. If repeat is on,\n  \tthen add the 'amplitude-repeat-on' class and remove the\n  \t'amplitude-repeat-off' class. If it's off, then do the\n  \topposite.\n  */\n\t\tfor (var i = 0; i < repeatClasses.length; i++) {\n\t\t\tif (_config2.default.repeat) {\n\t\t\t\trepeatClasses[i].classList.add('amplitude-repeat-on');\n\t\t\t\trepeatClasses[i].classList.remove('amplitude-repeat-off');\n\t\t\t} else {\n\t\t\t\trepeatClasses[i].classList.remove('amplitude-repeat-on');\n\t\t\t\trepeatClasses[i].classList.add('amplitude-repeat-off');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs repeat for all of the playlist repeat buttons. Users\n  * can apply styles to the `amplitude-repeat-on` and `amplitude-repeat-off`\n  * classes. They repreent the state of the playlist in the player.\n  */\n\tfunction syncRepeatPlaylist(playlist) {\n\t\t/*\n   Gets all of the repeat buttons.\n  */\n\t\tvar repeatButtons = document.getElementsByClassName(\"amplitude-repeat\");\n\n\t\t/*\n   Iterate over all of the repeat buttons\n  */\n\t\tfor (var i = 0; i < repeatButtons.length; i++) {\n\t\t\t/*\n    Ensure that the repeat button belongs to matches the\n    playlist we are syncing the state for.\n   */\n\t\t\tif (repeatButtons[i].getAttribute('amplitude-playlist') == playlist) {\n\t\t\t\t/*\n     If the state of the playlist is shuffled on, true, then\n     we add the 'amplitude-repeat-on' class and remove the\n     'amplitude-repeat-off' class. If the player is not shuffled\n     then we do the opposite.\n    */\n\t\t\t\tif (_config2.default.repeat_statuses[playlist]) {\n\t\t\t\t\trepeatButtons[i].classList.add('amplitude-repeat-on');\n\t\t\t\t\trepeatButtons[i].classList.remove('amplitude-repeat-off');\n\t\t\t\t} else {\n\t\t\t\t\trepeatButtons[i].classList.add('amplitude-repeat-off');\n\t\t\t\t\trepeatButtons[i].classList.remove('amplitude-repeat-on');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs repeat for all of the repeat song buttons. Users\n  * can apply styles to the 'amplitude-repeat-song-on' and\n  * 'amplitude-repeat-song-off' classes. They represent the state\n  * of the player.\n  */\n\tfunction syncRepeatSong() {\n\t\t/*\n  \tGets all of the repeat song classes\n  */\n\t\tvar repeatSongClasses = document.getElementsByClassName(\"amplitude-repeat-song\");\n\n\t\t/*\n  \tIterate over all of the repeat song classes. If repeat is on,\n  \tthen add the 'amplitude-repeat-song-on' class and remove the\n  \t'amplitude-repeat-song-off' class. If it's off, then do the\n  \topposite.\n  */\n\t\tfor (var i = 0; i < repeatSongClasses.length; i++) {\n\t\t\tif (_config2.default.repeat_song) {\n\t\t\t\trepeatSongClasses[i].classList.add('amplitude-repeat-song-on');\n\t\t\t\trepeatSongClasses[i].classList.remove('amplitude-repeat-song-off');\n\t\t\t} else {\n\t\t\t\trepeatSongClasses[i].classList.remove('amplitude-repeat-song-on');\n\t\t\t\trepeatSongClasses[i].classList.add('amplitude-repeat-song-off');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs mute for all of the mute buttons. This represents the\n  * state of the player if it's muted or not.\n  *\n  * @access public\n  * @param {string} state \t- The muted state of the player.\n  */\n\tfunction syncMute(state) {\n\t\t/*\n  \tGet all of the mute buttons.\n  */\n\t\tvar muteClasses = document.getElementsByClassName(\"amplitude-mute\");\n\n\t\t/*\n  \tIterate over all of the mute classes. If the state of the player\n  \tis not-muted then we add the amplitude-not-muted classe and remove\n  \tthe amplitude muted class otherwise we do the opposite.\n  */\n\t\tfor (var i = 0; i < muteClasses.length; i++) {\n\t\t\tif (!state) {\n\t\t\t\tmuteClasses[i].classList.add('amplitude-not-muted');\n\t\t\t\tmuteClasses[i].classList.remove('amplitude-muted');\n\t\t\t} else {\n\t\t\t\tmuteClasses[i].classList.remove('amplitude-not-muted');\n\t\t\t\tmuteClasses[i].classList.add('amplitude-muted');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs the global shuffle button visual state.\n  *\n  * @access public\n  * @param {boolean} state  \t- The shuffled state of the player.\n  */\n\tfunction syncShuffle(state) {\n\t\t/*\n  \tGets the shuffle buttons.\n  */\n\t\tvar shuffleButtons = document.getElementsByClassName(\"amplitude-shuffle\");\n\n\t\t/*\n  \tIterate over all of the shuffle buttons.\n  */\n\t\tfor (var i = 0; i < shuffleButtons.length; i++) {\n\t\t\t/*\n   \tEnsure the shuffle button doesn't belong to a playlist. We have\n   \ta separate method for that.\n   */\n\t\t\tif (shuffleButtons[i].getAttribute('amplitude-playlist') == null) {\n\t\t\t\t/*\n    \tIf the state of the player is shuffled on, true, then\n    \twe add the 'amplitude-shuffle-on' class and remove the\n    \t'amplitude-shuffle-off' class. If the player is not shuffled\n    \tthen we do the opposite.\n    */\n\t\t\t\tif (state) {\n\t\t\t\t\tshuffleButtons[i].classList.add('amplitude-shuffle-on');\n\t\t\t\t\tshuffleButtons[i].classList.remove('amplitude-shuffle-off');\n\t\t\t\t} else {\n\t\t\t\t\tshuffleButtons[i].classList.add('amplitude-shuffle-off');\n\t\t\t\t\tshuffleButtons[i].classList.remove('amplitude-shuffle-on');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs the playlist shuffle button visual state.\n  *\n  * @access public\n  * @param {boolean} state \t- The shuffled state of the player.\n  * @param {string} playlist - The playlist string the shuffle button belongs to.\n  */\n\tfunction syncPlaylistShuffle(state, playlist) {\n\t\t/*\n  \tGets all of the shuffle buttons.\n  */\n\t\tvar shuffleButtons = document.getElementsByClassName(\"amplitude-shuffle\");\n\n\t\t/*\n  \tIterate over all of the shuffle buttons\n  */\n\t\tfor (var i = 0; i < shuffleButtons.length; i++) {\n\t\t\t/*\n   \tEnsure that the playlist the shuffle button belongs to matches the\n   \tplaylist we are syncing the state for.\n   */\n\t\t\tif (shuffleButtons[i].getAttribute('amplitude-playlist') == playlist) {\n\t\t\t\t/*\n    \tIf the state of the playlist is shuffled on, true, then\n    \twe add the 'amplitude-shuffle-on' class and remove the\n    \t'amplitude-shuffle-off' class. If the player is not shuffled\n    \tthen we do the opposite.\n    */\n\t\t\t\tif (state) {\n\t\t\t\t\tshuffleButtons[i].classList.add('amplitude-shuffle-on');\n\t\t\t\t\tshuffleButtons[i].classList.remove('amplitude-shuffle-off');\n\t\t\t\t} else {\n\t\t\t\t\tshuffleButtons[i].classList.add('amplitude-shuffle-off');\n\t\t\t\t\tshuffleButtons[i].classList.remove('amplitude-shuffle-on');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Syncs the main slider location\n  *\n  * @access public\n  * @param {number} location \t- The location of the song as a percentage.\n  */\n\tfunction syncMainSliderLocation(location) {\n\t\t/*\n  \tEnsure we have a location that's a number\n  */\n\t\tlocation = !isNaN(location) ? location : 0;\n\n\t\t/*\n  \tGets the main song sliders\n  */\n\t\tvar mainSongSliders = document.querySelectorAll('.amplitude-song-slider[amplitude-main-song-slider=\"true\"]');\n\n\t\t/*\n  \tIterates over all of the main sliders and sets the value to the\n  \tpercentage of the song played.\n  */\n\t\tfor (var i = 0; i < mainSongSliders.length; i++) {\n\t\t\tmainSongSliders[i].value = location;\n\t\t}\n\t}\n\n\t/**\n  * Syncs playlist song slider locations\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist we are setting the song slider for.\n  * @param {number} location \t- The location of the song as a percentage.\n  */\n\tfunction syncPlaylistSliderLocation(playlist, location) {\n\t\t/*\n  \tEnsure we have a location that's a number\n  */\n\t\tlocation = !isNaN(location) ? location : 0;\n\n\t\t/*\n  \tGets the playlist song sliders\n  */\n\t\tvar playlistSongSliders = document.querySelectorAll('.amplitude-song-slider[amplitude-playlist-song-slider=\"true\"][amplitude-playlist=\"' + playlist + '\"]');\n\n\t\t/*\n  \tIterates over all of the playlist sliders and sets the value to the\n  \tpercentage of the song played.\n  */\n\t\tfor (var i = 0; i < playlistSongSliders.length; i++) {\n\t\t\tplaylistSongSliders[i].value = location;\n\t\t}\n\t}\n\n\t/**\n  * Syncs individual song slider locations\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist we are setting the song slider for.\n  * @param {number} songIndex \t- The index of the song we are adjusting the song slider for.\n  * @param {number} location \t- The location of the song as a percentage.\n  */\n\tfunction syncSongSliderLocation(playlist, songIndex, location) {\n\t\t/*\n  \tEnsure we have a location that's a number\n  */\n\t\tlocation = !isNaN(location) ? location : 0;\n\t\t/*\n  \tIf the playlist is set, we get all of the individual song sliders\n  \tthat relate to the song and the playlist.\n  */\n\t\tif (playlist != '' && playlist != null) {\n\t\t\t/*\n   \tGets the song sliders for the individual songs and the\n   \tplaylist\n   */\n\t\t\tvar songSliders = document.querySelectorAll('.amplitude-song-slider[amplitude-playlist=\"' + playlist + '\"][amplitude-song-index=\"' + songIndex + '\"]');\n\n\t\t\t/*\n   \tIterates over all of the playlist sliders and set the value to the\n   \tpercentage of the song played.\n   */\n\t\t\tfor (var i = 0; i < songSliders.length; i++) {\n\t\t\t\tsongSliders[i].value = location;\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tGet the individual song slider by index\n   */\n\t\t\tvar _songSliders = document.querySelectorAll('.amplitude-song-slider[amplitude-song-index=\"' + songIndex + '\"]');\n\n\t\t\t/*\n   \tIterats over all of the song sliders that have the index of\n   \tthe song we are sliding. If the song doesn't have a playlist\n   \tattribute, we set the location.\n   */\n\t\t\tfor (var _i4 = 0; _i4 < _songSliders.length; _i4++) {\n\t\t\t\tif (!_songSliders[_i4].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\tif (location != 0) {\n\t\t\t\t\t\t_songSliders[_i4].value = location;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Sets the volume slider location\n  *\n  * @access public\n  * @param {number} volume \t- The volume from 0 - 1 for song volume.\n  */\n\tfunction syncVolumeSliderLocation(volume) {\n\t\t/*\n  \tGets all of the volume sliders\n  */\n\t\tvar volumeSliders = document.querySelectorAll('.amplitude-volume-slider');\n\n\t\t/*\n  \tIterates over all of the sliders and sets their volume\n  \tto the volume of the song.\n  */\n\t\tfor (var i = 0; i < volumeSliders.length; i++) {\n\t\t\tvolumeSliders[i].value = volume;\n\t\t}\n\t}\n\n\t/**\n  * Syncs the song's duration\n  *\n  * @access public\n  * @param {object} currentTime \t\t- Object containing information about the current time of the song.\n  * @param {object} songDuration \t- Object containing information about the duration of the song.\n  */\n\tfunction syncSongDuration(currentTime, songDuration) {\n\t\t/*\n  \tSet duration hour display.\n  */\n\t\t_helpers2.default.syncDurationHours(songDuration != undefined && !isNaN(songDuration.hours) ? songDuration.hours : '00');\n\n\t\t/*\n  \tSet duration minute display.\n  */\n\t\t_helpers2.default.syncDurationMinutes(songDuration != undefined && !isNaN(songDuration.minutes) ? songDuration.minutes : '00');\n\n\t\t/*\n  \tSet duration second display.\n  */\n\t\t_helpers2.default.syncDurationSeconds(songDuration != undefined && !isNaN(songDuration.seconds) ? songDuration.seconds : '00');\n\n\t\t/*\n  \tSet duration time display.\n  */\n\t\t_helpers2.default.syncDurationTime(songDuration != undefined ? songDuration : {});\n\n\t\t/*\n  \tSet count down time display.\n  */\n\t\t_helpers2.default.syncCountDownTime(currentTime, songDuration);\n\t}\n\n\t/**\n  * Sets the meta data for songs loaded in the songs array\n  */\n\tfunction syncSongsMetaData() {\n\t\t/*\n  \tDefine the image meta data keys. These are managed separately\n  \tsince we aren't actually changing the inner HTML of these elements.\n  */\n\t\tvar imageMetaDataKeys = ['cover_art_url', 'station_art_url', 'podcast_episode_cover_art_url'];\n\n\t\t/*\n  \tThese are the ignored keys that we won't be worrying about displaying.\n  \tEvery other key in the song object can be displayed.\n  */\n\t\tvar ignoredKeys = ['url', 'live'];\n\n\t\t/*\n  \tGet all of the song info elements\n  */\n\t\tvar songInfoElements = document.querySelectorAll('[amplitude-song-info]');\n\n\t\t/*\n  \tIterate over all of the song info elements. We will either\n  \tset these to the new values, or clear them if the active song\n  \tdoesn't have the info set.\n  */\n\t\tfor (var i = 0; i < songInfoElements.length; i++) {\n\n\t\t\t/*\n   \tFor this method we do not want the element to have any playlist or\n   \tmain song info. This way we aren't adjusting the main song information for the\n   \tglobal player or the playlist player.\n   */\n\t\t\tif (songInfoElements[i].getAttribute('amplitude-playlist') == null && songInfoElements[i].getAttribute('amplitude-main-song-info') == null && songInfoElements[i].getAttribute('amplitude-song-index') != null) {\n\n\t\t\t\t/*\n    \t\tGet the info so we can check if the active meta data has the\n    \t\tkey.\n    \t*/\n\t\t\t\tvar info = songInfoElements[i].getAttribute('amplitude-song-info');\n\t\t\t\tvar index = songInfoElements[i].getAttribute('amplitude-song-index');\n\n\t\t\t\t/*\n    \tMake sure that the song index they are referencing is defined.\n    */\n\t\t\t\tif (_config2.default.songs[index][info] != undefined) {\n\n\t\t\t\t\t/*\n     \tIf it's an image meta data key, then we set the src attribute of\n     \tthe element. Otherwise we set the inner HTML of the element.\n     */\n\t\t\t\t\tif (imageMetaDataKeys.indexOf(info) >= 0) {\n\t\t\t\t\t\tsongInfoElements[i].setAttribute('src', _config2.default.songs[index][info]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsongInfoElements[i].innerHTML = _config2.default.songs[index][info];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n \tReturns the publically available functions\n \t@TODO Re-order to order of methods in module\n */\n\treturn {\n\t\tsyncCurrentTime: syncCurrentTime,\n\t\tresetTimes: resetTimes,\n\t\tresetSongSliders: resetSongSliders,\n\t\tresetSongPlayedProgressBars: resetSongPlayedProgressBars,\n\t\tresetSongBufferedProgressBars: resetSongBufferedProgressBars,\n\t\tsetActiveContainer: setActiveContainer,\n\t\tdisplaySongMetadata: displaySongMetadata,\n\t\tsyncPlaybackSpeed: syncPlaybackSpeed,\n\t\tsyncBufferedProgressBars: syncBufferedProgressBars,\n\t\tsyncVolumeSliders: syncVolumeSliders,\n\t\tsetPlayPauseButtonsToPause: setPlayPauseButtonsToPause,\n\t\tsetFirstSongInPlaylist: setFirstSongInPlaylist,\n\t\tsyncMainPlayPause: syncMainPlayPause,\n\t\tsyncPlaylistPlayPause: syncPlaylistPlayPause,\n\t\tsyncSongPlayPause: syncSongPlayPause,\n\t\tsyncRepeat: syncRepeat,\n\t\tsyncRepeatSong: syncRepeatSong,\n\t\tsyncRepeatPlaylist: syncRepeatPlaylist,\n\t\tsyncMute: syncMute,\n\t\tsyncShuffle: syncShuffle,\n\t\tsyncPlaylistShuffle: syncPlaylistShuffle,\n\t\tsyncMainSliderLocation: syncMainSliderLocation,\n\t\tsyncPlaylistSliderLocation: syncPlaylistSliderLocation,\n\t\tsyncSongSliderLocation: syncSongSliderLocation,\n\t\tsyncVolumeSliderLocation: syncVolumeSliderLocation,\n\t\tsyncSongDuration: syncSongDuration,\n\t\tsyncSongsMetaData: syncSongsMetaData\n\t};\n}();\n\n/**\n * Imports the Amplitude Visual Sync Helpers to keep the display in sync\n * @module visual/AmplitudeVisualSyncHelpers\n */\nexports.default = AmplitudeVisualSync;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _helpers = __webpack_require__(1);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _visual = __webpack_require__(2);\n\nvar _visual2 = _interopRequireDefault(_visual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Interacts directly with native functions of the Audio element. Logic\n * leading up to these methods are handled by click handlers which call\n * helpers and visual synchronizers. These are the core functions of AmplitudeJS.\n * Every other function that leads to these prepare the information to be\n * acted upon by these functions.\n *\n * @module core/AmplitudeCore\n */\n\n\n/**\n * AmplitudeJS Core Helpers\n * @module core/helpers\n */\nvar AmplitudeCore = function () {\n\t/**\n  * Plays the active song. If the current song is live, it reconnects\n  * the stream before playing.\n  *\n  * Public Accessor: Amplitude.play()\n  *\n  * @access public\n  */\n\tfunction play() {\n\t\t/*\n  \tRun the before play callback\n  */\n\t\t_helpers2.default.runCallback('before_play');\n\n\t\t/*\n  \tIf the audio is live we re-conenct the stream.\n  */\n\t\tif (_config2.default.active_metadata.live) {\n\t\t\treconnectStream();\n\t\t}\n\n\t\t/*\n  \tMobile remote sources need to be reconnected on play. I think this is\n  \tbecause mobile browsers are optimized not to load all resources\n  \tfor speed reasons. We only do this if mobile and the paused button\n  \tis not clicked. If the pause button was clicked then we don't reconnect\n  \tor the user will lose their place in the stream.\n  */\n\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) && !_config2.default.paused) {\n\t\t\treconnectStream();\n\t\t}\n\n\t\t/*\n  \tPlay the song and set the playback rate to the playback\n  \tspeed.\n  */\n\t\t_config2.default.active_song.play();\n\t\t_config2.default.active_song.playbackRate = _config2.default.playback_speed;\n\n\t\t/*\n  \tRun the after play callback\n  */\n\t\t_helpers2.default.runCallback('after_play');\n\t}\n\n\t/**\n  * Pauses the active song. If it's live, it disconnects the stream.\n  *\n  * Public Accessor: Amplitude.pause()\n  *\n  * @access public\n  */\n\tfunction pause() {\n\t\t/*\n  \tRun the before pause callback.\n  */\n\t\t_helpers2.default.runCallback('before_pause');\n\n\t\t/*\n  \tPause the active song.\n  */\n\t\t_config2.default.active_song.pause();\n\n\t\t/*\n  \tFlag that pause button was clicked.\n  */\n\t\t_config2.default.paused = true;\n\n\t\t/*\n  \tIf the song is live, we disconnect the stream so we aren't\n  \tsaving it to memory.\n  */\n\t\tif (_config2.default.active_metadata.live) {\n\t\t\tdisconnectStream();\n\t\t}\n\n\t\t/*\n  \tRun the after pause callback.\n  */\n\t\t_helpers2.default.runCallback('after_pause');\n\t}\n\n\t/**\n  * Stops the active song by setting the current song time to 0.\n  * When the user resumes, it will be from the beginning.\n  * If it's a live stream it disconnects.\n  *\n  * Public Accessor: Amplitude.stop()\n  *\n  * @access public\n  */\n\tfunction stop() {\n\t\t/*\n  \tRuns the before stop callback.\n  */\n\t\t_helpers2.default.runCallback('before_stop');\n\n\t\t/*\n  \tSet the current time of the song to 0 which will reset the song.\n  */\n\t\tif (_config2.default.active_song.currentTime != 0) {\n\t\t\t_config2.default.active_song.currentTime = 0;\n\t\t}\n\n\t\t/*\n  \tRun pause so the song will stop\n  */\n\t\t_config2.default.active_song.pause();\n\n\t\t/*\n  \tIf the song is live, disconnect the stream.\n  */\n\t\tif (_config2.default.active_metadata.live) {\n\t\t\tdisconnectStream();\n\t\t}\n\n\t\t/*\n  \tRun the after stop callback\n  */\n\t\t_helpers2.default.runCallback('after_stop');\n\t}\n\n\t/**\n  * Sets the song volume.\n  *\n  * Public Accessor: Amplitude.setVolume( volumeLevel )\n  *\n  * @access public\n  * @param {number} volumeLevel - A number between 1 and 100 as a percentage of\n  * min to max for a volume level.\n  */\n\tfunction setVolume(volumeLevel) {\n\t\t/*\n  \tIf the volume is set to mute somewhere else, we sync the display.\n  */\n\t\tif (volumeLevel == 0) {\n\t\t\t_visual2.default.syncMute(true);\n\t\t} else {\n\t\t\t_visual2.default.syncMute(false);\n\t\t}\n\n\t\t/*\n  \tSet the volume of the active song.\n  */\n\t\t_config2.default.active_song.volume = volumeLevel / 100;\n\t}\n\n\t/**\n  * Sets the song percentage. If it's a live song, we ignore this because\n  * we can't skip ahead. This is an issue if you have a playlist with\n  * a live source.\n  *\n  * Public Accessor: Amplitude.setSongLocation( songPercentage )\n  *\n  * @access public\n  * @param {number} songPercentage - A number between 1 and 100 as a percentage of song completion.\n  */\n\tfunction setSongLocation(songPercentage) {\n\t\t/*\n  \tAs long as the song is not live, we can set the current time of the\n  \tsong to the percentage the user passed in.\n  */\n\t\tif (!_config2.default.active_metadata.live) {\n\t\t\t_config2.default.active_song.currentTime = _config2.default.active_song.duration * (song_percentage / 100);\n\t\t}\n\t}\n\n\t/**\n  * Skips to a location in a song\n  *\n  * Public Accessor: Amplitude.skipToLocation( seconds )\n  *\n  * @access public\n  * @param {number} seconds - An integer containing the seconds to skip to\n  */\n\tfunction skipToLocation(seconds) {\n\t\t/*\n  \tWhen the active song can be played through, we can check to\n  \tsee if the seconds will work. We only bind the event handler\n  \tonce and remove it once it's fired.\n  */\n\t\t_config2.default.active_song.addEventListener('canplaythrough', function () {\n\t\t\t/*\n   \tIf the active song duration is greater than or equal to the\n   \tamount of seconds the user wants to skip to and the seconds\n   \tis greater than 0, we skip to the seconds defined.\n   */\n\t\t\tif (_config2.default.active_song.duration >= seconds && seconds > 0) {\n\t\t\t\t_config2.default.active_song.currentTime = seconds;\n\t\t\t} else {\n\t\t\t\t_helpers2.default.writeDebugMessage('Amplitude can\\'t skip to a location greater than the duration of the audio or less than 0');\n\t\t\t}\n\t\t}, { once: true });\n\t}\n\n\t/**\n  * Disconnects the live stream\n  *\n  * Public Accessor: Amplitude.disconnectStream()\n  *\n  * @access public\n  */\n\tfunction disconnectStream() {\n\t\t_config2.default.active_song.src = '';\n\t\t_config2.default.active_song.load();\n\t}\n\n\t/**\n  * Reconnects the live stream\n  *\n  * Public Accessor: Amplitude.reconnectStream()\n  *\n  * @access public\\\n  */\n\tfunction reconnectStream() {\n\t\t_config2.default.active_song.src = _config2.default.active_metadata.url;\n\t\t_config2.default.active_song.load();\n\t}\n\n\t/**\n  * When you pass a song object it plays that song right awawy.  It sets\n  * the active song in the config to the song you pass in and synchronizes\n  * the visuals.\n  *\n  * Public Accessor: Amplitude.playNow( song )\n  *\n  * @access public\n  * @param {object} song - JSON representation of a song.\n  */\n\tfunction playNow(song) {\n\t\t/*\n  \tMakes sure the song object has a URL associated with it\n  \tor there will be nothing to play.\n  */\n\t\tif (song.url) {\n\t\t\t_config2.default.active_song.src = song.url;\n\t\t\t_config2.default.active_metadata = song;\n\t\t\t_config2.default.active_album = song.album;\n\t\t} else {\n\t\t\t/*\n   \tWrite error message since the song passed in doesn't\n   \thave a URL.\n   */\n\t\t\t_helpers2.default.writeDebugMessage('The song needs to have a URL!');\n\t\t}\n\n\t\t/*\n  \tSets the main song control status visual\n  */\n\t\t_visual2.default.syncMainPlayPause('playing');\n\n\t\t/*\n  \tUpdate the song meta data\n  */\n\t\t_visual2.default.displaySongMetadata();\n\n\t\t/*\n  \tReset the song sliders, song progress bar info, and\n  \treset times. This ensures everything stays in sync.\n  */\n\t\t_visual2.default.resetSongSliders();\n\n\t\t_visual2.default.resetSongPlayedProgressBars();\n\n\t\t_visual2.default.resetTimes();\n\n\t\t/*\n  \tPlays the song.\n  */\n\t\tplay();\n\t}\n\n\t/**\n  * Plays the song at a specific index in the songs array\n  *\n  * Public Accessor: Amplitude.playSongAtIndex( song )\n  *\n  * @access public\n  * @param {number} index - The number representing the song in the songs array\n  */\n\tfunction playSongAtIndex(index) {\n\t\t/*\n  \tStop the current song.\n  */\n\t\tstop();\n\n\t\t/*\n  \tDetermine if there is a new playlist, if so set the active playlist and change the song.\n  */\n\t\tif (_helpers2.default.checkNewPlaylist(null)) {\n\t\t\t_helpers2.default.setActivePlaylist(null);\n\n\t\t\t_helpers2.default.changeSong(index);\n\t\t}\n\n\t\t/*\n  \tCheck if the song is new. If so, change the song.\n  */\n\t\tif (_helpers2.default.checkNewSong(index)) {\n\t\t\t_helpers2.default.changeSong(index);\n\t\t}\n\n\t\t/*\n   Sync all of the play pause buttons.\n  */\n\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'playing');\n\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'playing');\n\n\t\t/*\n   Play the song\n  */\n\t\tplay();\n\t}\n\n\t/**\n * Plays a song at the index passed in for the playlist provided. The index passed\n * in should be the index of the song in the playlist and not the songs array.\n *\n * @access public\n * @param {number} index \t\t- The number representing the song in the playlist array.\n * @param {string} playlist \t- The key string representing the playlist we are playing the song from.\n *\n */\n\tfunction playPlaylistSongAtIndex(index, playlist) {\n\t\t/*\n  \t\tStop the current song.\n  */\n\t\tstop();\n\n\t\t/*\n  \t\tGet the index of the song in the songs array. This is the integer at the index\n  \tin the playlist.\n  */\n\t\tvar songIndex = _config2.default.playlists[playlist][index];\n\n\t\t/*\n  \t\tDetermine if there is a new playlist, if so set the active playlist and change the song.\n  */\n\t\tif (_helpers2.default.checkNewPlaylist(playlist)) {\n\t\t\t_helpers2.default.setActivePlaylist(playlist);\n\n\t\t\t_helpers2.default.changeSong(songIndex);\n\t\t}\n\n\t\t/*\n  \t\tCheck if the song is new. If so, change the song.\n  */\n\t\tif (_helpers2.default.checkNewSong(songIndex)) {\n\t\t\t_helpers2.default.changeSong(songIndex);\n\t\t}\n\n\t\t/*\n  \tSync all of the play pause buttons.\n  */\n\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'playing');\n\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'playing');\n\n\t\t/*\n  \tPlay the song\n  */\n\t\tplay();\n\t}\n\n\t/**\n  * Sets the playback speed for the song.\n  *\n  * @param {number} playbackSpeed The speed we want the song to play back at.\n  */\n\tfunction setPlaybackSpeed(playbackSpeed) {\n\t\t/*\n  \tSet the config playback speed.\n  */\n\t\t_config2.default.playback_speed = playbackSpeed;\n\n\t\t/*\n  \tSet the active song playback rate.\n  */\n\t\t_config2.default.active_song.playbackRate = _config2.default.playback_speed;\n\t}\n\n\t/*\n \tReturn publically facing functions\n */\n\treturn {\n\t\tplay: play,\n\t\tpause: pause,\n\t\tstop: stop,\n\t\tsetVolume: setVolume,\n\t\tsetSongLocation: setSongLocation,\n\t\tskipToLocation: skipToLocation,\n\t\tdisconnectStream: disconnectStream,\n\t\treconnectStream: reconnectStream,\n\t\tplayNow: playNow,\n\t\tplaySongAtIndex: playSongAtIndex,\n\t\tplayPlaylistSongAtIndex: playPlaylistSongAtIndex,\n\t\tsetPlaybackSpeed: setPlaybackSpeed\n\t};\n}();\n\n/**\n * AmplitudeJS Visual Sync\n * @module visual/visual\n*/\n/**\n * Imports the config module\n * @module config\n */\nexports.default = AmplitudeCore;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _helpers = __webpack_require__(1);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _handlers = __webpack_require__(7);\n\nvar _handlers2 = _interopRequireDefault(_handlers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n|----------------------------------------------------------------------------------------------------\n| EVENTS METHODS\n|----------------------------------------------------------------------------------------------------\n| These methods are called when we need to bind events to certain elements.\n|\n| METHODS:\n| \tinitializeEvents()\n|\tbindPlay()\n|\tbindPause()\n|\tbindPlayPause()\n|\tbindStop()\n|\tbindMute()\n|\tbindVolumeUp()\n|\tbindVolumeDown()\n|\tbindSongSlider()\n|\tbindVolumeSlider()\n|\tbindNext()\n|\tbindPrev()\n|\tbindShuffle()\n|\tbindRepeat()\n|\tbindPlaybackSpeed()\n|\tbindSkipTo()\n|      bindProgress()\n*/\nvar AmplitudeEvents = function () {\n\t/*--------------------------------------------------------------------------\n \tInitializes the handlers for the events listened to by Amplitude\n --------------------------------------------------------------------------*/\n\tfunction initializeEvents() {\n\t\t/*\n  \tWrite out debug message\n  */\n\t\t_helpers2.default.writeDebugMessage('Beginning initialization of event handlers..');\n\n\t\t/*\n  \tSets flag that the screen is moving and not a tap\n  */\n\t\tdocument.addEventListener('touchmove', function () {\n\t\t\t_config2.default.is_touch_moving = true;\n\t\t});\n\n\t\t/*\n  \tOn touch end if it was a touch move event, set moving to\n  \tfalse\n  */\n\t\tdocument.addEventListener('touchend', function () {\n\t\t\tif (_config2.default.is_touch_moving) {\n\t\t\t\t_config2.default.is_touch_moving = false;\n\t\t\t}\n\t\t});\n\n\t\t/*\n  \tOn time update for the audio element, update visual displays that\n  \trepresent the time on either a visualized element or time display.\n  */\n\t\tbindTimeUpdate();\n\n\t\t/*\n  \tBinds key down event handlers for matching key codes to functions.\n  */\n\t\tbindKeyDownEventHandlers();\n\n\t\t/*\n  \tWhen the audio element has ended playing, we handle the song\n  \tending. In a single song or multiple modular song instance,\n  \tthis just synchronizes the visuals for time and song time\n  \tvisualization, but for a playlist it determines whether\n  \tit should play the next song or not.\n  */\n\t\tbindSongEnded();\n\n\t\t/*\n  \tBinds progress event so we can see how much of the song is loaded.\n  */\n\t\tbindProgress();\n\n\t\t/*\n  \tBinds 'amplitude-play' event handlers\n  */\n\t\tbindPlay();\n\n\t\t/*\n  \tBinds 'amplitude-pause' event handlers.\n  */\n\t\tbindPause();\n\n\t\t/*\n  \tBinds 'amplitude-play-pause' event handlers.\n  */\n\t\tbindPlayPause();\n\n\t\t/*\n  \tBinds 'amplitude-stop' event handlers.\n  */\n\t\tbindStop();\n\n\t\t/*\n  \tBinds 'amplitude-mute' event handlers.\n  */\n\t\tbindMute();\n\n\t\t/*\n  \tBinds 'amplitude-volume-up' event handlers\n  */\n\t\tbindVolumeUp();\n\n\t\t/*\n  \tBinds 'amplitude-volume-down' event handlers\n  */\n\t\tbindVolumeDown();\n\n\t\t/*\n  \tBinds 'amplitude-song-slider' event handlers\n  */\n\t\tbindSongSlider();\n\n\t\t/*\n  \tBinds 'amplitude-volume-slider' event handlers.\n  */\n\t\tbindVolumeSlider();\n\n\t\t/*\n  \tBinds 'amplitude-next' event handlers.\n  */\n\t\tbindNext();\n\n\t\t/*\n  \tBinds 'amplitude-prev' event handlers.\n  */\n\t\tbindPrev();\n\n\t\t/*\n  \tBinds 'amplitude-shuffle' event handlers.\n  */\n\t\tbindShuffle();\n\n\t\t/*\n  \tBinds 'amplitude-repeat' event handlers.\n  */\n\t\tbindRepeat();\n\n\t\t/*\n  \tBinds 'amplitude-playback-speed' event handlers.\n  */\n\t\tbindPlaybackSpeed();\n\n\t\t/*\n  \tBinds 'amplitude-skip-to' event handlers.\n  */\n\t\tbindSkipTo();\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tOn time update for the audio element, update visual displays that\n \t\trepresent the time on either a visualized element or time display.\n --------------------------------------------------------------------------*/\n\tfunction bindTimeUpdate() {\n\t\t_config2.default.active_song.removeEventListener('timeupdate', _handlers2.default.updateTime);\n\t\t_config2.default.active_song.addEventListener('timeupdate', _handlers2.default.updateTime);\n\n\t\t// also bind change of duratuion\n\t\t_config2.default.active_song.removeEventListener('durationchange', _handlers2.default.updateTime);\n\t\t_config2.default.active_song.addEventListener('durationchange', _handlers2.default.updateTime);\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tOn keydown, we listen to what key got pressed so we can map the key to\n \ta function. This allows the user to map pause and play, next, etc. to key\n \tpresses.\n --------------------------------------------------------------------------*/\n\tfunction bindKeyDownEventHandlers() {\n\t\tdocument.removeEventListener(\"keydown\", _helpers2.default.keydown);\n\t\tdocument.addEventListener(\"keydown\", _handlers2.default.keydown);\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tWhen the audio element has ended playing, we handle the song\n \tending. In a single song or multiple modular song instance,\n \tthis just synchronizes the visuals for time and song time\n \tvisualization, but for a playlist it determines whether\n \tit should play the next song or not.\n --------------------------------------------------------------------------*/\n\tfunction bindSongEnded() {\n\t\t_config2.default.active_song.removeEventListener('ended', _handlers2.default.songEnded);\n\t\t_config2.default.active_song.addEventListener('ended', _handlers2.default.songEnded);\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tAs the audio is loaded, the progress event gets fired. We bind into this\n \tto grab the buffered percentage of the song. We can then add more elements\n \tto show the buffered amount.\n --------------------------------------------------------------------------*/\n\tfunction bindProgress() {\n\t\t_config2.default.active_song.removeEventListener('progress', _handlers2.default.progess);\n\t\t_config2.default.active_song.addEventListener('progress', _handlers2.default.progress);\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-play\"\n \t\tBinds click and touchend events for amplitude play buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindPlay() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-play\n  */\n\t\tvar play_classes = document.getElementsByClassName(\"amplitude-play\");\n\n\t\t/*\n  \tIterates over all of the play classes and binds the event interaction\n  \tmethod to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < play_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tplay_classes[i].removeEventListener('touchend', _handlers2.default.play);\n\t\t\t\tplay_classes[i].addEventListener('touchend', _handlers2.default.play);\n\t\t\t} else {\n\t\t\t\tplay_classes[i].removeEventListener('click', _handlers2.default.play);\n\t\t\t\tplay_classes[i].addEventListener('click', _handlers2.default.play);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-pause\"\n \t\tBinds click and touchend events for amplitude pause buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindPause() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-pause\n  */\n\t\tvar pause_classes = document.getElementsByClassName(\"amplitude-pause\");\n\n\t\t/*\n  \tIterates over all of the pause classes and binds the event interaction\n  \tmethod to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < pause_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tpause_classes[i].removeEventListener('touchend', _handlers2.default.pause);\n\t\t\t\tpause_classes[i].addEventListener('touchend', _handlers2.default.pause);\n\t\t\t} else {\n\t\t\t\tpause_classes[i].removeEventListener('click', _handlers2.default.pause);\n\t\t\t\tpause_classes[i].addEventListener('click', _handlers2.default.pause);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-play-pause\"\n \t\tBinds click and touchend events for amplitude play pause buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindPlayPause() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-play-pause\n  */\n\t\tvar play_pause_classes = document.getElementsByClassName(\"amplitude-play-pause\");\n\n\t\t/*\n  \tIterates over all of the play/pause classes and binds the event interaction\n  \tmethod to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < play_pause_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tplay_pause_classes[i].removeEventListener('touchend', _handlers2.default.playPause);\n\t\t\t\tplay_pause_classes[i].addEventListener('touchend', _handlers2.default.playPause);\n\t\t\t} else {\n\t\t\t\tplay_pause_classes[i].removeEventListener('click', _handlers2.default.playPause);\n\t\t\t\tplay_pause_classes[i].addEventListener('click', _handlers2.default.playPause);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-stop\"\n \t\tBinds click and touchend events for amplitude stop buttons\n --------------------------------------------------------------------------*/\n\tfunction bindStop() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-stop\n  */\n\t\tvar stop_classes = document.getElementsByClassName(\"amplitude-stop\");\n\n\t\t/*\n  \tIterates over all of the stop classes and binds the event interaction\n  \tmethod to the element.  If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < stop_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tstop_classes[i].removeEventListener('touchend', _handlers2.default.stop);\n\t\t\t\tstop_classes[i].addEventListener('touchend', _handlers2.default.stop);\n\t\t\t} else {\n\t\t\t\tstop_classes[i].removeEventListener('click', _handlers2.default.stop);\n\t\t\t\tstop_classes[i].addEventListener('click', _handlers2.default.stop);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-mute\"\n \t\tBinds click and touchend events for amplitude mute buttons\n --------------------------------------------------------------------------*/\n\tfunction bindMute() {\n\t\t/*\n  \tGets all of the elements with the class amplitue-mute\n  */\n\t\tvar mute_classes = document.getElementsByClassName(\"amplitude-mute\");\n\n\t\t/*\n  \tIterates over all of the mute classes and binds the event interaction\n  \tmethod to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < mute_classes.length; i++) {\n\t\t\t/*\n   \tWARNING: If iOS, we don't do anything because iOS does not allow the\n   \tvolume to be adjusted through anything except the buttons on the side of\n   \tthe device.\n   */\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\t/*\n    \tChecks for an iOS device and displays an error message if debugging\n    \tis turned on.\n    */\n\t\t\t\tif (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n\t\t\t\t\t_helpers2.default.writeDebugMessage('iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4');\n\t\t\t\t} else {\n\t\t\t\t\tmute_classes[i].removeEventListener('touchend', _handlers2.default.mute);\n\t\t\t\t\tmute_classes[i].addEventListener('touchend', _handlers2.default.mute);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmute_classes[i].removeEventListener('click', _handlers2.default.mute);\n\t\t\t\tmute_classes[i].addEventListener('click', _handlers2.default.mute);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-volume-up\"\n \t\tBinds click and touchend events for amplitude volume up buttons\n --------------------------------------------------------------------------*/\n\tfunction bindVolumeUp() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-volume-up\n  */\n\t\tvar volume_up_classes = document.getElementsByClassName(\"amplitude-volume-up\");\n\n\t\t/*\n  \tIterates over all of the volume up classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < volume_up_classes.length; i++) {\n\t\t\t/*\n   \tWARNING: If iOS, we don't do anything because iOS does not allow the\n   \tvolume to be adjusted through anything except the buttons on the side of\n   \tthe device.\n   */\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\t/*\n    \tChecks for an iOS device and displays an error message if debugging\n    \tis turned on.\n    */\n\t\t\t\tif (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n\t\t\t\t\t_helpers2.default.writeDebugMessage('iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4');\n\t\t\t\t} else {\n\t\t\t\t\tvolume_up_classes[i].removeEventListener('touchend', _handlers2.default.volumeUp);\n\t\t\t\t\tvolume_up_classes[i].addEventListener('touchend', _handlers2.default.volumeUp);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvolume_up_classes[i].removeEventListener('click', _handlers2.default.volumeUp);\n\t\t\t\tvolume_up_classes[i].addEventListener('click', _handlers2.default.volumeUp);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-volume-down\"\n \t\tBinds click and touchend events for amplitude volume down buttons\n --------------------------------------------------------------------------*/\n\tfunction bindVolumeDown() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-volume-down\n  */\n\t\tvar volume_down_classes = document.getElementsByClassName(\"amplitude-volume-down\");\n\n\t\t/*\n  \tIterates over all of the volume down classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < volume_down_classes.length; i++) {\n\t\t\t/*\n   \tWARNING: If iOS, we don't do anything because iOS does not allow the\n   \tvolume to be adjusted through anything except the buttons on the side of\n   \tthe device.\n   */\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\t/*\n    \tChecks for an iOS device and displays an error message if debugging\n    \tis turned on.\n    */\n\t\t\t\tif (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n\t\t\t\t\t_helpers2.default.writeDebugMessage('iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4');\n\t\t\t\t} else {\n\t\t\t\t\tvolume_down_classes[i].removeEventListener('touchend', _handlers2.default.volumeDown);\n\t\t\t\t\tvolume_down_classes[i].addEventListener('touchend', _handlers2.default.volumeDown);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvolume_down_classes[i].removeEventListener('click', _handlers2.default.volumeDown);\n\t\t\t\tvolume_down_classes[i].addEventListener('click', _handlers2.default.volumeDown);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-song-slider\"\n \t\tBinds change and input events for amplitude song slider inputs\n --------------------------------------------------------------------------*/\n\tfunction bindSongSlider() {\n\t\t/*\n  \tGets browser so if we need to apply overrides, like we usually\n  \thave to do for anything cool in IE, we can do that.\n  */\n\t\tvar ua = window.navigator.userAgent;\n\t\tvar msie = ua.indexOf(\"MSIE \");\n\n\t\t/*\n  \tGets all of the elements with the class amplitude-song-slider\n  */\n\t\tvar song_sliders = document.getElementsByClassName(\"amplitude-song-slider\");\n\n\t\t/*\n  \tIterates over all of the song slider classes and binds the event interaction\n  \tmethods to the element. If the browser is IE we listen to the change event\n  \twhere if it is anything else, it's the input method.\n  */\n\t\tfor (var i = 0; i < song_sliders.length; i++) {\n\t\t\tif (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n\t\t\t\tsong_sliders[i].removeEventListener('change', _handlers2.default.songSlider);\n\t\t\t\tsong_sliders[i].addEventListener('change', _handlers2.default.songSlider);\n\t\t\t} else {\n\t\t\t\tsong_sliders[i].removeEventListener('input', _handlers2.default.songSlider);\n\t\t\t\tsong_sliders[i].addEventListener('input', _handlers2.default.songSlider);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-volume-slider\"\n \t\tBinds change and input events for amplitude volume slider inputs\n --------------------------------------------------------------------------*/\n\tfunction bindVolumeSlider() {\n\t\t/*\n  \tGets browser so if we need to apply overrides, like we usually\n  \thave to do for anything cool in IE, we can do that.\n  */\n\t\tvar ua = window.navigator.userAgent;\n\t\tvar msie = ua.indexOf(\"MSIE \");\n\n\t\t/*\n  Gets all of the elements with the class amplitude-volume-slider\n  */\n\t\tvar volume_sliders = document.getElementsByClassName(\"amplitude-volume-slider\");\n\n\t\t/*\n  \tIterates over all of the volume slider classes and binds the event interaction\n  \tmethods to the element. If the browser is IE we listen to the change event\n  \twhere if it is anything else, it's the input method.\n  */\n\t\tfor (var i = 0; i < volume_sliders.length; i++) {\n\t\t\t/*\n   \tWARNING: If iOS, we don't do anything because iOS does not allow the\n   \tvolume to be adjusted through anything except the buttons on the side of\n   \tthe device.\n   */\n\t\t\tif (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n\t\t\t\t_helpers2.default.writeDebugMessage('iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4');\n\t\t\t} else {\n\t\t\t\tif (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n\t\t\t\t\tvolume_sliders[i].removeEventListener('change', _handlers2.default.volumeSlider);\n\t\t\t\t\tvolume_sliders[i].addEventListener('change', _handlers2.default.volumeSlider);\n\t\t\t\t} else {\n\t\t\t\t\tvolume_sliders[i].removeEventListener('input', _handlers2.default.volumeSlider);\n\t\t\t\t\tvolume_sliders[i].addEventListener('input', _handlers2.default.volumeSlider);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-next\"\n \t\tBinds click and touchend events for amplitude next buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindNext() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-next\n        */\n\t\tvar next_classes = document.getElementsByClassName(\"amplitude-next\");\n\n\t\t/*\n  \tIterates over all of the next classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < next_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tnext_classes[i].removeEventListener('touchend', _handlers2.default.next);\n\t\t\t\tnext_classes[i].addEventListener('touchend', _handlers2.default.next);\n\t\t\t} else {\n\t\t\t\tnext_classes[i].removeEventListener('click', _handlers2.default.next);\n\t\t\t\tnext_classes[i].addEventListener('click', _handlers2.default.next);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-prev\"\n \t\tBinds click and touchend events for amplitude prev buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindPrev() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-prev\n  */\n\t\tvar prev_classes = document.getElementsByClassName(\"amplitude-prev\");\n\n\t\t/*\n  \tIterates over all of the prev classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < prev_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tprev_classes[i].removeEventListener('touchend', _handlers2.default.prev);\n\t\t\t\tprev_classes[i].addEventListener('touchend', _handlers2.default.prev);\n\t\t\t} else {\n\t\t\t\tprev_classes[i].removeEventListener('click', _handlers2.default.prev);\n\t\t\t\tprev_classes[i].addEventListener('click', _handlers2.default.prev);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-shuffle\"\n \t\tBinds click and touchend events for amplitude shuffle buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindShuffle() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-shuffle\n  */\n\t\tvar shuffle_classes = document.getElementsByClassName(\"amplitude-shuffle\");\n\n\t\t/*\n  \tIterates over all of the shuffle classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < shuffle_classes.length; i++) {\n\t\t\t/*\n   \tSince we are re-binding everything we remove any classes that signify\n   \ta state of the shuffle control.\n   */\n\t\t\tshuffle_classes[i].classList.remove('amplitude-shuffle-on');\n\t\t\tshuffle_classes[i].classList.add('amplitude-shuffle-off');\n\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tshuffle_classes[i].removeEventListener('touchend', _handlers2.default.shuffle);\n\t\t\t\tshuffle_classes[i].addEventListener('touchend', _handlers2.default.shuffle);\n\t\t\t} else {\n\t\t\t\tshuffle_classes[i].removeEventListener('click', _handlers2.default.shuffle);\n\t\t\t\tshuffle_classes[i].addEventListener('click', _handlers2.default.shuffle);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-repeat\"\n \t\tBinds click and touchend events for amplitude repeat buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindRepeat() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-repeat\n  */\n\t\tvar repeat_classes = document.getElementsByClassName(\"amplitude-repeat\");\n\n\t\t/*\n  \tIterates over all of the repeat classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < repeat_classes.length; i++) {\n\t\t\t/*\n   \tSince we are re-binding everything we remove any classes that signify\n   \ta state of the repeat control.\n   */\n\t\t\trepeat_classes[i].classList.remove('amplitude-repeat-on');\n\t\t\trepeat_classes[i].classList.add('amplitude-repeat-off');\n\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\trepeat_classes[i].removeEventListener('touchend', _handlers2.default.repeat);\n\t\t\t\trepeat_classes[i].addEventListener('touchend', _handlers2.default.repeat);\n\t\t\t} else {\n\t\t\t\trepeat_classes[i].removeEventListener('click', _handlers2.default.repeat);\n\t\t\t\trepeat_classes[i].addEventListener('click', _handlers2.default.repeat);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-playback-speed\"\n \t\tBinds click and touchend events for amplitude playback speed buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindPlaybackSpeed() {\n\t\t/*\n  \tGets all of the elements with the class amplitude-playback-speed\n  */\n\t\tvar playback_speed_classes = document.getElementsByClassName(\"amplitude-playback-speed\");\n\n\t\t/*\n  \tIterates over all of the playback speed classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it is click.\n  */\n\t\tfor (var i = 0; i < playback_speed_classes.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tplayback_speed_classes[i].removeEventListener('touchend', _handlers2.default.playbackSpeed);\n\t\t\t\tplayback_speed_classes[i].addEventListener('touchend', _handlers2.default.playbackSpeed);\n\t\t\t} else {\n\t\t\t\tplayback_speed_classes[i].removeEventListener('click', _handlers2.default.playbackSpeed);\n\t\t\t\tplayback_speed_classes[i].addEventListener('click', _handlers2.default.playbackSpeed);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tBINDS: class=\"amplitude-skip-to\"\n \t\tBinds click and touchend events for amplitude skip to buttons.\n --------------------------------------------------------------------------*/\n\tfunction bindSkipTo() {\n\t\t/*\n  \tGets all of the skip to elements with the class 'amplitude-skip-to'\n  */\n\t\tvar skipToClasses = document.getElementsByClassName(\"amplitude-skip-to\");\n\n\t\t/*\n  \tIterates over all of the skip to classes and binds the event interaction\n  \tmethods to the element. If the browser is mobile, then the event is touchend\n  \totherwise it's a click.\n  */\n\t\tfor (var i = 0; i < skipToClasses.length; i++) {\n\t\t\tif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\t\tskipToClasses[i].removeEventListener('touchend', _handlers2.default.skipTo);\n\t\t\t\tskipToClasses[i].addEventListener('touchend', _handlers2.default.skipTo);\n\t\t\t} else {\n\t\t\t\tskipToClasses[i].removeEventListener('click', _handlers2.default.skipTo);\n\t\t\t\tskipToClasses[i].addEventListener('click', _handlers2.default.skipTo);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tinitializeEvents: initializeEvents\n\t};\n}(); /*\n     \tImport the necessary classes and config to use\n     \twith the events.\n     */\nexports.default = AmplitudeEvents;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _visual = __webpack_require__(2);\n\nvar _visual2 = _interopRequireDefault(_visual);\n\nvar _core = __webpack_require__(3);\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _helpers = __webpack_require__(1);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * These methods help handle interactions whether it's computation or shuffling\n * songs.\n *\n * @module events/AmplitudeEventsHelpers\n */\n\n\n/**\n * Imports the Amplitude Core module\n * @module core/AmplitudeCore\n */\n/**\n * Imports the config module\n * @module config\n */\nvar AmplitudeEventsHelpers = function () {\n\t/**\n  * Computes the current song time. Breaks down where the song is into\n  * hours, minutes, seconds and formats it to be displayed to the user.\n  *\n  * @access public\n  */\n\tfunction computeCurrentTimes() {\n\t\t/*\n  \tInitialize the current time object that will be returned.\n  */\n\t\tvar currentTime = {};\n\n\t\t/*\n  \tComputes the current seconds for the song.\n  */\n\t\tvar currentSeconds = (Math.floor(_config2.default.active_song.currentTime % 60) < 10 ? '0' : '') + Math.floor(_config2.default.active_song.currentTime % 60);\n\n\t\t/*\n  \tComputes the current minutes for the song.\n  */\n\t\tvar currentMinutes = Math.floor(_config2.default.active_song.currentTime / 60);\n\n\t\t/*\n  \tInitialize the current hours variable.\n  */\n\t\tvar currentHours = '00';\n\n\t\t/*\n  \tIf the current minutes is less than 10, we add a leading 0.\n  */\n\t\tif (currentMinutes < 10) {\n\t\t\tcurrentMinutes = '0' + currentMinutes;\n\t\t}\n\n\t\t/*\n  \tIf the user is more than 60 minutes into the song, then\n  \twe extract the hours.\n  */\n\t\tif (currentMinutes >= 60) {\n\t\t\tcurrentHours = Math.floor(currentMinutes / 60);\n\t\t\tcurrentMinutes = currentMinutes % 60;\n\n\t\t\t/*\n   \tIf the user is less than 10 minutes in, we append the\n   \tadditional 0 to the minutes.\n   */\n\t\t\tif (currentMinutes < 10) {\n\t\t\t\tcurrentMinutes = '0' + currentMinutes;\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tBuild a clean current time object and send back the appropriate information.\n  */\n\t\tcurrentTime.seconds = currentSeconds;\n\t\tcurrentTime.minutes = currentMinutes;\n\t\tcurrentTime.hours = currentHours;\n\n\t\treturn currentTime;\n\t}\n\n\t/**\n  * Computes the current song duration. Breaks down where the song is into\n  * hours, minutes, seconds and formats it to be displayed to the user.\n  *\n  * @access public\n  */\n\tfunction computeSongDuration() {\n\t\t/*\n  \tInitialize the song duration object that will be returned.\n  */\n\t\tvar songDuration = {};\n\n\t\t/*\n  \tComputes the duration of the song's seconds.\n  */\n\t\tvar songDurationSeconds = (Math.floor(_config2.default.active_song.duration % 60) < 10 ? '0' : '') + Math.floor(_config2.default.active_song.duration % 60);\n\n\t\t/*\n  \tComputes the duration of the song's minutes.\n  */\n\t\tvar songDurationMinutes = Math.floor(_config2.default.active_song.duration / 60);\n\n\t\t/*\n  \tInitialize the hours duration variable.\n  */\n\t\tvar songDurationHours = '0';\n\n\t\t/*\n  \tIf the song duration minutes is less than 10, we add a leading 0.\n  */\n\t\tif (songDurationMinutes < 10) {\n\t\t\tsongDurationMinutes = '0' + songDurationMinutes;\n\t\t}\n\n\t\t/*\n  \tIf there is more than 60 minutes in the song, then we\n  \textract the hours.\n  */\n\t\tif (songDurationMinutes >= 60) {\n\t\t\tsongDurationHours = Math.floor(songDurationMinutes / 60);\n\t\t\tsongDurationMinutes = songDurationMinutes % 60;\n\n\t\t\t/*\n   \tIf the song duration minutes is less than 10 we append\n   \tthe additional 0.\n   */\n\t\t\tif (songDurationMinutes < 10) {\n\t\t\t\tsongDurationMinutes = '0' + songDurationMinutes;\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tBuild a clean song duration object and send back the appropriate information.\n  */\n\t\tsongDuration.seconds = songDurationSeconds;\n\t\tsongDuration.minutes = songDurationMinutes;\n\t\tsongDuration.hours = songDurationHours;\n\n\t\treturn songDuration;\n\t}\n\n\t/**\n  * Computes the song completion percentage.\n  *\n  * @access public\n  */\n\tfunction computeSongCompletionPercentage() {\n\t\treturn _config2.default.active_song.currentTime / _config2.default.active_song.duration * 100;\n\t}\n\n\t/**\n  * Sets the current song's playback speed\n  *\n  * @access public\n  * @param {number} speed \t- The float with a base of 1 representing the speed\n  *\n  */\n\tfunction setPlaybackSpeed(speed) {\n\t\t_core2.default.setPlaybackSpeed(speed);\n\t}\n\n\t/**\n  * Sets the state of the repeat for the current song.\n  *\n  * @access public\n  * @param {boolean} repeat - A boolean representing whether the repeat should be on or off\n  * @param {string} playlist - The key of the playlist for repeating\n  */\n\tfunction setRepeat(repeat, playlist) {\n\t\t/*\n    If the playlist is null, then we are dealing with the global\n    repeat status.\n  */\n\t\tif (playlist == null) {\n\t\t\t/*\n   \tSet the global repeat to be toggled\n   */\n\t\t\t_config2.default.repeat = repeat;\n\n\t\t\t/*\n   \tVisually sync repeat\n   */\n\t\t\t_visual2.default.syncRepeat();\n\t\t} else {\n\t\t\t/*\n   \tSet the playlist repeat to be toggled.\n   */\n\t\t\t_config2.default.repeat_statuses[playlist] = repeat;\n\n\t\t\t/*\n   \tVisually sync playlist repeat\n   */\n\t\t\t_visual2.default.syncRepeatPlaylist(playlist);\n\t\t}\n\n\t\t/** When song ends and in playlis mode and done with playlist check repeat  **/\n\t}\n\n\t/**\n  * Sets the state of the repeat song\n  *\n  * @access public\n  * @param {boolean} repeat - A boolean representing whether the repeat shoudl be on or off for the song.\n  */\n\tfunction setRepeatSong(repeat) {\n\t\t_config2.default.repeat_song = repeat;\n\t}\n\n\t/**\n  * Sets the main play pause buttons to the current state of the song.\n  *\n  * @access public\n  */\n\tfunction setMainPlayPause() {\n\t\t/*\n  \tDetermines what action we should take based on the\n  \tstate of the song.\n  */\n\t\tif (_config2.default.active_song.paused) {\n\t\t\t/*\n   \tThe song was paused so we sync visually for the song\n   \tthat is playing and we play the song.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('playing');\n\n\t\t\t/*\n   \tIf there is an active playlist, then\n   \twe need to sync that playlist's play pause\n   \tbutton to the state of playing.\n   */\n\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'playing');\n\n\t\t\t/*\n   \tSync the song play pause buttons\n   */\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'playing');\n\n\t\t\t/*\n   \tPlay the song\n   */\n\t\t\t_core2.default.play();\n\t\t} else {\n\t\t\t/*\n   \tThe song was playing so we sync visually for the song\n   \tto be paused and we pause the song.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('paused');\n\n\t\t\t/*\n   \tIf there is an active playlist, then\n   \twe need to sync that playlist's play pause\n   \tbutton to the state of paused.\n   */\n\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'paused');\n\n\t\t\t/*\n   \tSync the song play pause buttons\n   */\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'paused');\n\n\t\t\t/*\n   \tPause the song\n   */\n\t\t\t_core2.default.pause();\n\t\t}\n\t}\n\n\t/**\n  * Sets the playlist main play pause buttons to the current state of the song.\n  *\n  * @access public\n  * @param {string} playlist The playlist the main play pause button controls\n  */\n\tfunction setPlaylistPlayPause(playlist) {\n\t\t/*\n  \tThe only thing that can change when you click a playlist\n  \tplay pause is the playlist. Main play pauses have no change\n  \tin song, song play pauses can change playlist and song.\n  */\n\t\tif (_helpers2.default.checkNewPlaylist(playlist)) {\n\t\t\t_helpers2.default.setActivePlaylist(playlist);\n\n\t\t\t/*\n   \tPlay first song in the playlist since we just\n   \tswitched playlists, we start from the first song.\n   \t\tIf the user has shuffle on for the playlist, then\n   \twe go from the first song in the shuffle playlist array.\n   */\n\t\t\tif (_config2.default.shuffled_statuses[playlist]) {\n\t\t\t\t_helpers2.default.changeSong(_config2.default.shuffled_playlists[playlist][0].original_index);\n\t\t\t} else {\n\t\t\t\t_helpers2.default.changeSong(_config2.default.playlists[playlist][0]);\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tDetermines what action we should take based on the\n  \tstate of the song.\n  */\n\t\tif (_config2.default.active_song.paused) {\n\t\t\t/*\n   \tThe song was paused so we sync visually for the song\n   \tthat is playing and we play the song.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('playing');\n\n\t\t\t/*\n   \tIf there is an active playlist, then\n   \twe need to sync that playlist's play pause\n   \tbutton to the state of playing.\n   */\n\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'playing');\n\n\t\t\t/*\n   \tSync the song play pause buttons\n   */\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'playing');\n\n\t\t\t/*\n   \tPlay the song\n   */\n\t\t\t_core2.default.play();\n\t\t} else {\n\t\t\t/*\n   \tThe song was playing so we sync visually for the song\n   \tto be paused and we pause the song.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('paused');\n\n\t\t\t/*\n   \tIf there is an active playlist, then\n   \twe need to sync that playlist's play pause\n   \tbutton to the state of paused.\n   */\n\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'paused');\n\n\t\t\t/*\n   \tSync the song play pause buttons\n   */\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'paused');\n\n\t\t\t/*\n   \tPause the song\n   */\n\t\t\t_core2.default.pause();\n\t\t}\n\t}\n\n\t/**\n  * Sets the song play pause buttons to the current state of the song.\n  *\n  * @access public\n  * @param {string} playlist The playlist the song is a part of\n  * @param {number} songIndex The index of the song being played/paused\n  *\n  */\n\tfunction setSongPlayPause(playlist, songIndex) {\n\t\t/*\n  \tThere can be multiple playlists on the page and there can be\n  \tmultiple songs on the page AND there can be songs in multiple\n  \tplaylists, so we have some checking to do.\n  */\n\n\t\t/*\n  \tCheck to see if the playlist has changed. If it has,\n  \tset the active playlist.\n  */\n\t\tif (_helpers2.default.checkNewPlaylist(playlist)) {\n\t\t\t_helpers2.default.setActivePlaylist(playlist);\n\n\t\t\t/*\n   \tIf there's a new playlist then we reset the\n   \tsong since the song could be in 2 playlists,\n   \tbut the user selects another playlist.\n   */\n\t\t\t_helpers2.default.changeSong(songIndex);\n\t\t}\n\n\t\t/*\n  \tCheck to see if the song has changed. If it has,\n  \tset the active song. If it was in a playlist, the\n  \tsong wouldn't change here, since we already set the\n  \tsong when we checked for a playlist.\n  */\n\t\tif (_helpers2.default.checkNewSong(songIndex)) {\n\t\t\t/*\n   \tThe song selected is different, so we change the\n   \tsong.\n   */\n\t\t\t_helpers2.default.changeSong(songIndex);\n\t\t}\n\n\t\t/*\n  \tDetermines what action we should take based on the\n  \tstate of the song.\n  */\n\t\tif (_config2.default.active_song.paused) {\n\t\t\t/*\n   \tThe song was paused so we sync visually for the song\n   \tthat is playing and we play the song.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('playing');\n\n\t\t\t/*\n   \tIf there is an active playlist, then\n   \twe need to sync that playlist's play pause\n   \tbutton to the state of playing.\n   */\n\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'playing');\n\n\t\t\t/*\n   \tSync the song play pause buttons\n   */\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'playing');\n\n\t\t\t/*\n   \tPlay the song\n   */\n\t\t\t_core2.default.play();\n\t\t} else {\n\t\t\t/*\n   \tThe song was playing so we sync visually for the song\n   \tto be paused and we pause the song.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('paused');\n\n\t\t\t/*\n   \tIf there is an active playlist, then\n   \twe need to sync that playlist's play pause\n   \tbutton to the state of paused.\n   */\n\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'paused');\n\n\t\t\t/*\n   \tSync the song play pause buttons\n   */\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'paused');\n\n\t\t\t/*\n   \tPause the song\n   */\n\t\t\t_core2.default.pause();\n\t\t}\n\t}\n\n\t/**\n  * Sets the shuffle state for a playlist\n  *\n  * @access public\n  * @param {string} playlist - The playlist being shuffled\n  */\n\tfunction setShuffle(playlist) {\n\t\t/*\n  \tIf the playlist is null, then we are dealing with the global\n  \tshuffle status.\n  */\n\t\tif (playlist == null) {\n\t\t\t/*\n   \tIf shuffle is on, we toggle it off. If shuffle is off, we\n   \ttoggle on.\n   */\n\t\t\tif (_config2.default.shuffle_on) {\n\t\t\t\t_config2.default.shuffle_on = false;\n\t\t\t\t_config2.default.shuffle_list = {};\n\t\t\t} else {\n\t\t\t\t_config2.default.shuffle_on = true;\n\t\t\t\t_helpers2.default.shuffleSongs();\n\t\t\t}\n\n\t\t\t/*\n   \tVisually sync the shuffle statuses\n   */\n\t\t\t_visual2.default.syncShuffle(_config2.default.shuffle_on);\n\t\t} else {\n\t\t\t/*\n   \tIf the playlist shuffled is on, we toggle it off. If the\n   \tplaylist shuffled is off, we toggle it on.\n   */\n\t\t\tif (_config2.default.shuffled_statuses[playlist]) {\n\t\t\t\t_config2.default.shuffled_statuses[playlist] = false;\n\t\t\t\t_config2.default.shuffled_playlists[playlist] = [];\n\t\t\t} else {\n\t\t\t\t_config2.default.shuffled_statuses[playlist] = true;\n\t\t\t\t_helpers2.default.shufflePlaylistSongs(playlist);\n\t\t\t}\n\n\t\t\t/*\n   \tVisually sync the playlist shuffle statuses.\n   */\n\t\t\t_visual2.default.syncPlaylistShuffle(_config2.default.shuffled_statuses[playlist], playlist);\n\t\t}\n\t}\n\n\t/**\n  * Sets the next song when next is clicked\n  *\n  * @access public\n  * @param {boolean} [songEnded=false] If the song ended, this is set to true\n  * so we take into effect the repeat setting.\n */\n\tfunction setNext() {\n\t\tvar songEnded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\t/*\n  \tInitializes the next index variable. This will be the\n  \tindex of the song that is next.\n  */\n\t\tvar nextIndex = 0;\n\t\t/*\n    Ensure we don't loop in the playlist if config.repeat is not true\n  */\n\t\tvar endOfList = false;\n\n\t\tif (_config2.default.repeat_song) {\n\t\t\t/*\n   \tIf the playlist is shuffled, get the now playing index.\n   */\n\t\t\tif (_config2.default.shuffle_on) {\n\t\t\t\tnextIndex = _config2.default.shuffle_active_index;\n\t\t\t} else {\n\t\t\t\tnextIndex = _config2.default.active_index;\n\t\t\t}\n\t\t} else {\n\n\t\t\t/*\n   \tIf the shuffle is on, we use the shuffled list of\n   \tsongs to determine our next song.\n   */\n\t\t\tif (_config2.default.shuffle_on) {\n\t\t\t\t/*\n    \tIf the active shuffle index + 1 is less than the length, then\n    \twe use the next shuffle otherwise we go to the beginning\n    \tof the shuffle list.\n    */\n\t\t\t\tif (parseInt(_config2.default.shuffle_active_index) + 1 < _config2.default.shuffle_list.length) {\n\t\t\t\t\t_config2.default.shuffle_active_index = parseInt(_config2.default.shuffle_active_index) + 1;\n\n\t\t\t\t\t/*\n     \tSet the next index to be the index of the song in the shuffle list.\n     */\n\t\t\t\t\tnextIndex = _config2.default.shuffle_list[parseInt(_config2.default.shuffle_active_index)].original_index;\n\t\t\t\t} else {\n\t\t\t\t\t_config2.default.shuffle_active_index = 0;\n\t\t\t\t\tnextIndex = 0;\n\t\t\t\t\tendOfList = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n    \tIf the active index + 1 is less than the length of the songs, then\n    \twe use the next song otherwise we go to the beginning of the\n    \tsong list.\n    */\n\t\t\t\tif (parseInt(_config2.default.active_index) + 1 < _config2.default.songs.length) {\n\t\t\t\t\t_config2.default.active_index = parseInt(_config2.default.active_index) + 1;\n\t\t\t\t} else {\n\t\t\t\t\t_config2.default.active_index = 0;\n\t\t\t\t\tendOfList = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n    \tSets the next index.\n    */\n\t\t\t\tnextIndex = _config2.default.active_index;\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tStops the active song.\n  */\n\t\t_core2.default.stop();\n\n\t\t/*\n  \tChange the song to the index we need.\n  */\n\t\t_helpers2.default.changeSong(nextIndex);\n\n\t\t/*\n  \tIf it's the end of the list and repeat is not on, do nothing.\n  */\n\t\tif (endOfList && !_config2.default.repeat) {} else {\n\t\t\t/*\n   \tIf the song has ended and repeat is on, play the song.\n   */\n\t\t\tif (!(songEnded && !_config2.default.repeat && endOfList)) {\n\t\t\t\t_core2.default.play();\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tSyncs the main play pause button, playlist play pause button and\n  \tsong play pause.\n  */\n\t\t_visual2.default.syncMainPlayPause();\n\t\t_visual2.default.syncSongPlayPause(null, nextIndex);\n\n\t\t/*\n  \tCall after next callback\n  */\n\t\t_helpers2.default.runCallback('after_next');\n\n\t\t/*\n  \tIf we are repeating the song, call the song repeated callback\n  */\n\t\tif (_config2.default.repeat_song) {\n\t\t\t_helpers2.default.runCallback('song_repeated');\n\t\t}\n\t}\n\n\t/**\n  * Sets the next song in a playlist\n  *\n  * @param {string} playlist - The playlist being shuffled\n  * @param {boolean} [songEnded=false] - If the song ended, this is set to true\n  * so we take into effect the repeat setting.\n  */\n\tfunction setNextPlaylist(playlist) {\n\t\tvar songEnded = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t/*\n  \tInitializes the next index\n  */\n\t\tvar nextIndex = 0;\n\n\t\t/*\n    Used to determine whether the playlist looped over\n    If it did, only play if repeat is allowed, end otherwise\n    @TODO: Different settings for song loop, in-playlist loop and global loop\n  */\n\t\tvar endOfList = false;\n\n\t\t/*\n  \tIf we are repeating the song, then we just start the song over.\n  */\n\n\t\tif (_config2.default.repeat_song) {\n\t\t\t/*\n   \tIf the playlist is shuffled, get the now playing index.\n   */\n\t\t\tif (_config2.default.shuffled_statuses[playlist]) {\n\t\t\t\tnextIndex = _config2.default.shuffled_playlists[playlist][_config2.default.shuffled_active_indexes[playlist]].original_index;\n\t\t\t} else {\n\t\t\t\tnextIndex = _config2.default.active_index;\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tIf the playlist is shuffled we get the next index of the playlist.\n   */\n\t\t\tif (_config2.default.shuffled_statuses[playlist]) {\n\t\t\t\t/*\n    \tGets the shuffled playlist's active song index.\n    */\n\t\t\t\tvar shuffledPlaylistActiveSongIndex = parseInt(_config2.default.shuffled_active_indexes[playlist]);\n\n\t\t\t\t/*\n    \tIf the index + 1 is less than the length of the playlist, we increment\n    \tthe next index otherwise we take the first index of 0.\n    */\n\t\t\t\tif (shuffledPlaylistActiveSongIndex + 1 < _config2.default.shuffled_playlists[playlist].length) {\n\t\t\t\t\t/*\n     \tSet the shuffled playlist active song index.\n     */\n\t\t\t\t\t_config2.default.shuffled_active_indexes[playlist] = shuffledPlaylistActiveSongIndex + 1;\n\t\t\t\t\t/*\n     \tGet the index of the song that we will be switching to.\n     */\n\t\t\t\t\tnextIndex = _config2.default.shuffled_playlists[playlist][_config2.default.shuffled_active_indexes[playlist]].original_index;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tSets the active shuffled playlist active index to 0 and gets the original index of\n     \tthe song at the shuffled index of 0.\n     */\n\t\t\t\t\t_config2.default.shuffled_active_indexes[playlist] = 0;\n\t\t\t\t\tnextIndex = _config2.default.shuffled_playlists[playlist][0].original_index;\n\t\t\t\t\tendOfList = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n    \tGets the index of the active song within the scope\n    \tof the playlist.\n    */\n\t\t\t\tvar playlistActiveSongIndex = _config2.default.playlists[playlist].indexOf(parseInt(_config2.default.active_index));\n\n\t\t\t\t/*\n    \tChecks to see if the next index is still less than the length of the playlist.\n    \tIf it is, use the next index othwerwise get the first song in the playlist.\n    */\n\t\t\t\tif (playlistActiveSongIndex + 1 < _config2.default.playlists[playlist].length) {\n\t\t\t\t\t_config2.default.active_index = parseInt(_config2.default.playlists[playlist][playlistActiveSongIndex + 1]);\n\t\t\t\t} else {\n\t\t\t\t\t_config2.default.active_index = parseInt(_config2.default.playlists[playlist][0]);\n\t\t\t\t\tendOfList = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n    \tSets the next inex to the active index in the config.\n    */\n\t\t\t\tnextIndex = _config2.default.active_index;\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tStops the active song playing.\n  */\n\n\t\t_core2.default.stop();\n\n\t\t/*\n  \tChanges the song to the next song in the playlist.\n  */\n\t\t_helpers2.default.changeSong(nextIndex);\n\n\t\t/*\n  \tIf it's the end of the song in the playlist, and repeat for\n  \tthe playlist is not on, do nothing.\n  */\n\t\tif (endOfList && !_config2.default.repeat_statuses[playlist]) {} else {\n\t\t\t/*\n   \tIf the song has ended and repeat is on, play the song.\n   */\n\t\t\tif (!(songEnded && !_config2.default.repeat_statuses[playlist] && endOfList)) {\n\t\t\t\t_core2.default.play();\n\t\t\t}\n\t\t}\n\n\t\t_helpers2.default.setActivePlaylist(playlist);\n\n\t\t/*\n  \tSyncs the main play pause button, playlist play pause button and\n  \tsong play pause.\n  */\n\t\t_visual2.default.syncMainPlayPause();\n\t\t_visual2.default.syncPlaylistPlayPause(playlist);\n\t\t_visual2.default.syncSongPlayPause(playlist, nextIndex);\n\n\t\t/*\n  \tCall after next callback\n  */\n\t\t_helpers2.default.runCallback('after_next');\n\n\t\t/*\n  \tIf we are repeating the song, call the song repeated callback\n  */\n\t\tif (_config2.default.repeat_song) {\n\t\t\t_helpers2.default.runCallback('song_repeated');\n\t\t}\n\t}\n\n\t/**\n  * Sets the previous song\n  * @access public\n  *\n /*--------------------------------------------------------------------------\n \tSets the previous song\n --------------------------------------------------------------------------*/\n\tfunction setPrev() {\n\t\t/*\n  \tInitializes the prev index variable. This will be the\n  \tindex of the song that is next.\n  */\n\t\tvar prevIndex = 0;\n\n\t\t/*\n  \tIf the shuffle is on for the individual songs, we get the previous\n  \tsong.\n  */\n\t\tif (_config2.default.shuffle_on) {\n\t\t\t/*\n   \tIf the previous index is greater than or equal to 0, we use the active\n   \tindex - 1.\n   */\n\t\t\tif (parseInt(_config2.default.shuffle_active_index) - 1 >= 0) {\n\t\t\t\t/*\n    \tSets the new active to be 1 less than the current active index.\n    */\n\t\t\t\t_config2.default.shuffle_active_index = parseInt(_config2.default.shuffle_active_index) - 1;\n\n\t\t\t\t/*\n    \tGets the index of the song in the song array for the new index.\n    */\n\t\t\t\tprevIndex = _config2.default.shuffle_list[parseInt(_config2.default.shuffle_active_index)].original_index;\n\t\t\t} else {\n\t\t\t\t/*\n    \tSet the active index and previous index.\n    */\n\t\t\t\t_config2.default.shuffle_active_index = _config2.default.shuffle_list.length - 1;\n\t\t\t\tprevIndex = _config2.default.shuffle_list[parseInt(_config2.default.shuffle_list.length) - 1].original_index;\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tIf the active index - 1 is greater than or equal to 0, we subtract 1 from the\n   \tactive index otherwise we set the active index to the end of the songs array index.\n   */\n\t\t\tif (parseInt(_config2.default.active_index) - 1 >= 0) {\n\t\t\t\t_config2.default.active_index = parseInt(_config2.default.active_index) - 1;\n\t\t\t} else {\n\t\t\t\t_config2.default.active_index = _config2.default.songs.length - 1;\n\t\t\t}\n\n\t\t\t/*\n   \tSet the previous index.\n   */\n\t\t\tprevIndex = _config2.default.active_index;\n\t\t}\n\n\t\t/*\n  \tStops the active song.\n  */\n\t\t_core2.default.stop();\n\n\t\t/*\n  \tChange the song to the index we need.\n  */\n\t\t_helpers2.default.changeSong(prevIndex);\n\n\t\t/*\n  \tPlay the next song.\n  */\n\t\t_core2.default.play();\n\n\t\t/*\n  \tSync the play/pause buttons to the current state of the player.\n  */\n\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t_visual2.default.syncSongPlayPause(null, prevIndex, 'playing');\n\n\t\t/*\n  \tCall after prev callback\n  */\n\t\t_helpers2.default.runCallback('after_prev');\n\t}\n\n\t/**\n  * Sets the previous song in a playlist\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist we are setting the previous for.\n  */\n\tfunction setPrevPlaylist(playlist) {\n\t\t/*\n  \tInitializes the prev index variable. This will be the\n  \tindex of the song that is next.\n  */\n\t\tvar prevIndex = 0;\n\n\t\t/*\n  \tIf the shuffle is on for the playlist, we get the previous\n  \tsong.\n  */\n\t\tif (_config2.default.shuffled_statuses[playlist]) {\n\t\t\t/*\n   \tGets the active song index for the shuffled playlist\n   */\n\t\t\tvar shuffledPlaylistActiveSongIndex = parseInt(_config2.default.shuffled_active_indexes[playlist]);\n\n\t\t\t/*\n   \tIf the shuffled song active index is greater than or equal to 0,\n   \twe use the active index - 1.\n   */\n\t\t\tif (shuffledPlaylistActiveSongIndex - 1 >= 0) {\n\t\t\t\t/*\n    \tSets the active index to the active song index - 1\n    */\n\t\t\t\t_config2.default.shuffled_active_indexes[playlist] = shuffledPlaylistActiveSongIndex - 1;\n\n\t\t\t\t/*\n    \tGets the index of the song in the song array for the new index.\n    */\n\t\t\t\tprevIndex = _config2.default.shuffled_playlists[playlist][_config2.default.shuffled_active_indexes[playlist]].original_index;\n\t\t\t} else {\n\t\t\t\t/*\n    \tSet the active index and previous index.\n    */\n\t\t\t\t_config2.default.shuffled_active_indexes[playlist] = _config2.default.shuffled_playlists[playlist].length - 1;\n\t\t\t\tprevIndex = _config2.default.shuffled_playlists[playlist][_config2.default.shuffled_playlists[playlist].length - 1].original_index;\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tGets the active song index for the playlist\n   */\n\t\t\tvar playlistActiveSongIndex = _config2.default.playlists[playlist].indexOf(parseInt(_config2.default.active_index));\n\n\t\t\t/*\n   \tIf the active song index in the playlist - 1 is greater than\n   \tor equal to 0, then we use the active song index - 1.\n   */\n\t\t\tif (playlistActiveSongIndex - 1 >= 0) {\n\t\t\t\t_config2.default.active_index = parseInt(_config2.default.playlists[playlist][playlistActiveSongIndex - 1]);\n\t\t\t} else {\n\t\t\t\t_config2.default.active_index = parseInt(_config2.default.playlists[playlist][_config2.default.playlists[playlist].length - 1]);\n\t\t\t}\n\n\t\t\t/*\n   \tSet the previous index to the active index for use later.\n   */\n\t\t\tprevIndex = _config2.default.active_index;\n\t\t}\n\n\t\t/*\n  \tStops the active song.\n  */\n\t\t_core2.default.stop();\n\n\t\t/*\n  \tChanges the song to the prev song in the playlist.\n  */\n\t\t_helpers2.default.changeSong(prevIndex);\n\t\t_helpers2.default.setActivePlaylist(playlist);\n\n\t\t/*\n  \tPlays the song\n  */\n\t\t_core2.default.play();\n\n\t\t/*\n  \tSyncs the main play pause button, playlist play pause button and\n  \tsong play pause.\n  */\n\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t_visual2.default.syncPlaylistPlayPause(playlist, 'playing');\n\t\t_visual2.default.syncSongPlayPause(playlist, prevIndex, 'playing');\n\n\t\t/*\n  \tCall after prev callback\n  */\n\t\t_helpers2.default.runCallback('after_prev');\n\t}\n\n\t/**\n  * Runs an event on key down\n  *\n  * @access public\n  * @param {number} key \t- The key code the event is bound to.\n  */\n\tfunction runKeyEvent(key) {\n\t\t/*\n  \tChecks to see if the user bound an event to the code pressed.\n  */\n\t\tif (_config2.default.bindings[key] != undefined) {\n\t\t\t/*\n   \tDetermine which event should be run if bound.\n   */\n\t\t\tswitch (_config2.default.bindings[key]) {\n\t\t\t\t/*\n    \tFires a play pause event.\n    */\n\t\t\t\tcase 'play_pause':\n\t\t\t\t\tsetSongPlayPause(_config2.default.active_playlist, _config2.default.active_index);\n\t\t\t\t\tbreak;\n\n\t\t\t\t/*\n    \tFires a next event.\n    */\n\t\t\t\tcase 'next':\n\t\t\t\t\t/*\n     \tCheck to see if the current state of the player\n     \tis in playlist mode or not playlist mode.\n     */\n\t\t\t\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\t\t\t\tsetNext();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetNextPlaylist(_config2.default.active_playlist);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t/*\n    \tFires a previous event.\n    */\n\t\t\t\tcase 'prev':\n\t\t\t\t\t/*\n     \tCheck to see if the current playlist has been set\n     \tor null and set the previous song.\n     */\n\t\t\t\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\t\t\t\tAmplitudeEventsHelpers.setPrev();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAmplitudeEventsHelpers.setPrevPlaylist(_config2.default.active_playlist);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t/*\n    \tFires a stop event.\n    */\n\t\t\t\tcase 'stop':\n\t\t\t\t\t/*\n     \tSets all of the play/pause buttons to pause\n     */\n\t\t\t\t\t_visual2.default.setPlayPauseButtonsToPause();\n\n\t\t\t\t\t/*\n     \tStops the active song.\n     */\n\t\t\t\t\t_core2.default.stop();\n\t\t\t\t\tbreak;\n\n\t\t\t\t/*\n    \tFires a shuffle event.\n    */\n\t\t\t\tcase 'shuffle':\n\t\t\t\t\t/*\n     \tCheck to see if the current playlist has been set\n     \tor null and set the previous song.\n     */\n\t\t\t\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\t\t\t\tAmplitudesEventHelpers.setShuffle(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAmplitudeEvenstHelpers.setShuffle(_config2.default.active_playlist);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t/*\n    \tFires a repeat event.\n    */\n\t\t\t\tcase 'repeat':\n\t\t\t\t\t/*\n     \tSets repeat to the opposite of what it was set to\n     */\n\t\t\t\t\tAmplitudeEventsHelpers.setRepeat(!_config2.default.repeat);\n\n\t\t\t\t\t/*\n     \tVisually sync repeat\n     */\n\t\t\t\t\t_visual2.default.syncRepeat();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n \tReturn the publically scoped functions\n */\n\treturn {\n\t\tcomputeCurrentTimes: computeCurrentTimes,\n\t\tcomputeSongDuration: computeSongDuration,\n\t\tcomputeSongCompletionPercentage: computeSongCompletionPercentage,\n\t\tsetPlaybackSpeed: setPlaybackSpeed,\n\t\tsetRepeat: setRepeat,\n\t\tsetRepeatSong: setRepeatSong,\n\t\tsetMainPlayPause: setMainPlayPause,\n\t\tsetPlaylistPlayPause: setPlaylistPlayPause,\n\t\tsetSongPlayPause: setSongPlayPause,\n\t\tsetShuffle: setShuffle,\n\t\tsetNext: setNext,\n\t\tsetNextPlaylist: setNextPlaylist,\n\t\tsetPrev: setPrev,\n\t\tsetPrevPlaylist: setPrevPlaylist,\n\t\trunKeyEvent: runKeyEvent\n\t};\n}();\n\n/**\n * Imports the Amplitude Core Helpers module\n * @module core/AmplitudeCoreHelpers\n */\n\n\n/**\n * Imports the Amplitude Visual Sync module\n * @module visual/AmplitudeVisualSync\n */\nexports.default = AmplitudeEventsHelpers;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _core = __webpack_require__(3);\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _helpers = __webpack_require__(1);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _events = __webpack_require__(4);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _soundcloud = __webpack_require__(9);\n\nvar _soundcloud2 = _interopRequireDefault(_soundcloud);\n\nvar _visual = __webpack_require__(2);\n\nvar _visual2 = _interopRequireDefault(_visual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * AmplitudeJS Initializer Module. Helps with the handling of all of the\n * initialization for AmplitudeJS.\n *\n * @module init/AmplitudeInitializer\n */\n\n\n/**\n * AmplitudeJS Soundcloud\n * @module soundcloud/AmplitudeSoundcloud\n */\n\n\n/**\n * AmplitudeJS Core Helpers\n * @module core/AmplitudeHelpers\n */\n/**\n * Imports the config module\n * @module config\n */\nvar AmplitudeInitializer = function () {\n\n\t/**\n   * The main init function.  The user will call this through\n  * Amplitude.init({}) and pass in their settings.\n  *\n  * Public Accessor: Amplitude.init( user_config_json )\n  * @access public\n   * @param {object} userConfig - A JSON object of user defined values that help configure and initialize AmplitudeJS.\n   */\n\tfunction initialize(userConfig) {\n\t\tvar ready = false;\n\n\t\t/*\n  \tReset the config on init so we have a clean slate. This is if the\n  \tuser has to re-init.\n  */\n\t\t_helpers2.default.resetConfig();\n\n\t\t/*\n  \tInitialize event handlers on init. This will clear any old\n  \tevent handlers on the amplitude element and re-bind what is\n  \tnecessary.\n  */\n\t\t_events2.default.initializeEvents();\n\n\t\t/*\n  \tInitializes debugging right away so we can use it for the rest\n  \tof the configuration.\n  */\n\t\t_config2.default.debug = userConfig.debug != undefined ? userConfig.debug : false;\n\n\t\t/*\n  \tChecks to see if the user has songs defined.\n  */\n\t\tif (userConfig.songs) {\n\t\t\t/*\n   \tChecks to see if the user has some songs in the songs array.\n   */\n\t\t\tif (userConfig.songs.length != 0) {\n\t\t\t\t/*\n    \tCopies over the user defined songs. and prepares\n    \tAmplitude for the rest of the configuration.\n    */\n\t\t\t\t_config2.default.songs = userConfig.songs;\n\t\t\t\t/*\n    \tFlag amplitude as ready.\n    */\n\t\t\t\tready = true;\n\t\t\t} else {\n\t\t\t\t_helpers2.default.writeDebugMessage('Please add some songs, to your songs object!');\n\t\t\t}\n\t\t} else {\n\t\t\t_helpers2.default.writeDebugMessage('Please provide a songs object for AmplitudeJS to run!');\n\t\t}\n\n\t\t/**\n   * Initializes the audio context. In this method it checks to see if the\n   * user wants to use visualizations or not before proceeding.\n   * @todo MAKE HANDLED BY AMPLITUDE FX.\n   */\n\t\t//privateHelpInitializeAudioContext();\n\n\t\t/*\n  \tChecks if the user has any playlists defined. If they do\n  \twe have to initialize the functionality for the playlists.\n  */\n\t\tif (userConfig.playlists && countPlaylists(userConfig.playlists) > 0) {\n\t\t\t/*\n   \tCopy the playlists over to Amplitude\n   */\n\t\t\t_config2.default.playlists = userConfig.playlists;\n\n\t\t\t/*\n   \tInitialize default live settings\n   */\n\t\t\tinitializeDefaultLiveSettings();\n\n\t\t\t/*\n   \tCheck to see if the user has valid song indexes in their playlist.\n   */\n\t\t\tcheckValidSongsInPlaylists();\n\n\t\t\t/*\n   \tInitialize the shuffle status of the playlists.\n   */\n\t\t\tinitializePlaylistShuffleStatuses();\n\n\t\t\t/*\n   \tInitialize the repeat status for the playlits.\n   */\n\t\t\tinitializePlaylistsRepeatStatuses();\n\n\t\t\t/*\n   \tInitialize temporary place holders for shuffle lists.\n   */\n\t\t\tinitializePlaylistShuffleLists();\n\n\t\t\t/*\n   \tInitializes the active shuffled indexes for shuffled playlists.\n   */\n\t\t\tinitializePlaylistShuffleIndexes();\n\n\t\t\t/*\n   \tInitializes the first song in the playlist\n   */\n\t\t\tinitializeFirstSongInPlaylistMetaData();\n\t\t}\n\n\t\t/*\n  \tWhen the preliminary config is ready, we are ready to proceed.\n  */\n\t\tif (ready) {\n\t\t\t/*\n   \tCopies over the soundcloud information to the global config\n   \twhich will determine where we go from there.\n   */\n\t\t\t_config2.default.soundcloud_client = userConfig.soundcloud_client != undefined ? userConfig.soundcloud_client : '';\n\n\t\t\t/*\n   \tChecks if we want to use the art loaded from soundcloud.\n   */\n\t\t\t_config2.default.soundcloud_use_art = userConfig.soundcloud_use_art != undefined ? userConfig.soundcloud_use_art : '';\n\n\t\t\t/*\n   \tIf the user provides a soundcloud client then we assume that\n   \tthere are URLs in their songs that will reference SoundcCloud.\n   \tWe then copy over the user config they provided to the\n   \ttemp_user_config so we don't mess up the global or their configs\n   \tand load the soundcloud information.\n   */\n\t\t\tvar tempUserConfig = {};\n\n\t\t\tif (_config2.default.soundcloud_client != '') {\n\t\t\t\ttempUserConfig = userConfig;\n\n\t\t\t\t/*\n    \tLoad up SoundCloud for use with AmplitudeJS.\n    */\n\t\t\t\t_soundcloud2.default.loadSoundCloud(tempUserConfig);\n\t\t\t} else {\n\t\t\t\t/*\n    \tThe user is not using Soundcloud with Amplitude at this point\n    \tso we just finish the configuration with the users's preferences.\n    */\n\t\t\t\tsetConfig(userConfig);\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tDebug out what was initialized with AmplitudeJS.\n  */\n\t\t_helpers2.default.writeDebugMessage('Initialized With: ');\n\t\t_helpers2.default.writeDebugMessage(_config2.default);\n\t}\n\n\t/**\n  * Rebinds all of the elements in the display.\n  *\n  * Public Accessor: Amplitude.rebindDisplay()\n  * @access public\n  */\n\tfunction rebindDisplay() {\n\t\t_events2.default.initializeEvents();\n\t\t_visual2.default.displaySongMetadata();\n\t}\n\n\t/**\n  * Finishes the initalization of the config. Takes all of the user defined\n  * parameters and makes sure they override the defaults. The important\n  * config information is assigned in the publicInit() function.\n  *\n  * This function can be called from 2 different locations:\n  * \t1. Right away on init after the important settings are defined.\n  *\n  * \t2. After all of the Soundcloud URLs are resolved properly and\n  *\t \tsoundcloud is configured.  We will need the proper URLs from Soundcloud\n  * \t\tto stream through Amplitude so we get those right away before we\n  * \t\tset the information and the active song\n  *\n  * @access public\n  * @param {object} userConfig - A JSON object of user defined values that help configure and initialize AmplitudeJS.\n  */\n\tfunction setConfig(userConfig) {\n\t\t/*\n  \tCheck to see if the user entered a start song\n  */\n\t\tif (userConfig.start_song != undefined) {\n\t\t\t/*\n   \tEnsure what has been entered is an integer.\n   */\n\t\t\tif (_helpers2.default.isInt(userConfig.start_song)) {\n\t\t\t\t_helpers2.default.changeSong(userConfig.start_song);\n\t\t\t} else {\n\t\t\t\t_helpers2.default.writeDebugMessage(\"You must enter an integer index for the start song.\");\n\t\t\t}\n\t\t} else {\n\t\t\t_helpers2.default.changeSong(0);\n\t\t}\n\n\t\t/*\n  \tInitialize a sh\n  */\n\t\tif (userConfig.shuffle_on != undefined && userConfig.shuffle_on) {\n\t\t\t_config2.default.shuffle_on = true;\n\t\t\t_helpers2.default.shuffleSongs();\n\n\t\t\t/*\n   \tVisually sync the shuffle statuses\n   */\n\t\t\t_visual2.default.syncShuffle(_config2.default.shuffle_on);\n\n\t\t\t_helpers2.default.changeSong(_config2.default.shuffle_list[0].original_index);\n\t\t}\n\n\t\t/*\n  \tAllows the user to set whether they want to continue to the next song\n  \twhen the current song finishes or not. In any scenario that's not a playlist,\n  \tcontining to the next song may not be desired.\n  */\n\t\t_config2.default.continue_next = userConfig.continue_next != undefined ? userConfig.continue_next : true;\n\n\t\t/*\n  \tIf the user defined a playback speed, we copy over their\n  \tpreference here, otherwise we default to normal playback\n  \tspeed of 1.0.\n  */\n\t\t_config2.default.playback_speed = userConfig.playback_speed != undefined ? userConfig.playback_speed : 1.0;\n\n\t\t/*\n  \tSets the audio playback speed.\n  */\n\t\t_core2.default.setPlaybackSpeed(_config2.default.playback_speed);\n\n\t\t/*\n  \tIf the user wants the song to be pre-loaded for instant\n  \tplayback, they set it to true. By default it's set to just\n  \tload the metadata.\n  */\n\t\t_config2.default.active_song.preload = userConfig.preload != undefined ? userConfig.preload : \"auto\";\n\n\t\t/*\n  \tInitializes the user defined callbacks. This should be a JSON\n  \tobject that contains a key->value store of the callback name\n  \tand the name of the function the user needs to call.\n  */\n\t\t_config2.default.callbacks = userConfig.callbacks != undefined ? userConfig.callbacks : {};\n\n\t\t/*\n  \tInitializes the user defined key bindings. This should be a JSON\n  \tobject that contains a key->value store of the key event number\n  \tpressed and the method to be run.\n  */\n\t\t_config2.default.bindings = userConfig.bindings != undefined ? userConfig.bindings : {};\n\n\t\t/*\n  \tThe user can define a starting volume in a range of 0-100 with\n  \t0 being muted and 100 being the loudest. After the config is set\n  \tAmplitude sets the active song's volume to the volume defined\n  \tby the user.\n  */\n\t\t_config2.default.volume = userConfig.volume != undefined ? userConfig.volume : 50;\n\n\t\t/*\n  \tThe user can set the volume increment and decrement values between 1 and 100\n  \tfor when the volume up or down button is pressed.  The default is an increase\n  \tor decrease of 5.\n  */\n\t\t_config2.default.volume_increment = userConfig.volume_increment != undefined ? userConfig.volume_increment : 5;\n\n\t\t_config2.default.volume_decrement = userConfig.volume_decrement != undefined ? userConfig.volume_decrement : 5;\n\n\t\t/*\n  \tSet the volume to what is defined in the config. The user can define this,\n  \tso we should set it up that way.\n  */\n\t\t_core2.default.setVolume(_config2.default.volume);\n\n\t\t/*\n  \tSince the user can define a start volume, we want our volume\n  \tsliders to sync with the user defined start value.\n  */\n\t\t_visual2.default.syncVolumeSliders();\n\n\t\t/*\n  \tIf the user defines default album art, this image will display if the active\n  \tsong doesn't have album art defined.\n  */\n\t\tif (userConfig.default_album_art != undefined) {\n\t\t\t_config2.default.default_album_art = userConfig.default_album_art;\n\t\t} else {\n\t\t\t_config2.default.default_album_art = '';\n\t\t}\n\n\t\t/*\n  \tSyncs all of the visual time elements to 00.\n  */\n\t\t_visual2.default.resetTimes();\n\n\t\t/*\n  \tSets all of the play pause buttons to pause.\n  */\n\t\t_visual2.default.setPlayPauseButtonsToPause();\n\n\t\t/*\n  \tSets the meta data for the songs automatically.\n  */\n\t\t_visual2.default.syncSongsMetaData();\n\n\t\t/*\n  \tIf the user has autoplay enabled, then begin playing the song. Everything should\n  \tbe configured for this to be ready to play.\n  */\n\t\tif (userConfig.autoplay) {\n\t\t\t/*\n   \tIf the user hasn't set a starting playlist, set it to null otherwise initialize to the\n   \tstarting playlist selected by the user.\n   */\n\t\t\tif (userConfig.starting_playlist == '') {\n\t\t\t\t_config2.default.active_playlist = null;\n\t\t\t} else {\n\t\t\t\t_config2.default.active_playlist = userConfig.starting_playlist;\n\t\t\t}\n\n\t\t\t/*\n   \tSync the main and song play pause buttons.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, 0, 'playing');\n\n\t\t\t/*\n   \tStart playing the song\n   */\n\t\t\t_core2.default.play();\n\t\t}\n\n\t\t/*\n  \tIf the user has selected a starting playlist, we need to set the starting playlist\n  \tand sync the visuals\n  */\n\t\tif (userConfig.starting_playlist != '' && userConfig.starting_playlist != undefined) {\n\t\t\t/*\n   \tSet the active playlist to the starting playlist by the user\n   */\n\t\t\t_config2.default.active_playlist = userConfig.starting_playlist;\n\n\t\t\t/*\n   \tSet the player to the first song in the playlist\n   */\n\t\t\t_helpers2.default.changeSong(userConfig.playlists[userConfig.starting_playlist][0]);\n\n\t\t\t/*\n   \tSync the main and song play pause buttons.\n   */\n\t\t\t_visual2.default.syncMainPlayPause('paused');\n\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, 0, 'paused');\n\t\t}\n\n\t\t/*\n  \tRun after init callback\n  */\n\t\t_helpers2.default.runCallback('after_init');\n\t}\n\n\t/**\n  * Counts the number of playlists the user has configured. This ensures\n  * that the user has at least 1 playlist so we can validate the songs\n  * defined in the playlist are correct and they didn't enter an invalid\n  * ID.\n  *\n  * @access private\n  * @param {object} playlists \t-\n  */\n\tfunction countPlaylists(playlists) {\n\t\t/*\n  \tInitialize the placeholders to iterate through the playlists\n  \tand find out how many we have to account for.\n  */\n\t\tvar size = 0,\n\t\t    key = void 0;\n\n\t\t/*\n  \tIterate over playlists and if the user has the playlist defined,\n  \tincrement the size of playlists.\n  */\n\t\tfor (key in playlists) {\n\t\t\tif (playlists.hasOwnProperty(key)) {\n\t\t\t\tsize++;\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tDebug how many playlists are in the config.\n  */\n\t\t_helpers2.default.writeDebugMessage('You have ' + size + ' playlist(s) in your config');\n\n\t\t/*\n  \tReturn the number of playlists in the config.\n  */\n\t\treturn size;\n\t}\n\n\t/**\n * Ensures the indexes in the playlists are valid indexes. The song has\n * to exist in the Amplitude config to be played correctly.\n *\n * @access private\n */\n\tfunction checkValidSongsInPlaylists() {\n\t\t/*\n  \tIterate over all of the config's playlists\n  */\n\t\tfor (var key in _config2.default.playlists) {\n\t\t\t/*\n   \tChecks if the playlist key is accurate.\n   */\n\t\t\tif (_config2.default.playlists.hasOwnProperty(key)) {\n\t\t\t\t/*\n    \tChecks if the playlist has songs.\n    */\n\t\t\t\tif (_config2.default.playlists[key].songs) {\n\t\t\t\t\t/*\n     \tIterate over all of the songs in the playlist\n     */\n\t\t\t\t\tfor (var i = 0; i < _config2.default.playlists[key].songs.length; i++) {\n\t\t\t\t\t\t/*\n      \tCheck to see if the index for the song in the playlist\n      \texists in the songs config.\n      */\n\t\t\t\t\t\tif (!_config2.default.songs[_config2.default.playlists[key].songs[i]]) {\n\t\t\t\t\t\t\t_helpers2.default.writeDebugMessage('The song index: ' + _config2.default.playlists[key].songs[i] + ' in playlist with key: ' + key + ' is not defined in your songs array!');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Initializes the shuffle statuses for each of the playlists. These will\n  * be referenced when we shuffle individual playlists.\n  *\n  * @access private\n  */\n\tfunction initializePlaylistShuffleStatuses() {\n\t\t/*\n  \tIterate over all of the playlists the user defined adding\n  \tthe playlist key to the shuffled playlist array and creating\n  \tand empty object to house the statuses.\n  */\n\t\tfor (var key in _config2.default.playlists) {\n\t\t\t_config2.default.shuffled_statuses[key] = false;\n\t\t}\n\t}\n\n\t/**\n  * Initializes the repeat statuses for each of the playlists.  These will\n  * be referenced when we repeat individual playlits.\n  *\n  * @access private\n  */\n\tfunction initializePlaylistsRepeatStatuses() {\n\t\t/*\n  \tIterate over all of the playlists the user defined adding\n  \tthe playlist key to the repeated playlist array and creating\n  \tand empty object to house the statuses.\n  */\n\t\tfor (var key in _config2.default.playlists) {\n\t\t\t_config2.default.repeat_statuses[key] = false;\n\t\t}\n\t}\n\n\t/**\n  * Initializes the shuffled playlist placeholders. These will be set for\n  * playlists that are shuffled and contain the shuffled songs.\n  *\n  * @access private\n \t */\n\tfunction initializePlaylistShuffleLists() {\n\t\t/*\n  \tIterate over all of the playlists the user defined adding\n  \tthe playlist key to the shuffled playlists array and creating\n  \tand empty object to house the shuffled playlists\n  */\n\t\tfor (var key in _config2.default.playlists) {\n\t\t\t_config2.default.shuffled_playlists[key] = [];\n\t\t}\n\t}\n\n\t/**\n  * Initializes the shuffled playlist indexes array. These will be set for\n  * playlists that are shuffled and contain the active shuffled index.\n  *\n  * @access private\n  */\n\tfunction initializePlaylistShuffleIndexes() {\n\t\t/*\n  \tIterates over all of the playlists adding a key\n  \tto the shuffled_active_indexes array that contains\n  \tthe active shuffled index.\n  */\n\t\tfor (var key in _config2.default.playlists) {\n\t\t\t_config2.default.shuffled_active_indexes[key] = 0;\n\t\t}\n\t}\n\n\t/**\n  * Intializes the display for the first song in the playlist meta data.\n  *\n  * @access private\n  */\n\tfunction initializeFirstSongInPlaylistMetaData() {\n\t\t/*\n  \tIterates over all of the playlists setting the meta data for the\n  \tfirst song.\n  */\n\t\tfor (var key in _config2.default.playlists) {\n\t\t\t_visual2.default.setFirstSongInPlaylist(_config2.default.songs[_config2.default.playlists[key][0]], key);\n\t\t}\n\t}\n\n\t/**\n  * Intializes the default live settings for all of the songs.\n  *\n  * @access priavet\n  */\n\tfunction initializeDefaultLiveSettings() {\n\t\tfor (var i = 0; i < _config2.default.songs.length; i++) {\n\t\t\tif (_config2.default.songs[i].live == undefined) {\n\t\t\t\t_config2.default.songs[i].live = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n \tReturns the publicly accessible methods\n */\n\treturn {\n\t\tinitialize: initialize,\n\t\tsetConfig: setConfig,\n\t\trebindDisplay: rebindDisplay\n\t};\n}();\n\n/**\n * AmplitudeJS Visual Sync\n * @module visual/AmplitudeVisualSync\n*/\n\n\n/**\n * AmplitudeJS Events\n * @module events/AmplitudeEvents\n */\n\n\n/**\n * AmplitudeJS Core Module\n * @module core/AmplitudeCore\n */\nexports.default = AmplitudeInitializer;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _helpers = __webpack_require__(5);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _visual = __webpack_require__(2);\n\nvar _visual2 = _interopRequireDefault(_visual);\n\nvar _core = __webpack_require__(3);\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _helpers3 = __webpack_require__(1);\n\nvar _helpers4 = _interopRequireDefault(_helpers3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * These functions handle the events that we bound to each element and\n * prepare for a function to be called. These kind of act like filters/middleware.\n *\n * @module events/AmplitudeHandlers\n */\n\n\n/**\n * Imports the core module of Amplitude which handles the basic functions\n * @module core/AmplitudeCore\n */\n\n\n/**\n * Imports the helpers for the event handlers.\n * @module events/AmplitudeEventsHelpers\n */\nexports.default = {\n\t/**\n  * When the time updates on the active song, we sync the current time displays\n  *\n  * HANDLER FOR: timeupdate\n  *\n  * @access public\n  */\n\tupdateTime: function updateTime() {\n\t\t/*\n  \tHelp from: http://jsbin.com/badimipi/1/edit?html,js,output\n  */\n\t\tif (_config2.default.active_song.buffered.length - 1 >= 0) {\n\t\t\tvar bufferedEnd = _config2.default.active_song.buffered.end(_config2.default.active_song.buffered.length - 1);\n\t\t\tvar duration = _config2.default.active_song.duration;\n\n\t\t\t_config2.default.buffered = bufferedEnd / duration * 100;\n\t\t}\n\n\t\t/*\n  \tSync the buffered progress bars.\n  */\n\t\t_visual2.default.syncBufferedProgressBars();\n\n\t\t/*\n  \tIf the current song is not live, then\n  \twe can update the time information. Otherwise the\n  \tcurrent time updates wouldn't mean much since the time\n  \tis infinite.\n  */\n\t\tif (!_config2.default.active_metadata.live) {\n\t\t\t/*\n   \tCompute the current time\n   */\n\t\t\tvar currentTime = _helpers2.default.computeCurrentTimes();\n\n\t\t\t/*\n   \tCompute the song completion percentage\n   */\n\t\t\tvar songCompletionPercentage = _helpers2.default.computeSongCompletionPercentage();\n\n\t\t\t/*\n   \tComputes the song duration\n   */\n\t\t\tvar songDuration = _helpers2.default.computeSongDuration();\n\n\t\t\t/*\n   \tSync the current time elements with the current\n   \tlocation of the song and the song duration elements with\n   \tthe duration of the song.\n   */\n\t\t\t_visual2.default.syncCurrentTime(currentTime, songCompletionPercentage);\n\t\t\t_visual2.default.syncSongDuration(currentTime, songDuration);\n\n\t\t\t/*\n   \tRuns the callback defined for the time update.\n   */\n\t\t\t_helpers4.default.runCallback('time_update');\n\t\t}\n\t},\n\n\t/**\n  * When the keydown event is fired, we determine which function should be run\n  * based on what was passed in.\n  *\n  * HANDLER FOR: keydown\n  *\n  * @access public\n  */\n\tkeydown: function keydown(event) {\n\t\t_helpers2.default.runKeyEvent(event.which);\n\t},\n\n\t/**\n  * When the song has ended, handles what to do next\n  *\n  * HANDLER FOR: ended\n  *\n  * @access public\n  */\n\tsongEnded: function songEnded() {\n\t\tif (_config2.default.continue_next) {\n\t\t\t/*\n   \tIf the active playlist is not set, we set the\n   \tnext song that's in the songs array.\n   */\n\t\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\t\t_helpers2.default.setNext(true);\n\t\t\t} else {\n\t\t\t\t/*\n    \tSet the next song in the playlist\n    */\n\t\t\t\t_helpers2.default.setNextPlaylist(_config2.default.active_playlist, true);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t\t/*\n    \tSets all of the play/pause buttons to pause\n    */\n\t\t\t\t_visual2.default.setPlayPauseButtonsToPause();\n\n\t\t\t\t/*\n    \tStops the active song.\n    */\n\t\t\t\t_core2.default.stop();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * As the song is buffered, we can display the buffered percentage in\n  * a progress bar.\n  *\n  * HANDLER FOR: ended\n  *\n  * @access public\n  */\n\tprogress: function progress() {\n\t\t/*\n  \tHelp from: http://jsbin.com/badimipi/1/edit?html,js,output\n  */\n\t\tif (_config2.default.active_song.buffered.length - 1 >= 0) {\n\t\t\tvar bufferedEnd = _config2.default.active_song.buffered.end(_config2.default.active_song.buffered.length - 1);\n\t\t\tvar duration = _config2.default.active_song.duration;\n\n\t\t\t_config2.default.buffered = bufferedEnd / duration * 100;\n\t\t}\n\n\t\t/*\n  \tSync the buffered progress bars.\n  */\n\t\t_visual2.default.syncBufferedProgressBars();\n\t},\n\n\t/**\n  * Handles an event on a play button in Amplitude.\n  *\n  * HANDLER FOR: 'amplitude-play'\n  *\n  * @access public\n  * @TODO Finish commenting and re-structure\n  */\n\tplay: function play() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tGets the attribute for song index so we can check if\n   \tthere is a need to change the song.  In some scenarios\n   \tthere might be multiple play classes on the page. In that\n   \tcase it is possible the user could click a different play\n   \tclass and change the song.\n   */\n\t\t\tvar playButtonSongIndex = this.getAttribute('amplitude-song-index');\n\t\t\tvar playButtonPlaylistIndex = this.getAttribute('amplitude-playlist');\n\n\t\t\tif (playButtonPlaylistIndex == null && playButtonSongIndex == null) {\n\t\t\t\t_helpers2.default.setSongPlayPause(_config2.default.active_playlist, _config2.default.active_index);\n\t\t\t}\n\n\t\t\t/*\n   \t*/\n\t\t\tif (playButtonPlaylistIndex != null && playButtonPlaylistIndex != '') {\n\t\t\t\tif (_helpers4.default.checkNewPlaylist(playButtonPlaylistIndex)) {\n\t\t\t\t\t_helpers4.default.setActivePlaylist(playButtonPlaylistIndex);\n\n\t\t\t\t\tif (playButtonSongIndex != null) {\n\t\t\t\t\t\t_helpers4.default.changeSong(playButtonSongIndex);\n\t\t\t\t\t\t_helpers2.default.setPlaylistPlayPause(playButtonPlaylistIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_helpers4.default.changeSong(_config2.default.playlists[playButtonPlaylistIndex][0]);\n\t\t\t\t\t\t_helpers2.default.setPlaylistPlayPause(playButtonPlaylistIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (playButtonSongIndex != null) {\n\t\t\t\t\t\t_helpers4.default.changeSong(playButtonSongIndex);\n\t\t\t\t\t\t_helpers2.default.setPlaylistPlayPause(playButtonPlaylistIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_helpers4.default.changeSong(_config2.default.active_index);\n\t\t\t\t\t\t_helpers2.default.setPlaylistPlayPause(playButtonPlaylistIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n   \t*/\n\t\t\tif ((playButtonPlaylistIndex == null || playButtonPlaylistIndex == '') && playButtonSongIndex != null && playButtonSongIndex != '') {\n\n\t\t\t\tif (_helpers4.default.checkNewSong(playButtonSongIndex) || _config2.default.active_playlist != playButtonPlaylistIndex) {\n\t\t\t\t\t_helpers4.default.changeSong(playButtonSongIndex);\n\t\t\t\t}\n\n\t\t\t\t_helpers2.default.setSongPlayPause(playButtonPlaylistIndex, playButtonSongIndex);\n\t\t\t}\n\n\t\t\t/*\n   \tStart the visualizations for the song.\n   \tAMPFX-TODO: MAKE HANDLED BY AMPLITUDE FX\n   */\n\t\t\t//privateStartVisualization();\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on a pause button\n  *\n  * HANDLER FOR: 'amplitude-pause'\n  *\n  * @access public\n  * @TODO Finish commenting and optimize\n  */\n\tpause: function pause() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\tvar pauseButtonSongIndex = this.getAttribute('amplitude-song-index');\n\t\t\tvar pauseButtonPlaylistIndex = this.getAttribute('amplitude-playlist');\n\n\t\t\tif (pauseButtonSongIndex == null && pauseButtonPlaylistIndex == null) {\n\t\t\t\t_helpers2.default.setSongPlayPause(_config2.default.active_playlist, _config2.default.active_index);\n\t\t\t\t_core2.default.pause();\n\t\t\t}\n\n\t\t\tif (pauseButtonPlaylistIndex != null || pauseButtonPlaylistIndex != '' && _config2.default.active_playlist == pauseButtonPlaylistIndex) {\n\t\t\t\t/*\n    \tThe song was playing so we sync visually for the song\n    \tto be paused and we pause the song.\n    */\n\t\t\t\t_visual2.default.syncMainPlayPause('paused');\n\n\t\t\t\t/*\n    \tIf there is an active playlist, then\n    \twe need to sync that playlist's play pause\n    \tbutton to the state of paused.\n    */\n\t\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'paused');\n\n\t\t\t\t/*\n    \tSync the song play pause buttons\n    */\n\t\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'paused');\n\n\t\t\t\t_core2.default.pause();\n\t\t\t}\n\n\t\t\tif ((pauseButtonPlaylistIndex == null || pauseButtonPlaylistIndex == '') && pauseButtonSongIndex == _config2.default.active_index) {\n\t\t\t\t/*\n    \tThe song was playing so we sync visually for the song\n    \tto be paused and we pause the song.\n    */\n\t\t\t\t_visual2.default.syncMainPlayPause('paused');\n\n\t\t\t\t/*\n    \tIf there is an active playlist, then\n    \twe need to sync that playlist's play pause\n    \tbutton to the state of paused.\n    */\n\t\t\t\t_visual2.default.syncPlaylistPlayPause(_config2.default.active_playlist, 'paused');\n\n\t\t\t\t/*\n    \tSync the song play pause buttons\n    */\n\t\t\t\t_visual2.default.syncSongPlayPause(_config2.default.active_playlist, _config2.default.active_index, 'paused');\n\n\t\t\t\t_core2.default.pause();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on a play/pause button\n  *\n  * HANDLER FOR: 'amplitude-play-pause'\n  *\n  * @access public\n  */\n\tplayPause: function playPause() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tChecks to see if the element has an attribute for amplitude-main-play-pause\n   \tand syncs accordingly\n   */\n\t\t\tif (this.getAttribute('amplitude-main-play-pause') != null) {\n\t\t\t\t_helpers2.default.setMainPlayPause();\n\n\t\t\t\t/*\n    \tSyncs playlist main play pause buttons\n    */\n\t\t\t} else if (this.getAttribute('amplitude-playlist-main-play-pause') != null) {\n\t\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\n\t\t\t\t_helpers2.default.setPlaylistPlayPause(playlist);\n\n\t\t\t\t/*\n    \tSyncs amplitude individual song buttons\n    */\n\t\t\t} else {\n\t\t\t\tvar _playlist = this.getAttribute('amplitude-playlist');\n\t\t\t\tvar songIndex = this.getAttribute('amplitude-song-index');\n\n\t\t\t\t_helpers2.default.setSongPlayPause(_playlist, songIndex);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on a stop element.\n  *\n  * HANDLER FOR: 'amplitude-stop'\n  *\n  * @access public\n  * @TODO: AMP-FX Before stopping, make sure that AmplitudeFX visualization is stopped as well.\n  */\n\tstop: function stop() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tSets all of the play/pause buttons to pause\n   */\n\t\t\t_visual2.default.setPlayPauseButtonsToPause();\n\n\t\t\t/*\n   \tStops the active song.\n   */\n\t\t\t_core2.default.stop();\n\t\t}\n\t},\n\n\t/**\n  * Handles an event for a mute element\n  *\n  * HANDLER FOR: 'amplitude-mute'\n  *\n  * @access public\n  */\n\tmute: function mute() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tIf the current volume in the config is 0, we set the volume to the\n   \tpre_mute level.  This means that the audio is already muted and\n   \tneeds to be restored to the pre_mute level.\n   \t\tOtherwise, we set pre_mute volume to the current volume\n   \tand set the config volume to 0, muting the audio.\n   */\n\t\t\tif (_config2.default.volume == 0) {\n\t\t\t\t_config2.default.active_song.muted = false;\n\t\t\t\t_config2.default.volume = _config2.default.pre_mute_volume;\n\t\t\t\t_visual2.default.syncMute(false);\n\t\t\t} else {\n\t\t\t\t_config2.default.active_song.muted = true;\n\t\t\t\t_config2.default.pre_mute_volume = _config2.default.volume;\n\t\t\t\t_config2.default.volume = 0;\n\t\t\t\t_visual2.default.syncMute(true);\n\t\t\t}\n\n\t\t\t/*\n   \tCalls the core function to set the volume to the computed value\n   \tbased on the user's intent.\n   */\n\t\t\t_core2.default.setVolume(_config2.default.volume);\n\n\t\t\t/*\n   \tSyncs the volume sliders so the visuals align up with the functionality.\n   \tIf the volume is at 0, then the sliders should represent that so the user\n   \thas the right starting point.\n   */\n\t\t\t_visual2.default.syncVolumeSliders(_config2.default.volume);\n\t\t}\n\t},\n\n\t/**\n  * Handles a click on a volume up element.\n  *\n  * HANDLER FOR: 'amplitude-volume-up'\n  *\n  * @access public\n  */\n\tvolumeUp: function volumeUp() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tThe volume range is from 0 to 1 for an audio element. We make this\n   \ta base of 100 for ease of working with.\n   \t\tIf the new value is less than 100, we use the new calculated\n   \tvalue which gets converted to the proper unit for the audio element.\n   \t\tIf the new value is greater than 100, we set the volume to 1 which\n   \tis the max for the audio element.\n   */\n\t\t\tif (_config2.default.volume + _config2.default.volume_increment <= 100) {\n\t\t\t\t_config2.default.volume = _config2.default.volume + _config2.default.volume_increment;\n\t\t\t} else {\n\t\t\t\t_config2.default.volume = 100;\n\t\t\t}\n\n\t\t\t/*\n   \tCalls the core function to set the volume to the computed value\n   \tbased on the user's intent.\n   */\n\t\t\t_core2.default.setVolume(_config2.default.volume);\n\n\t\t\t/*\n   \tSyncs the volume sliders so the visuals align up with the functionality.\n   \tIf the volume is at 0, then the sliders should represent that so the user\n   \thas the right starting point.\n   */\n\t\t\t_visual2.default.syncVolumeSliders(_config2.default.volume);\n\t\t}\n\t},\n\n\t/**\n  * Handles a click on a volume down element.\n  *\n  * HANDLER FOR: 'amplitude-volume-down'\n  *\n  * @access public\n  */\n\tvolumeDown: function volumeDown() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tThe volume range is from 0 to 1 for an audio element. We make this\n   \ta base of 100 for ease of working with.\n   \t\tIf the new value is less than 100, we use the new calculated\n   \tvalue which gets converted to the proper unit for the audio element.\n   \t\tIf the new value is greater than 100, we set the volume to 1 which\n   \tis the max for the audio element.\n   */\n\t\t\tif (_config2.default.volume - _config2.default.volume_increment > 0) {\n\t\t\t\t_config2.default.volume = _config2.default.volume - _config2.default.volume_increment;\n\t\t\t} else {\n\t\t\t\t_config2.default.volume = 0;\n\t\t\t}\n\n\t\t\t/*\n   \tCalls the core function to set the volume to the computed value\n   \tbased on the user's intent.\n   */\n\t\t\t_core2.default.setVolume(_config2.default.volume);\n\n\t\t\t/*\n   \tSyncs the volume sliders so the visuals align up with the functionality.\n   \tIf the volume is at 0, then the sliders should represent that so the user\n   \thas the right starting point.\n   */\n\t\t\t_visual2.default.syncVolumeSliders(_config2.default.volume);\n\t\t}\n\t},\n\n\t/**\n  * Handles a change on the song slider\n  *\n  * HANDLER FOR: 'amplitude-song-slider'\n  *\n  * @access public\n  */\n\tsongSlider: function songSlider() {\n\t\t/*\n  \tGets the percentage of the song we will be setting the location for.\n  */\n\t\tvar locationPercentage = this.value;\n\n\t\t/*\n  \tChecks to see if the element has an attribute for amplitude-main-play-pause\n  \tand syncs accordingly\n  */\n\t\tif (this.getAttribute('amplitude-main-song-slider') != null) {\n\t\t\t/*\n   \tIf the active song is not live, set the current time\n   */\n\t\t\tif (!_config2.default.active_metadata.live) {\n\t\t\t\tvar currentTime = _config2.default.active_song.duration * (locationPercentage / 100);\n\n\t\t\t\tif (isFinite(currentTime)) {\n\t\t\t\t\t_config2.default.active_song.currentTime = currentTime;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_visual2.default.syncMainSliderLocation(locationPercentage);\n\n\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null) {\n\t\t\t\t_visual2.default.syncPlaylistSliderLocation(_config2.default.active_playlist, locationPercentage);\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tSyncs playlist main play pause buttons\n  */\n\t\tif (this.getAttribute('amplitude-playlist-song-slider') != null) {\n\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\n\t\t\t/*\n   \tWe don't want to song slide a playlist that's not the\n   \tactive placylist.\n   */\n\t\t\tif (_config2.default.active_playlist == playlist) {\n\t\t\t\t/*\n    \tIf the active song is not live, set the current time\n    */\n\t\t\t\tif (!_config2.default.active_metadata.live) {\n\t\t\t\t\t_config2.default.active_song.currentTime = _config2.default.active_song.duration * (locationPercentage / 100);\n\t\t\t\t}\n\t\t\t\t_visual2.default.syncMainSliderLocation(locationPercentage);\n\t\t\t\t_visual2.default.syncPlaylistSliderLocation(playlist, locationPercentage);\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tSyncs amplitude individual song buttons\n  */\n\t\tif (this.getAttribute('amplitude-playlist-song-slider') == null && this.getAttribute('amplitude-main-song-slider') == null) {\n\n\t\t\tvar _playlist2 = this.getAttribute('amplitude-playlist');\n\t\t\tvar songIndex = this.getAttribute('amplitude-song-index');\n\n\t\t\tif (_config2.default.active_index == songIndex) {\n\t\t\t\t/*\n    \tIf the active song is not live, set the current time\n    */\n\t\t\t\tif (!_config2.default.active_metadata.live) {\n\t\t\t\t\t_config2.default.active_song.currentTime = _config2.default.active_song.duration * (locationPercentage / 100);\n\t\t\t\t}\n\n\t\t\t\t_visual2.default.syncMainSliderLocation();\n\n\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && _config2.default.active_playlist == _playlist2) {\n\t\t\t\t\t_visual2.default.syncPlaylistSliderLocation(_playlist2, location);\n\t\t\t\t}\n\n\t\t\t\t_visual2.default.syncSongSliderLocation(_playlist2, songIndex, location);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles a change on the volume slider\n  *\n  * HANDLER FOR: 'amplitude-volume-slider'\n  *\n  * @access public\n  */\n\tvolumeSlider: function volumeSlider() {\n\t\t/*\n  \tCalls the core function to set the volume to the computed value\n  \tbased on the user's intent.\n  */\n\t\t_core2.default.setVolume(this.value);\n\n\t\t/*\n  \tSync the volume slider locations\n  */\n\t\t_visual2.default.syncVolumeSliderLocation(this.value);\n\t},\n\n\t/**\n  * Handles an event on the next button\n  *\n  * HANDLER FOR: 'amplitude-next'\n  *\n  * @access public\n  */\n\tnext: function next() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tChecks to see if the button is a playlist next button or\n   \tif it's a global playlist button.\n   */\n\t\t\tif (this.getAttribute('amplitude-playlist') == '' || this.getAttribute('amplitude-playlist') == null) {\n\n\t\t\t\t/*\n    \tCheck to see if the current state of the player\n    \tis in playlist mode or not playlist mode.\n    */\n\t\t\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\t\t\t_helpers2.default.setNext();\n\t\t\t\t} else {\n\t\t\t\t\t_helpers2.default.setNextPlaylist(_config2.default.active_playlist);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n    \tGets the playlist of the next button.\n    */\n\t\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\n\t\t\t\t/*\n    \tSets the next playlist\n    */\n\t\t\t\t_helpers2.default.setNextPlaylist(playlist);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on the previous button\n  *\n  * HANDLER FOR: 'amplitude-prev'\n  *\n  * @access public\n  */\n\tprev: function prev() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tChecks to see if the previous button is a playlist previous\n   \tbutton or if it's a global playlist button.\n   */\n\t\t\tif (this.getAttribute('amplitude-playlist') == '' || this.getAttribute('amplitude-playlist') == null) {\n\n\t\t\t\t/*\n    \tCheck to see if the current playlist has been set\n    \tor null and set the previous song.\n    */\n\t\t\t\tif (_config2.default.active_playlist == '' || _config2.default.active_playlist == null) {\n\t\t\t\t\t_helpers2.default.setPrev();\n\t\t\t\t} else {\n\t\t\t\t\t_helpers2.default.setPrevPlaylist(_config2.default.active_playlist);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n    \tGets the playlist of the previous button.\n    */\n\t\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\n\t\t\t\t/*\n    \tSets the previous playlist\n    */\n\t\t\t\t_helpers2.default.setPrevPlaylist(playlist);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on the shuffle button\n  *\n  * HANDLER FOR: 'amplitude-shuffle'\n  *\n  * @access public\n  */\n\tshuffle: function shuffle() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tCheck to see if the shuffle button belongs to a playlist\n   */\n\t\t\tif (this.getAttribute('amplitude-playlist') == '' || this.getAttribute('amplitude-playlist') == null) {\n\t\t\t\t/*\n    \tSets the shuffle button to null\n    */\n\t\t\t\t_helpers2.default.setShuffle(null);\n\t\t\t} else {\n\t\t\t\t/*\n    \tGets the playlist attribute of the shuffle button and\n    \tset shuffle to on for the playlist.\n    */\n\t\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\t\t\t\t_helpers2.default.setShuffle(playlist);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on the repeat button\n  *\n  * HANDLER FOR: 'amplitude-repeat'\n  *\n  * @access private\n  */\n\trepeat: function repeat() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tCheck to see if the repeat button belongs to a playlist\n   */\n\t\t\tif (this.getAttribute('amplitude-playlist') == '' || this.getAttribute('amplitude-playlist') == null) {\n\t\t\t\t/*\n    \tSets repeat to the opposite of what it was set to\n    */\n\t\t\t\t_helpers2.default.setRepeat(!_config2.default.repeat, null);\n\t\t\t} else {\n\t\t\t\t/*\n    \tGets the playlist attribute of the repeat button and\n    \tset repeat to on for the playlist.\n    */\n\t\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\t\t\t\t_helpers2.default.setRepeat(!_config2.default.repeat_statuses[playlist], playlist);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on the repeat song button\n  *\n  * HANDLER FOR: 'amplitude-repeat-song'\n  *\n  * @access private\n  */\n\trepeatSong: function repeatSong() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tSets repeat song to the opposite of what it was set to\n   */\n\t\t\t_helpers2.default.setRepeatSong(!_config2.default.repeat_song);\n\n\t\t\t/*\n   \tVisually sync repeat song\n   */\n\t\t\t_visual2.default.syncRepeatSong();\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on the playback speed button\n  *\n  * HANDLER FOR: 'amplitude-playback-speed'\n  *\n  * @access private\n  */\n\tplaybackSpeed: function playbackSpeed() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tWe increment the speed by .5 everytime we click\n   \tthe button to change the playback speed. Once we are\n   \tactively playing back at 2, we start back at 1 which\n   \tis normal speed.\n   */\n\t\t\tswitch (_config2.default.playback_speed) {\n\t\t\t\tcase 1:\n\t\t\t\t\t_helpers2.default.setPlaybackSpeed(1.5);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1.5:\n\t\t\t\t\t_helpers2.default.setPlaybackSpeed(2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t_helpers2.default.setPlaybackSpeed(1);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t/*\n   \tVisually sync the playback speed.\n   */\n\t\t\t_visual2.default.syncPlaybackSpeed();\n\t\t}\n\t},\n\n\t/**\n  * Handles an event on a skip to button.\n  *\n  * HANDLER FOR: 'amplitude-skip-to'\n  *\n  * @access private\n  */\n\tskipTo: function skipTo() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tDetermines if the skip to button is in the scope of a playlist.\n   */\n\t\t\tif (this.hasAttribute('amplitude-playlist')) {\n\t\t\t\tvar playlist = this.getAttribute('amplitude-playlist');\n\n\t\t\t\tif (_helpers4.default.checkNewPlaylist(playlist)) {\n\t\t\t\t\t_helpers4.default.setActivePlaylist(playlist);\n\t\t\t\t}\n\t\t\t\t/*\n    \tGets the location, playlist and song index that is being skipped\n    \tto.\n    */\n\t\t\t\tvar seconds = parseInt(this.getAttribute('amplitude-location'));\n\t\t\t\tvar songIndex = parseInt(this.getAttribute('amplitude-song-index'));\n\n\t\t\t\t/*\n    \tChanges the song to where it's being skipped and then\n    \tplay the song.\n    */\n\t\t\t\t_helpers4.default.changeSong(songIndex);\n\t\t\t\t_core2.default.play();\n\n\t\t\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t\t\t_visual2.default.syncPlaylistPlayPause(playlist, 'playing');\n\t\t\t\t_visual2.default.syncSongPlayPause(playlist, songIndex, 'playing');\n\n\t\t\t\t/*\n    \tSkip to the location in the song.\n    */\n\t\t\t\t_core2.default.skipToLocation(seconds);\n\t\t\t} else {\n\t\t\t\t/*\n    \tGets the location and song index that is being skipped\n    \tto.\n    */\n\t\t\t\tvar _seconds = parseInt(this.getAttribute('amplitude-location'));\n\t\t\t\tvar _songIndex = parseInt(this.getAttribute('amplitude-song-index'));\n\n\t\t\t\t/*\n    \tChanges the song to where it's being skipped and then\n    \tplay the song.\n    */\n\t\t\t\t_helpers4.default.changeSong(_songIndex);\n\t\t\t\t_core2.default.play();\n\n\t\t\t\t_visual2.default.syncMainPlayPause('playing');\n\t\t\t\t_visual2.default.syncSongPlayPause(null, _songIndex, 'playing');\n\n\t\t\t\t/*\n    \tSkip to the location in the song.\n    */\n\t\t\t\t_core2.default.skipToLocation(_seconds);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Imports the core helpers for Amplitude which help run some of AmplitudeJS functions\n * @module core/AmplitudeHelpers\n */\n\n\n/**\n * Imports the visual sync module to keep the display in sync with AmplitudeJS\n * @module visual/AmplitudeVisualSync\n */\n/**\n * Imports the config module\n * @module config\n */\n\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _init = __webpack_require__(6);\n\nvar _init2 = _interopRequireDefault(_init);\n\nvar _core = __webpack_require__(3);\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _helpers = __webpack_require__(1);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _events = __webpack_require__(4);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _helpers3 = __webpack_require__(5);\n\nvar _helpers4 = _interopRequireDefault(_helpers3);\n\nvar _visual = __webpack_require__(2);\n\nvar _visual2 = _interopRequireDefault(_visual);\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Amplitude should just be an interface to the public functions.\n * Everything else should be handled by other objects\n *\n * @module Amplitude\n */\n\n/**\n * AmplitudeJS Visual Sync Module\n *\n * @module visual/AmplitudeVisualSync\n */\n\n\n/**\n * AmplitudeJS Events Module\n *\n * @module events/AmplitudeEvents\n */\n\n\n/**\n * AmplitudeJS Core Module\n *\n * @module core/AmplitudeCore\n */\nvar Amplitude = function () {\n\t/**\n  * The main init function.  The user will call this through\n  * Amplitude.init({}) and pass in their settings.\n  *\n  * Public Accessor: Amplitude.init( user_config_json );\n  *\n  * @access public\n  * @param {object} userConfig \t- A JSON object of user defined values that helps configure and initialize AmplitudeJS.\n  */\n\tfunction init(userConfig) {\n\t\t_init2.default.initialize(userConfig);\n\t}\n\n\t/**\n  * Binds new elements that were added to the page.\n  *\n  * Public Accessor: Amplitude.bindNewElements()\n  *\n  * @access public\n  */\n\tfunction bindNewElements() {\n\t\t_init2.default.rebindDisplay();\n\t}\n\n\t/**\n  * Returns the active playlist.\n  *\n  * Public Accessor: Amplitude.getActivePlaylist()\n  *\n  * @access public\n  */\n\tfunction getActivePlaylist() {\n\t\treturn _config2.default.active_playlist;\n\t}\n\n\t/**\n  * Returns the current playback speed.\n  *\n  * Public Accessor: Amplitude.getPlaybackSpeed()\n  *\n  * @access public\n  */\n\tfunction getPlaybackSpeed() {\n\t\treturn _config2.default.playback_speed;\n\t}\n\n\t/**\n  * Gets the repeat state of the player.\n  *\n  * Public Accessor: Amplitude.getRepeat()\n  *\n  * @access public\n  */\n\tfunction getRepeat() {\n\t\treturn _config2.default.repeat;\n\t}\n\n\t/**\n  * Returns the shuffle state of the player.\n  *\n  * Public Accessor: Amplitude.getShuffle()\n  *\n  * @access public\n  */\n\tfunction getShuffle() {\n\t\treturn _config2.default.shuffle_on;\n\t}\n\n\t/**\n  * Returns the shuffle state of the playlist.\n  *\n  * Public Accessor: Amplitude.getShufflePlaylist( playlist )\n  *\n  * @access public\n  * @param {string} playlist \t- The key representing the playlist ID to see if it's shuffled or not.\n  */\n\tfunction getShufflePlaylist(playlist) {\n\t\treturn _config2.default.shuffled_statuses[playlist];\n\t}\n\n\t/**\n  * Sets the shuffle state for the player.\n  *\n  * Public Accessor: Amplitude.setShuffle()\n  *\n  * @access public\n  */\n\tfunction setShuffle() {\n\t\t_helpers4.default.setShuffle(null);\n\t}\n\n\t/**\n  * Sets the shuffle state for the playlist\n  *\n  * Public Accessor: Amplitude.setShufflePlaylist( playlistKey )\n  *\n  * @access public\n * @param {string} playlistKey \t- The key representing the playlist ID to to shuffle the playlist.\n  */\n\tfunction setShufflePlaylist(playlistKey) {\n\t\t_helpers4.default.setShuffle(playlistKey);\n\t}\n\n\t/**\n  * Sets the repeat state for the player.\n *\n * Public Accessor: Amplitude.setRepeat()\n *\n * @access public\n  */\n\tfunction setRepeat() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n   \tSets repeat to the opposite of what it was set to\n   */\n\t\t\t_helpers4.default.setRepeat(!_config2.default.repeat);\n\n\t\t\t/*\n   \tVisually sync repeat\n   */\n\t\t\t_visual2.default.syncRepeat();\n\t\t}\n\t}\n\n\t/**\n  * Sets the repeat state for the song.\n  *\n  * Public Accessor: Amplitude.setRepeatSong()\n  *\n  * @access public\n  */\n\tfunction setRepeatSong() {\n\t\tif (!_config2.default.is_touch_moving) {\n\t\t\t/*\n    Sets repeat to the opposite of what it was set to\n   */\n\t\t\t_helpers4.default.setRepeatSong(!_config2.default.repeat_song);\n\n\t\t\t/*\n    Visually sync repeat song\n   */\n\t\t\t_visual2.default.syncRepeatSong();\n\t\t}\n\t}\n\n\t/**\n  * Gets the default album art for the player\n  *\n  * Public Accessor: Amplitude.getDefaultAlbumArt()\n  *\n  * @access public\n  */\n\tfunction getDefaultAlbumArt() {\n\t\treturn _config2.default.default_album_art;\n\t}\n\n\t/**\n  * Sets the default album art for the player\n  *\n  * Public Accessor: Amplitude.setDefaultAlbumArt( url )\n  *\n  * @access public\n  * @param {string} url \t- A string representing the URL of the new default album art.\n  */\n\tfunction setDefaultAlbumArt(url) {\n\t\t_config2.default.default_album_art = url;\n\t}\n\n\t/**\n  * Allows the user to get the percentage of the song played.\n  *\n  * Public Accessor: Amplitude.getSongPlayedPercentage();\n  *\n  * @access public\n  */\n\tfunction getSongPlayedPercentage() {\n\t\t/*\n  \tReturns the percentage of the song played.\n  */\n\t\treturn _config2.default.active_song.currentTime / _config2.default.active_song.duration * 100;\n\t}\n\n\t/**\n  * Allows the user to set how far into the song they want to be. This is\n  * helpful for implementing custom range sliders. Only works on the current song.\n  *\n  * Public Accessor: Amplitude.setSongPlayedPercentage( float );\n  *\n  * @access public\n  * @param {number} percentage \t- The percentage of the song played\n  */\n\tfunction setSongPlayedPercentage(percentage) {\n\t\t/*\n  \tEnsures the percentage is a number and is between 0 and 100.\n  */\n\t\tif (typeof percentage == 'number' && percentage > 0 && percentage < 100) {\n\t\t\t/*\n   \tSets the current time of the song to the percentage.\n   */\n\t\t\t_config2.default.active_song.currentTime = _config2.default.active_song.duration * (percentage / 100);\n\t\t}\n\t}\n\n\t/**\n  * Allows the user to turn on debugging.\n  *\n  * Public Accessor: Amplitude.setDebug( bool );\n  *\n  * @access public\n  * @param {boolean} state \t\t- Turns debugging on and off.\n  */\n\tfunction setDebug(state) {\n\t\t/*\n  \tSets the global config debug on or off.\n  */\n\t\t_config2.default.debug = state;\n\t}\n\n\t/**\n  * Returns the active song meta data for the user to do what is\n  * needed.\n  *\n  * Public Accessor: Amplitude.getActiveSongMetadata();\n  *\n  * @access public\n  * @returns {object} JSON Object with the active song information\n  */\n\tfunction getActiveSongMetadata() {\n\t\treturn _config2.default.active_metadata;\n\t}\n\n\t/**\n  * Returns a song in the songs array at that index\n  *\n  * Public Accessor: Amplitude.getSongByIndex( song_index )\n  *\n  * @access public\n  * @param {number} index \t- The integer for the index of the song in the songs array.\n  * @returns {object} JSON representation for the song at a specific index.\n  */\n\tfunction getSongByIndex(index) {\n\t\treturn _config2.default.songs[index];\n\t}\n\n\t/**\n  * Returns a song at a playlist index\n  *\n  * Public Accessor: Amplitude.getSongAtPlaylistIndex( playlist, index\n  *\n  * @access public\n  * @param {number} index \t\t\t- The integer for the index of the song in the playlist.\n  * @param {string} playlist\t\t- The key of the playlist we are getting the song at the index for\n  * @returns {object} JSON representation for the song at a specific index.\n  */\n\tfunction getSongAtPlaylistIndex(playlist, index) {\n\t\tvar songIndex = _config2.default.playlists[playlist][index];\n\n\t\treturn _config2.default.songs[songIndex];\n\t}\n\n\t/**\n  * Adds a song to the end of the config array.  This will allow Amplitude\n  * to play the song in a playlist type setting.\n  *\n  * Public Accessor: Amplitude.addSong( song_json )\n  *\n  * @access public\n  * @param {object} song \t- JSON representation of a song.\n  * @returns {number} New index of the song.\n  */\n\tfunction addSong(song) {\n\t\t/*\n  \tEnsures we have a songs array to push to.\n  */\n\t\tif (_config2.default.songs == undefined) {\n\t\t\t_config2.default.songs = [];\n\t\t}\n\n\t\t_config2.default.songs.push(song);\n\t\treturn _config2.default.songs.length - 1;\n\t}\n\n\t/**\n  * Adds a song to a playlist. This will allow Amplitude to play the song in the\n  * playlist\n  *\n  * Public Accessor: Amplitude.addSongToPlaylist( song_json, playlist_key )\n  *\n  * @access public\n  * @param {object} song \t\t\t- JSON representation of a song.\n  * @param {string} playlist\t\t- Playlist we are adding the song to.\n  * @returns {mixed} New index of song in playlist or null if no playlist exists\n  */\n\tfunction addSongToPlaylist(song, playlist) {\n\t\t/*\n  \tEnsures we have a songs array to push to. This is step 1.\n  */\n\t\tif (_config2.default.songs == undefined) {\n\t\t\t_config2.default.songs = [];\n\t\t}\n\n\t\t_config2.default.songs.push(song);\n\n\t\tvar songIndex = _config2.default.songs.length - 1;\n\n\t\t/*\n  \tEnsures the playlist is valid to push the song on to.\n  */\n\t\tif (_config2.default.playlists[playlist] != undefined) {\n\t\t\t_config2.default.playlists[playlist].push(songIndex);\n\n\t\t\treturn _config2.default.playlists[playlist].length - 1;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n  * Removes a song from the song array\n  *\n  * Public Accessor: Amplitude.removeSong( index )\n  *\n  * @access public\n  * @param {integer} index \t\t\t- Index of the song being removed\n  * @returns {boolean} True if removed false if not.\n  */\n\tfunction removeSong(index) {\n\t\tif (_config2.default.songs[index] != undefined) {\n\t\t\t_config2.default.songs.splice(index, 1);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n  * Removes a song from the playlist\n  *\n  * Public Accessor: Amplitude.removeSongFromPlaylist( index, playlist )\n  *\n  * @access public\n  * @param {integer} index \t\t\t- Index of the song being removed from the playlist.\n  * @param {string} playlist\t\t\t- Playlist we are removing the song from.\n  * @returns {boolean} True if removed false if not.\n  */\n\tfunction removeSongFromPlaylist(index, playlist) {\n\t\tif (_config2.default.playlists[playlist] != undefined) {\n\t\t\t_config2.default.playlists[playlist].splice(index, 1);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n  * When you pass a song object it plays that song right awawy.  It sets\n  * the active song in the config to the song you pass in and synchronizes\n  * the visuals.\n  *\n  * Public Accessor: Amplitude.playNow( song )\n  *\n  * @access public\n  * @param {object} song \t- JSON representation of a song.\n  */\n\tfunction playNow(song) {\n\t\t_core2.default.playNow(song);\n\t}\n\n\t/**\n  * Plays a song at the index passed in from the songs array.\n  *\n  * Public Accessor: Amplitude.playSongAtIndex( index )\n  *\n  * @access public\n  * @param {number} index \t- The number representing the song in the songs array.\n  */\n\tfunction playSongAtIndex(index) {\n\t\t_core2.default.playSongAtIndex(index);\n\t}\n\n\t/**\n  * Plays a song at the index passed in for the playlist provided. The index passed\n  * in should be the index of the song in the playlist and not the songs array.\n  *\n  * @access public\n  * @param {number} index \t\t- The number representing the song in the playlist array.\n  * @param {string} playlist - The key string representing the playlist we are playing the song from.\n  *\n  */\n\tfunction playPlaylistSongAtIndex(index, playlist) {\n\t\t_core2.default.playPlaylistSongAtIndex(index, playlist);\n\t}\n\n\t/**\n  * @TODO: Implement Add Song To Playlist Functionality\n  */\n\tfunction addSongToPlaylist(song, playlist) {}\n\n\t/**\n  * Allows the user to play whatever the active song is directly\n  * through Javascript. Normally ALL of Amplitude functions that access\n  * the core features are called through event handlers.\n  *\n  * Public Accessor: Amplitude.play();\n  *\n  * @access public\n  */\n\tfunction play() {\n\t\t_core2.default.play();\n\t}\n\n\t/**\n  * Allows the user to pause whatever the active song is directly\n  * through Javascript. Normally ALL of Amplitude functions that access\n  * the core features are called through event handlers.\n  *\n  * Public Accessor: Amplitude.pause();\n  *\n  * @access public\n  */\n\tfunction pause() {\n\t\t_core2.default.pause();\n\t}\n\n\t/**\n  * Returns the audio object used to play the audio\n  *\n  * Public Accessor: Amplitude.getAudio();\n  *\n  * @access public\n  */\n\tfunction getAudio() {\n\t\treturn _config2.default.active_song;\n\t}\n\n\t/**\n  * Plays the next song either in the playlist or globally.\n  *\n  * Public Accessor: Amplitude.next( playlist );\n  *\n  * @access public\n  * @param {string} [playlist = null] \t- The playlist key\n  */\n\tfunction next() {\n\t\tvar playlist = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t/*\n  \tIf the playlist is empty or null, then we check the active\n  \tplaylist\n  */\n\t\tif (playlist == '' || playlist == null) {\n\t\t\t/*\n   \tIf the active playlist is null, then we set the next global\n   \tsong or we set the next in the playlist.\n   */\n\t\t\tif (_config2.default.active_playlist == null || _config2.default.active_playlist == '') {\n\t\t\t\t_helpers4.default.setNext();\n\t\t\t} else {\n\t\t\t\t_helpers4.default.setNextPlaylist(_config2.default.active_playlist);\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tSet the next in the playlist for the key provided.\n   */\n\t\t\t_helpers4.default.setNextPlaylist(playlist);\n\t\t}\n\t}\n\n\t/**\n  * Plays the prev song either in the playlist or globally.\n  *\n  * Public Accessor: Amplitude.prev( playlist );\n  *\n  * @access public\n  * @param {string} [playlist = null] \t- The playlist key\n  */\n\tfunction prev() {\n\t\tvar playlist = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t/*\n  \tIf the playlist is empty or null, then we check the active\n  \tplaylist\n  */\n\t\tif (playlist == '' || playlist == null) {\n\t\t\t/*\n   \tIf the active playlist is null, then we set the prev global\n   \tsong or we set the prev in the playlist.\n   */\n\t\t\tif (_config2.default.active_playlist == null || _config2.default.active_playlist == '') {\n\t\t\t\t_helpers4.default.setPrev();\n\t\t\t} else {\n\t\t\t\t_helpers4.default.setPrevPlaylist(_config2.default.active_playlist);\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n   \tSet the prev in the playlist for the key provided.\n   */\n\t\t\t_helpers4.default.setPrevPlaylist(playlist);\n\t\t}\n\t}\n\n\t/**\n  * Gets all of the songs in the songs array\n  *\n  * Public Accessor: Amplitude.getSongs( );\n  *\n  * @access public\n  */\n\tfunction getSongs() {\n\t\treturn _config2.default.songs;\n\t}\n\n\t/**\n  * Gets all of the songs in a playlist\n  *\n  * Public Accessor: Amplitude.getSongsInPlaylist( playlist );\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist key\n  */\n\tfunction getSongsInPlaylist(playlist) {\n\t\tvar songsArray = [];\n\n\t\tfor (var i = 0; i < _config2.default.playlists[playlist].length; i++) {\n\t\t\tsongsArray.push(_config2.default.songs[i]);\n\t\t}\n\n\t\treturn songsArray;\n\t}\n\n\t/**\n  * Get current state of songs. If shuffled, this will return the shuffled\n  * songs.\n  *\n  * Public Accessor: Amplitude.getSongsState();\n  *\n  * @access public\n  */\n\tfunction getSongsState() {\n\t\tif (_config2.default.shuffle_on) {\n\t\t\treturn _config2.default.shuffle_list;\n\t\t} else {\n\t\t\treturn _config2.default.songs;\n\t\t}\n\t}\n\n\t/**\n  * Get current state of songs in playlist. If shuffled, this will return the\n  * shuffled songs.\n  *\n  * Public Accessor: Amplitude.getSongsStatePlaylist( playlist );\n  *\n  * @access public\n  * @param {string} playlist \t- The playlist key\n  * @todo Finish commenting\n  */\n\tfunction getSongsStatePlaylist(playlist) {\n\t\tvar songsArray = [];\n\n\t\tif (_config2.default.shuffled_status[playlist]) {\n\n\t\t\tfor (var i = 0; i < _config2.default.shuffled_playlists[playlist].length; i++) {\n\t\t\t\tsongsArray.push(_config2.default.songs[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\tfor (var _i = 0; _i < _config2.default.playlists[playlist].length; _i++) {\n\t\t\t\tsongsArray.push(_config2.default.songs[_i]);\n\t\t\t}\n\t\t}\n\n\t\treturn songsArray;\n\t}\n\n\t/**\n  * Gets the active index of the player\n  *\n  * Public Accessor: Amplitude.getActiveIndex()\n  *\n  * @access public\n  */\n\tfunction getActiveIndex() {\n\t\treturn parseInt(_config2.default.active_index);\n\t}\n\n\t/**\n  * Gets the active index with respect to the state of the player whether it is\n  * shuffled or not.\n  *\n  * Public Accessor: Amplitude.getActiveIndexState()\n  *\n  * @access public\n  */\n\tfunction getActiveIndexState() {\n\t\tif (_config2.default.shuffle_on) {\n\t\t\treturn parseInt(_config2.default.shuffle_active_index);\n\t\t} else {\n\t\t\treturn parseInt(_config2.default.active_index);\n\t\t}\n\t}\n\n\t/**\n  * Get the version of AmplitudeJS\n  *\n  * Public Accessor: Amplitude.getVersion()\n  *\n  * @access public\n  */\n\tfunction getVersion() {\n\t\treturn _config2.default.version;\n\t}\n\n\t/**\n  * Get the buffered amount for the current song\n  *\n  * Public Accessor: Amplitude.getBuffered()\n  *\n  * @access public\n  */\n\tfunction getBuffered() {\n\t\treturn _config2.default.buffered;\n\t}\n\n\t/**\n  * Skip to a certain location in a selected song.\n  *\n  * Public Accessor: Amplitude.getBuffered()\n  *\n  * @access public\n  * @param {number} seconds \t\t\t\t\t\t- The amount of seconds we should skip to in the song.\n  * @param {number} songIndex \t\t\t\t\t- The index of the song in the songs array.\n  * @param {string} [playlist = null]\t- The playlist the song we are skipping to belogns to.\n  */\n\tfunction skipTo(seconds, songIndex) {\n\t\tvar playlist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\t\tif (playlist != null) {\n\t\t\tif (_helpers2.default.checkNewPlaylist(playlist)) {\n\t\t\t\t_helpers2.default.setActivePlaylist(playlist);\n\t\t\t}\n\t\t}\n\n\t\tseconds = parseInt(seconds);\n\n\t\t/*\n  \tChanges the song to where it's being skipped and then\n  \tplay the song.\n  */\n\t\t_helpers2.default.changeSong(songIndex);\n\t\t_core2.default.play();\n\n\t\t_visual2.default.syncMainPlayPause('playing');\n\n\t\tif (playlist != null) {\n\t\t\t_visual2.default.syncPlaylistPlayPause(playlist, 'playing');\n\t\t}\n\n\t\t_visual2.default.syncSongPlayPause(playlist, songIndex, 'playing');\n\n\t\t/*\n  \tSkip to the location in the song.\n  */\n\t\t_core2.default.skipToLocation(seconds);\n\t}\n\n\t/*\n \tReturns all of the publically accesible methods.\n */\n\treturn {\n\t\tinit: init,\n\t\tbindNewElements: bindNewElements,\n\t\tgetActivePlaylist: getActivePlaylist,\n\t\tgetPlaybackSpeed: getPlaybackSpeed,\n\t\tgetRepeat: getRepeat,\n\t\tgetShuffle: getShuffle,\n\t\tgetShufflePlaylist: getShufflePlaylist,\n\t\tsetShuffle: setShuffle,\n\t\tsetShufflePlaylist: setShufflePlaylist,\n\t\tsetRepeat: setRepeat,\n\t\tsetRepeatSong: setRepeatSong,\n\t\tgetDefaultAlbumArt: getDefaultAlbumArt,\n\t\tsetDefaultAlbumArt: setDefaultAlbumArt,\n\t\tgetSongPlayedPercentage: getSongPlayedPercentage,\n\t\tsetSongPlayedPercentage: setSongPlayedPercentage,\n\t\tsetDebug: setDebug,\n\t\tgetActiveSongMetadata: getActiveSongMetadata,\n\t\tgetSongByIndex: getSongByIndex,\n\t\tgetSongAtPlaylistIndex: getSongAtPlaylistIndex,\n\t\taddSong: addSong,\n\t\taddSongToPlaylist: addSongToPlaylist,\n\t\tremoveSong: removeSong,\n\t\tremoveSongFromPlaylist: removeSongFromPlaylist,\n\t\tplayNow: playNow,\n\t\tplaySongAtIndex: playSongAtIndex,\n\t\tplayPlaylistSongAtIndex: playPlaylistSongAtIndex,\n\t\tplay: play,\n\t\tpause: pause,\n\t\taudio: getAudio,\n\t\tnext: next,\n\t\tprev: prev,\n\t\tgetSongs: getSongs,\n\t\tgetSongsInPlaylist: getSongsInPlaylist,\n\t\tgetSongsState: getSongsState,\n\t\tgetSongsStatePlaylist: getSongsStatePlaylist,\n\t\tgetActiveIndex: getActiveIndex,\n\t\tgetActiveIndexState: getActiveIndexState,\n\t\tgetVersion: getVersion,\n\t\tgetBuffered: getBuffered,\n\t\tskipTo: skipTo\n\t};\n}();\n\n/**\n * Imports the config module\n * @module config\n */\n\n\n/**\n * AmplitudeJS Events Helpers Module\n *\n * @module events/AmplitudeEventsHelpers\n */\n\n\n/**\n * AmplitudeJS Core Helpers Module\n *\n * @module core/AmplitudeCoreHelpers\n */\n/**\n * @name \t\tAmplitude.js\n * @version 3.2.0\n * @author \tDan Pastori (521 Dimensions) <dan@521dimensions.com>\n*/\n\n/**\n * AmplitudeJS Initializer Module\n *\n * @module init/AmplitudeInitializer\n */\nexports.default = Amplitude;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _helpers = __webpack_require__(1);\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _init = __webpack_require__(6);\n\nvar _init2 = _interopRequireDefault(_init);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * These helpers wrap around the basic methods of the Soundcloud API\n * and get the information we need from SoundCloud to make the songs\n * streamable through Amplitude\n *\n * @module soundcloud/AmplitudeSoundcloud\n */\n\n\n/**\n * Imports the helper functions for the core module\n * @module core/AmplitudeHelers\n */\nvar AmplitudeSoundcloud = function () {\n\n\t/**\n  * Defines the temporary user config used while we configure soundcloud\n  * @type {object}\n  */\n\tvar tempUserConfig = {};\n\n\t/**\n  * Loads the soundcloud SDK for use with Amplitude so the user doesn't have\n  * to load it themselves.\n  * With help from: http://stackoverflow.com/questions/950087/include-a-javascript-file-in-another-javascript-file\n  *\n  * @access public\n  * @param {object} userConfig \t- The config defined by the user for AmplitudeJS\n  */\n\tfunction loadSoundCloud(userConfig) {\n\t\t/*\n  \tSets the temporary config to the config passed by the user so we can make changes\n  \tand not break the actual config.\n  */\n\t\ttempUserConfig = userConfig;\n\n\t\t/*\n  \tGets the head tag for the document and create a script element.\n  */\n\t\tvar head = document.getElementsByTagName('head')[0];\n\t\tvar script = document.createElement('script');\n\n\t\tscript.type = 'text/javascript';\n\n\t\t/*\n  \tURL to the remote soundcloud SDK\n  */\n\t\tscript.src = 'https://connect.soundcloud.com/sdk.js';\n\t\tscript.onreadystatechange = initSoundcloud;\n\t\tscript.onload = initSoundcloud;\n\n\t\t/*\n  \tAdd the script to the head of the document.\n  */\n\t\thead.appendChild(script);\n\t}\n\n\t/**\n  * Initializes soundcloud with the key provided.\n  *\n  * @access private\n  */\n\tfunction initSoundcloud() {\n\t\t/*\n  \tCalls the SoundCloud initialize function\n  \tfrom their API and sends it the client_id\n  \tthat the user passed in.\n  */\n\t\tSC.initialize({\n\t\t\tclient_id: _config2.default.soundcloud_client\n\t\t});\n\n\t\t/*\n  \tGets the streamable URLs to run through Amplitue. This is\n  \tVERY important since Amplitude can't stream the copy and pasted\n  \tlink from the SoundCloud page, but can resolve the streaming\n  \tURLs from the link.\n  */\n\t\tgetStreamableURLs();\n\t}\n\n\t/**\n  * Gets the streamable URL from the URL provided for\n  * all of the soundcloud links.  This will loop through\n  * and set all of the information for the soundcloud\n  * urls.\n  *\n  * @access private\n  */\n\tfunction getStreamableURLs() {\n\t\t/*\n  \tDefine the regex to find the soundcloud URLs\n  */\n\t\tvar soundcloud_regex = /^https?:\\/\\/(soundcloud.com|snd.sc)\\/(.*)$/;\n\n\t\tfor (var i = 0; i < _config2.default.songs.length; i++) {\n\t\t\t/*\n   \tIf the URL matches soundcloud, we grab\n   \tthat url and get the streamable link\n   \tif there is one.\n   */\n\t\t\tif (_config2.default.songs[i].url.match(soundcloud_regex)) {\n\t\t\t\t_config2.default.soundcloud_song_count++;\n\t\t\t\tresolveStreamable(_config2.default.songs[i].url, i);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Due to Soundcloud SDK being asynchronous, we need to scope the\n  * index of the song in another function. The privateGetSoundcloudStreamableURLs\n  * function does the actual iteration and scoping.\n  *\n  * @access private\n  * @param {string} url \t\t- URL of the soundcloud song\n  * @param {number} index \t- The index of the soundcloud song in the songs array.\n  */\n\tfunction resolveStreamable(url, index) {\n\t\tSC.get('/resolve/?url=' + url, function (sound) {\n\t\t\t/*\n   \tIf streamable we get the url and bind the client ID to the end\n   \tso Amplitude can just stream the song normally. We then overwrite\n   \tthe url the user provided with the streamable URL.\n   */\n\t\t\tif (sound.streamable) {\n\t\t\t\t_config2.default.songs[index].url = sound.stream_url + '?client_id=' + _config2.default.soundcloud_client;\n\n\t\t\t\t/*\n    \tIf the user want's to use soundcloud art, we overwrite the\n    \tcover_art_url with the soundcloud artwork url.\n    */\n\t\t\t\tif (_config2.default.soundcloud_use_art) {\n\t\t\t\t\t_config2.default.songs[index].cover_art_url = sound.artwork_url;\n\t\t\t\t}\n\n\t\t\t\t/*\n    \tGrab the extra metadata from soundcloud and bind it to the\n    \tsong.  The user can get this through the public function:\n    \tgetActiveSongMetadata\n    */\n\t\t\t\t_config2.default.songs[index].soundcloud_data = sound;\n\t\t\t} else {\n\t\t\t\t/*\n    \tIf not streamable, then we print a message to the user stating\n    \tthat the song with name X and artist X is not streamable. This\n    \tgets printed ONLY if they have debug turned on.\n    */\n\t\t\t\t_helpers2.default.writeDebugMessage(_config2.default.songs[index].name + ' by ' + _config2.default.songs[index].artist + ' is not streamable by the Soundcloud API');\n\t\t\t}\n\t\t\t/*\n   \tIncrements the song ready counter.\n   */\n\t\t\t_config2.default.soundcloud_songs_ready++;\n\n\t\t\t/*\n   \tWhen all songs are accounted for, then amplitude is ready\n   \tto rock and we set the rest of the config.\n   */\n\t\t\tif (_config2.default.soundcloud_songs_ready == _config2.default.soundcloud_song_count) {\n\t\t\t\t_init2.default.setConfig(tempUserConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n \tReturns the publically accessible methods\n */\n\treturn {\n\t\tloadSoundCloud: loadSoundCloud\n\t};\n}();\n\n/**\n * Imports the initializer\n * @module init/AmplitudeInitializer\n */\n/**\n * Imports the config module\n * @module config\n */\nexports.default = AmplitudeSoundcloud;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _config = __webpack_require__(0);\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * These methods help sync visual displays. They essentially make the visual sync\n * methods smaller and more maintainable.\n *\n * @module visual/AmplitudeVisualSyncHelpers\n */\nvar AmplitudeVisualSyncHelpers = function () {\n\t/**\n  * Updates any elements that display the current hour for the song.\n  *\n  * @access public\n  * @param {number} hours \t- An integer conaining how many hours into the song.\n  */\n\tfunction syncCurrentHours(hours) {\n\t\t/*\n  \tGets all of the song hour selectors.\n  */\n\t\tvar hourSelectors = [];\n\n\t\tif (_config2.default.active_playlist != null && _config2.default.active_playlist != '') {\n\t\t\thourSelectors = ['.amplitude-current-hours[amplitude-main-current-hours=\"true\"]', '.amplitude-current-hours[amplitude-playlist-current-hours=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]', '.amplitude-current-hours[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t} else {\n\t\t\thourSelectors = ['.amplitude-current-hours[amplitude-main-current-hours=\"true\"]', '.amplitude-current-hours[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t}\n\n\t\t/*\n  \tEnsures that there are some hour selectors.\n  */\n\t\tif (document.querySelectorAll(hourSelectors.join()).length > 0) {\n\t\t\t/*\n   \tGet all of the hour selectors\n   */\n\t\t\tvar currentHourSelectors = document.querySelectorAll(hourSelectors.join());\n\n\t\t\t/*\n   \tSet the current hour selector's inner html to hours passed in.\n   */\n\t\t\tfor (var i = 0; i < currentHourSelectors.length; i++) {\n\t\t\t\t/*\n    \tIf the selector is a main selector, we set the hours.\n    */\n\t\t\t\tif (currentHourSelectors[i].getAttribute('amplitude-main-current-hours') == 'true') {\n\t\t\t\t\tcurrentHourSelectors[i].innerHTML = hours;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tIf the active playlist is not null or empty\n     \tand the attribute of the playlist is equal to the\n     \tactive playlist, then we set the inner html.\n     */\n\t\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && currentHourSelectors[i].getAttribute('amplitude-playlist') == _config2.default.active_playlist) {\n\t\t\t\t\t\tcurrentHourSelectors[i].innerHTML = hours;\n\t\t\t\t\t\t/*\n      \tIf the active playlist is not set and the selector\n      \tdoes not have a playlist then we set the hours. This\n      \tmeans that the current selector is an individual song\n      \tselector.\n      */\n\t\t\t\t\t} else if (_config2.default.active_playlist == '' || _config2.default.active_playlist == null && !currentHourSelectors[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\t\tcurrentHourSelectors[i].innerHTML = hours;\n\t\t\t\t\t\t/*\n      \tIf nothing else matches, set the selector's inner HTML to '00'\n      */\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentHourSelectors[i].innerHTML = '0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/*--------------------------------------------------------------------------\n \tResets the current hours displays to 0\n --------------------------------------------------------------------------*/\n\tfunction resetCurrentHours() {\n\t\t/*\n  \tGets the hour display elements\n  */\n\t\tvar hourSelectors = document.querySelectorAll('.amplitude-current-hours');\n\n\t\t/*\n  \tIterates over all of the hour selectors and sets the inner HTML\n  \tto 00.\n  */\n\t\tfor (var i = 0; i < hourSelectors.length; i++) {\n\t\t\thourSelectors[i].innerHTML = '0';\n\t\t}\n\t}\n\n\t/**\n  * Updates any elements that display the current minutes for the song.\n  *\n  * @access public\n  * @param {number} minutes \t- An integer conaining how many minutes into the song.\n  */\n\tfunction syncCurrentMinutes(minutes) {\n\t\t/*\n  \tGets all of the song minute selectors.\n  */\n\t\tvar minuteSelectors = [];\n\n\t\tif (_config2.default.active_playlist != null && _config2.default.active_playlist != '') {\n\t\t\tminuteSelectors = ['.amplitude-current-minutes[amplitude-main-current-minutes=\"true\"]', '.amplitude-current-minutes[amplitude-playlist-current-minutes=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]', '.amplitude-current-minutes[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t} else {\n\t\t\tminuteSelectors = ['.amplitude-current-minutes[amplitude-main-current-minutes=\"true\"]', '.amplitude-current-minutes[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t}\n\n\t\t/*\n  \tGrabs the current minute selectors\n  */\n\t\tvar currentMinuteSelectors = document.querySelectorAll(minuteSelectors.join());\n\n\t\t/*\n  \tSet the current minute selector's inner html to minutes passed in.\n  */\n\t\tfor (var i = 0, l = currentMinuteSelectors.length; i < l; i++) {\n\t\t\t/*\n   \tIf the selector is a main selector, we set the seconds.\n   */\n\t\t\tif (currentMinuteSelectors[i].getAttribute('amplitude-main-current-minutes') == 'true') {\n\t\t\t\tcurrentMinuteSelectors[i].innerHTML = minutes;\n\t\t\t} else {\n\t\t\t\t/*\n    \tIf the active playlist is not null or empty\n    \tand the attribute of the playlist is equal to the\n    \tactive playlist, then we set the inner html.\n    */\n\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && currentMinuteSelectors[i].getAttribute('amplitude-playlist') == _config2.default.active_playlist) {\n\t\t\t\t\tcurrentMinuteSelectors[i].innerHTML = minutes;\n\t\t\t\t\t/*\n     \tIf the active playlist is not set and the selector\n     \tdoes not have a playlist then we set the minutes. This\n     \tmeans that the current selector is an individual song\n     \tselector.\n     */\n\t\t\t\t} else if (_config2.default.active_playlist == '' || _config2.default.active_playlist == null && !currentMinuteSelectors[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\tcurrentMinuteSelectors[i].innerHTML = minutes;\n\t\t\t\t\t/*\n     \tIf nothing else matches, set the selector's inner HTML to '00'\n     */\n\t\t\t\t} else {\n\t\t\t\t\tcurrentMinuteSelectors[i].innerHTML = '00';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Resets the current minutes displays to 00\n  *\n  * @access public\n  */\n\tfunction resetCurrentMinutes() {\n\t\t/*\n  \tGets the minutes display elements\n  */\n\t\tvar minuteSelectors = document.querySelectorAll('.amplitude-current-minutes');\n\n\t\t/*\n  \tIterates over all of the minute selectors and sets the inner HTML\n  \tto 00.\n  */\n\t\tfor (var i = 0; i < minuteSelectors.length; i++) {\n\t\t\tminuteSelectors[i].innerHTML = '00';\n\t\t}\n\t}\n\n\t/**\n  * Updates any elements that display the current seconds for the song.\n  *\n  * @access public\n  * @param {number} seconds\t- An integer conaining how many seconds into the song.\n  */\n\tfunction syncCurrentSeconds(seconds) {\n\t\t/*\n  \tGets all of the song second selectors. If the active playlist\n  \tis not null, then we get the playlist selectors.\n  */\n\t\tvar secondSelectors = [];\n\n\t\tif (_config2.default.active_playlist != null && _config2.default.active_playlist != '') {\n\t\t\tsecondSelectors = ['.amplitude-current-seconds[amplitude-main-current-seconds=\"true\"]', '.amplitude-current-seconds[amplitude-playlist-current-seconds=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]', '.amplitude-current-seconds[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t} else {\n\t\t\tsecondSelectors = ['.amplitude-current-seconds[amplitude-main-current-seconds=\"true\"]', '.amplitude-current-seconds[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t}\n\n\t\t/*\n  \tGet all of the second selectors\n  */\n\t\tvar currentSecondSelectors = document.querySelectorAll(secondSelectors.join());\n\n\t\t/*\n  \tIterate over all of the second selectors.\n  */\n\t\tfor (var i = 0, l = currentSecondSelectors.length; i < l; i++) {\n\t\t\t/*\n   \tIf the selector is a main selector, we set the seconds.\n   */\n\t\t\tif (currentSecondSelectors[i].getAttribute('amplitude-main-current-seconds') == 'true') {\n\t\t\t\tcurrentSecondSelectors[i].innerHTML = seconds;\n\t\t\t} else {\n\t\t\t\t/*\n    \tIf the active playlist is not null or empty\n    \tand the attribute of the playlist is equal to the\n    \tactive playlist, then we set the inner html.\n    */\n\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && currentSecondSelectors[i].getAttribute('amplitude-playlist') == _config2.default.active_playlist) {\n\t\t\t\t\tcurrentSecondSelectors[i].innerHTML = seconds;\n\t\t\t\t\t/*\n     \tIf the active playlist is not set and the selector\n     \tdoes not have a playlist then we set the seconds. This\n     \tmeans that the current selector is an individual song\n     \tselector.\n     */\n\t\t\t\t} else if (_config2.default.active_playlist == '' || _config2.default.active_playlist == null && !currentSecondSelectors[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\tcurrentSecondSelectors[i].innerHTML = seconds;\n\t\t\t\t\t/*\n     \tIf nothing else matches, set the selector's inner HTML to '00'\n     */\n\t\t\t\t} else {\n\t\t\t\t\tcurrentSecondSelectors[i].innerHTML = '00';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Resets the current seconds displays to 00\n  *\n  * @access public\n  */\n\tfunction resetCurrentSeconds() {\n\t\t/*\n  \tGets the seconds display elements\n  */\n\t\tvar secondSelectors = document.querySelectorAll('.amplitude-current-seconds');\n\n\t\t/*\n  \tIterates over all of the seconds selectors and sets the inner HTML\n  \tto 00.\n  */\n\t\tfor (var i = 0; i < secondSelectors.length; i++) {\n\t\t\tsecondSelectors[i].innerHTML = '00';\n\t\t}\n\t}\n\n\t/**\n  * Updates any elements that display the current time for the song. This\n  * is a computed field that will be commonly used.\n  *\n  * @access public\n  * @param {object} currentTime \t- A json object conaining the parts for the current time for the song.\n  */\n\tfunction syncCurrentTime(currentTime) {\n\t\t/*\n  \tGets all of the song time selectors.\n  */\n\t\tvar timeSelectors = ['.amplitude-current-time[amplitude-main-current-time=\"true\"]', '.amplitude-current-time[amplitude-playlist-main-current-time=\"' + _config2.default.active_playlist + '\"]', '.amplitude-current-time[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\n\t\t/*\n  \tGet all of the time selectors.\n  */\n\t\tvar currentTimeSelectors = document.querySelectorAll(timeSelectors.join());\n\n\t\t/*\n  \tSet the time selector's inner html to the current time for the song. The current\n  \ttime is computed by joining minutes and seconds.\n  */\n\t\tvar timeText = currentTime.minutes + ':' + currentTime.seconds;\n\t\tif (currentTime.hours > 0) {\n\t\t\ttimeText = currentTime.hours + ':' + timeText;\n\t\t}\n\t\tfor (var i = 0, l = currentTimeSelectors.length; i < l; i++) {\n\t\t\tcurrentTimeSelectors[i].innerHTML = timeText;\n\t\t}\n\t}\n\n\t/**\n  * Resets the current time displays to 00:00\n  *\n  * @access public\n  */\n\tfunction resetCurrentTime() {\n\t\t/*\n  \tGets the time selector display elements\n  */\n\t\tvar timeSelectors = document.querySelectorAll('.amplitude-current-time');\n\n\t\t/*\n  \tIterates over all of the time selectors and sets the inner HTML\n  \tto 00.\n  */\n\t\tfor (var i = 0; i < timeSelectors.length; i++) {\n\t\t\ttimeSelectors[i].innerHTML = '00:00';\n\t\t}\n\t}\n\n\t/**\n  * Syncs the song played progress bars. These are HTML5 progress elements.\n  *\n  * @access private\n  * @param {number} songPlayedPercentage  \t- The percentage of the song that has been played.\n  */\n\tfunction syncSongPlayedProgressBar(songPlayedPercentage) {\n\t\tsyncMainSongPlayedProgressBars(songPlayedPercentage);\n\t\tsyncPlaylistSongPlayedProgressBars(songPlayedPercentage);\n\t\tsyncIndividualSongPlayedProgressBars(songPlayedPercentage);\n\t}\n\n\t/**\n  * Sync how much has been played with a progress bar. This is the main progress bar.\n  *\n  * @access private\n  * @param {number} songPlayedPercentage \t- The percent of the song completed.\n  */\n\tfunction syncMainSongPlayedProgressBars(songPlayedPercentage) {\n\t\t/*\n  \tEnsure that the song completion percentage is a number\n  */\n\t\tif (!isNaN(songPlayedPercentage)) {\n\t\t\t/*\n   \tGet all of the song progress bars\n   */\n\t\t\tvar songPlayedProgressBars = document.querySelectorAll('.amplitude-song-played-progress[amplitude-main-song-played-progress=\"true\"]');\n\n\t\t\tfor (var i = 0; i < songPlayedProgressBars.length; i++) {\n\t\t\t\tvar max = songPlayedProgressBars[i].max;\n\n\t\t\t\tsongPlayedProgressBars[i].value = songPlayedPercentage / 100 * max;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Sync how much has been played with a progress bar. This is the playlist progress bar.\n  *\n  * @access public\n  * @param {number} songPlayedPercentage \t- The percent of the song completed.\n  */\n\tfunction syncPlaylistSongPlayedProgressBars(songPlayedPercentage) {\n\t\t/*\n  \tEnsure that the song completion percentage is a number\n  */\n\t\tif (!isNaN(songPlayedPercentage)) {\n\t\t\t/*\n   \tGet all of the song progress bars\n   */\n\t\t\tvar songPlayedProgressBars = document.querySelectorAll('.amplitude-song-played-progress[amplitude-playlist-song-played-progress=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]');\n\n\t\t\tfor (var i = 0; i < songPlayedProgressBars.length; i++) {\n\t\t\t\tvar max = songPlayedProgressBars[i].max;\n\n\t\t\t\tsongPlayedProgressBars[i].value = songPlayedPercentage / 100 * max;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Sync how much has been played with a progress bar. This is for an individual song.\n  *\n  * @access private\n  * @param {number} songPlayedPercentage \t- The percent of the song completed.\n  */\n\tfunction syncIndividualSongPlayedProgressBars(songPlayedPercentage) {\n\t\t/*\n  \tEnsure that the song completion percentage is a number\n  */\n\t\tif (!isNaN(songPlayedPercentage)) {\n\t\t\t/*\n   \tIf the active playlist is not null, we get the individual song\n   \tplayed progress for the playlist.\n   */\n\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null) {\n\t\t\t\t/*\n    \tGet all of the song progress bars\n    */\n\t\t\t\tvar songPlayedProgressBars = document.querySelectorAll('.amplitude-song-played-progress[amplitude-playlist=\"' + _config2.default.active_playlist + '\"][amplitude-song-index=\"' + _config2.default.active_index + '\"]');\n\n\t\t\t\tfor (var i = 0; i < songPlayedProgressBars.length; i++) {\n\t\t\t\t\tvar max = songPlayedProgressBars[i].max;\n\n\t\t\t\t\tsongPlayedProgressBars[i].value = songPlayedPercentage / 100 * max;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n    \tGet all of the song progress bars\n    */\n\t\t\t\tvar _songPlayedProgressBars = document.querySelectorAll('.amplitude-song-played-progress[amplitude-song-index=\"' + _config2.default.active_index + '\"]');\n\n\t\t\t\tfor (var _i = 0; _i < _songPlayedProgressBars.length; _i++) {\n\t\t\t\t\tvar _max = _songPlayedProgressBars[_i].max;\n\n\t\t\t\t\t_songPlayedProgressBars[_i].value = songPlayedPercentage / 100 * _max;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Sets an element to be playing by removing the 'amplitude-paused' class\n  * and adding the 'amplitude-playing' class\n  *\n  * @access public\n  * @param {element} element \t- The element getting the playing class added.\n  */\n\tfunction setElementPlay(element) {\n\t\telement.classList.add('amplitude-playing');\n\t\telement.classList.remove('amplitude-paused');\n\t}\n\n\t/**\n  * Sets an element to be paused by adding the 'amplitude-paused' class\n  * and removing the 'amplitude-playing' class\n  *\n  * @access public\n  * @param {element} element \t- The element getting the paused class added.\n  */\n\tfunction setElementPause(element) {\n\t\telement.classList.remove('amplitude-playing');\n\t\telement.classList.add('amplitude-paused');\n\t}\n\n\t/**\n  * Updates any elements that display the duration hour for the song.\n  *\n  * @access public\n  * @param {number} hours \t\t- An integer conaining how many hours are in the song\n  */\n\tfunction syncDurationHours(hours) {\n\t\t/*\n  \tGets all of the song hour selectors.\n  */\n\t\tvar hourSelectors = [];\n\n\t\tif (_config2.default.active_playlist != null && _config2.default.active_playlist != '') {\n\t\t\thourSelectors = ['.amplitude-duration-hours[amplitude-main-duration-hours=\"true\"]', '.amplitude-duration-hours[amplitude-playlist-duration-hours=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]', '.amplitude-duration-hours[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t} else {\n\t\t\thourSelectors = ['.amplitude-duration-hours[amplitude-main-duration-hours=\"true\"]', '.amplitude-duration-hours[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t}\n\n\t\t/*\n  \tEnsures that there are some hour selectors.\n  */\n\t\tif (document.querySelectorAll(hourSelectors.join()).length > 0) {\n\t\t\t/*\n   \tGet all of the hour selectors\n   */\n\t\t\tvar durationHourSelectors = document.querySelectorAll(hourSelectors.join());\n\n\t\t\t/*\n   \tSet the duration hour selector's inner html to hours passed in.\n   */\n\t\t\tfor (var i = 0; i < durationHourSelectors.length; i++) {\n\t\t\t\t/*\n    \tIf the selector is a main selector, we set the hours.\n    */\n\t\t\t\tif (durationHourSelectors[i].getAttribute('amplitude-main-duration-hours') == 'true') {\n\t\t\t\t\tdurationHourSelectors[i].innerHTML = hours;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n     \tIf the active playlist is not null or empty\n     \tand the attribute of the playlist is equal to the\n     \tactive playlist, then we set the inner html.\n     */\n\t\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && durationHourSelectors[i].getAttribute('amplitude-playlist') == _config2.default.active_playlist) {\n\t\t\t\t\t\tdurationHourSelectors[i].innerHTML = hours;\n\t\t\t\t\t\t/*\n      \tIf the active playlist is not set and the selector\n      \tdoes not have a playlist then we set the hours. This\n      \tmeans that the duration selector is an individual song\n      \tselector.\n      */\n\t\t\t\t\t} else if (_config2.default.active_playlist == '' || _config2.default.active_playlist == null && !durationHourSelectors[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\t\tdurationHourSelectors[i].innerHTML = hours;\n\t\t\t\t\t\t/*\n      \tIf nothing else matches, set the selector's inner HTML to '00'\n      */\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdurationHourSelectors[i].innerHTML = '0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Updates any elements that display the duration minutes for the song.\n  *\n  * @access public\n  * @param {number} minutes \t- An integer conaining how many minutes into the song.\n  */\n\tfunction syncDurationMinutes(minutes) {\n\t\t/*\n  \tGets all of the song minute selectors.\n  */\n\t\tvar minuteSelectors = [];\n\n\t\tif (_config2.default.active_playlist != null && _config2.default.active_playlist != '') {\n\t\t\tminuteSelectors = ['.amplitude-duration-minutes[amplitude-main-duration-minutes=\"true\"]', '.amplitude-duration-minutes[amplitude-playlist-duration-minutes=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]', '.amplitude-duration-minutes[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t} else {\n\t\t\tminuteSelectors = ['.amplitude-duration-minutes[amplitude-main-duration-minutes=\"true\"]', '.amplitude-duration-minutes[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t}\n\n\t\t/*\n  \tGet all of the minute selectors\n  */\n\t\tvar durationMinuteSelectors = document.querySelectorAll(minuteSelectors.join());\n\n\t\t/*\n  \tSet the duration minute selector's inner html to minutes passed in.\n  */\n\t\tfor (var i = 0; i < durationMinuteSelectors.length; i++) {\n\t\t\t/*\n   \tIf the selector is a main selector, we set the seconds.\n   */\n\t\t\tif (durationMinuteSelectors[i].getAttribute('amplitude-main-duration-minutes') == 'true') {\n\t\t\t\tdurationMinuteSelectors[i].innerHTML = minutes;\n\t\t\t} else {\n\t\t\t\t/*\n    \tIf the active playlist is not null or empty\n    \tand the attribute of the playlist is equal to the\n    \tactive playlist, then we set the inner html.\n    */\n\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && durationMinuteSelectors[i].getAttribute('amplitude-playlist') == _config2.default.active_playlist) {\n\t\t\t\t\tdurationMinuteSelectors[i].innerHTML = minutes;\n\t\t\t\t\t/*\n     \tIf the active playlist is not set and the selector\n     \tdoes not have a playlist then we set the minutes. This\n     \tmeans that the duration selector is an individual song\n     \tselector.\n     */\n\t\t\t\t} else if (_config2.default.active_playlist == '' || _config2.default.active_playlist == null && !durationMinuteSelectors[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\tdurationMinuteSelectors[i].innerHTML = minutes;\n\t\t\t\t\t/*\n     \tIf nothing else matches, set the selector's inner HTML to '00'\n     */\n\t\t\t\t} else {\n\t\t\t\t\tdurationMinuteSelectors[i].innerHTML = '00';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Updates any elements that display the duration seconds for the song.\n  *\n  * @access private\n  * @param {number} seconds \t- An integer conaining how many seconds into the song.\n  */\n\tfunction syncDurationSeconds(seconds) {\n\t\t/*\n  \tGets all of the song second selectors. If the active playlist\n  \tis not null, then we get the playlist selectors.\n  */\n\t\tvar secondSelectors = [];\n\n\t\tif (_config2.default.active_playlist != null && _config2.default.active_playlist != '') {\n\t\t\tsecondSelectors = ['.amplitude-duration-seconds[amplitude-main-duration-seconds=\"true\"]', '.amplitude-duration-seconds[amplitude-playlist-duration-seconds=\"true\"][amplitude-playlist=\"' + _config2.default.active_playlist + '\"]', '.amplitude-duration-seconds[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t} else {\n\t\t\tsecondSelectors = ['.amplitude-duration-seconds[amplitude-main-duration-seconds=\"true\"]', '.amplitude-duration-seconds[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\t\t}\n\n\t\t/*\n  \tGet all of the second selectors\n  */\n\t\tvar durationSecondSelectors = document.querySelectorAll(secondSelectors.join());\n\n\t\t/*\n  \tIterate over all of the second selectors.\n  */\n\t\tfor (var i = 0; i < durationSecondSelectors.length; i++) {\n\t\t\t/*\n   \tIf the selector is a main selector, we set the seconds.\n   */\n\t\t\tif (durationSecondSelectors[i].getAttribute('amplitude-main-duration-seconds') == 'true') {\n\t\t\t\tdurationSecondSelectors[i].innerHTML = seconds;\n\t\t\t} else {\n\t\t\t\t/*\n    \tIf the active playlist is not null or empty\n    \tand the attribute of the playlist is equal to the\n    \tactive playlist, then we set the inner html.\n    */\n\t\t\t\tif (_config2.default.active_playlist != '' && _config2.default.active_playlist != null && durationSecondSelectors[i].getAttribute('amplitude-playlist') == _config2.default.active_playlist) {\n\t\t\t\t\tdurationSecondSelectors[i].innerHTML = seconds;\n\t\t\t\t\t/*\n     \tIf the active playlist is not set and the selector\n     \tdoes not have a playlist then we set the seconds. This\n     \tmeans that the duration selector is an individual song\n     \tselector.\n     */\n\t\t\t\t} else if (_config2.default.active_playlist == '' || _config2.default.active_playlist == null && !durationSecondSelectors[i].hasAttribute('amplitude-playlist')) {\n\t\t\t\t\tdurationSecondSelectors[i].innerHTML = seconds;\n\t\t\t\t\t/*\n     \tIf nothing else matches, set the selector's inner HTML to '00'\n     */\n\t\t\t\t} else {\n\t\t\t\t\tdurationSecondSelectors[i].innerHTML = '00';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Updates any elements that display the duration time for the song. This\n  * is a computed field that will be commonly used.\n  *\n  * @access public\n  * @param {object} durationTime \t- A json object conaining the parts for the duration time for the song.\n  */\n\tfunction syncDurationTime(durationTime) {\n\t\t/*\n  \tGets all of the song time selectors.\n  */\n\t\tvar timeSelectors = ['.amplitude-duration-time[amplitude-main-duration-time=\"true\"]', '.amplitude-duration-time[amplitude-playlist-main-duration-time=\"' + _config2.default.active_playlist + '\"]', '.amplitude-duration-time[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\n\t\t/*\n  \tGet all of the time selectors.\n  */\n\t\tvar durationTimeSelectors = document.querySelectorAll(timeSelectors.join());\n\n\t\t/*\n  \tSet the time selector's inner html to the duration time for the song. The duration\n  \ttime is computed by joining minutes and seconds.\n  */\n\t\tvar durationText = '00:00';\n\t\tif (!isNaN(durationTime.minutes) && !isNaN(durationTime.seconds)) {\n\t\t\tdurationText = durationTime.minutes + ':' + durationTime.seconds;\n\t\t\tif (!isNaN(durationTime.hours) && durationTime.hours > 0) {\n\t\t\t\tdurationText = durationTime.hours + ':' + durationText;\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < durationTimeSelectors.length; i++) {\n\t\t\tdurationTimeSelectors[i].innerHTML = durationText;\n\t\t}\n\t}\n\n\t/**\n  * Updates the elements that show how much time is remaining in the song.\n  *\n  * @access public\n  * @param {object} currentTime \t- A json object containing the parts for the current time for the song.\n  * @param {object} durationTime - A json object conaining the parts for the duration time for the song.\n  */\n\tfunction syncCountDownTime(currentTime, songDuration) {\n\t\t/*\n  \tInitialize time remaining.\n  */\n\t\tvar timeRemaining = '00:00';\n\n\t\t/*\n  \tEnsure that all values are defined.\n  */\n\t\tif (currentTime != undefined && songDuration != undefined) {\n\t\t\t/*\n   \tInitialize the total current seconds and total duration seconds\n   */\n\t\t\tvar totalCurrentSeconds = parseInt(currentTime.seconds) + parseInt(currentTime.minutes) * 60 + parseInt(currentTime.hours) * 60 * 60;\n\t\t\tvar totalDurationSeconds = parseInt(songDuration.seconds) + parseInt(songDuration.minutes) * 60 + parseInt(songDuration.hours) * 60 * 60;\n\n\t\t\t/*\n   \tIf the two variables are numbers we continue the computing.\n   */\n\t\t\tif (!isNaN(totalCurrentSeconds) && !isNaN(totalDurationSeconds)) {\n\t\t\t\t/*\n    \tFind the total remaining seconds.\n    */\n\t\t\t\tvar timeRemainingTotalSeconds = totalDurationSeconds - totalCurrentSeconds;\n\n\t\t\t\tvar remainingHours = Math.floor(timeRemainingTotalSeconds / 3600);\n\t\t\t\tvar remainingMinutes = Math.floor((timeRemainingTotalSeconds - remainingHours * 3600) / 60);\n\t\t\t\tvar remainingSeconds = timeRemainingTotalSeconds - remainingHours * 3600 - remainingMinutes * 60;\n\n\t\t\t\ttimeRemaining = (remainingMinutes < 10 ? '0' + remainingMinutes : remainingMinutes) + ':' + (remainingSeconds < 10 ? '0' + remainingSeconds : remainingSeconds);\n\n\t\t\t\tif (remainingHours > 0) {\n\t\t\t\t\ttimeRemaining = remainingHours + ':' + timeRemaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*\n  \tGets all of the song time selectors.\n  */\n\t\tvar timeSelectors = ['.amplitude-time-remaining[amplitude-main-time-remaining=\"true\"]', '.amplitude-time-remaining[amplitude-playlist-main-time-remaining=\"' + _config2.default.active_playlist + '\"]', '.amplitude-time-remaining[amplitude-song-index=\"' + _config2.default.active_index + '\"]'];\n\n\t\t/*\n  \tGet all of the time selectors.\n  */\n\t\tvar timeRemainingSelectors = document.querySelectorAll(timeSelectors.join());\n\n\t\t/*\n  \tSet the time selector's inner html to the duration time for the song. The duration\n  \ttime is computed by joining minutes and seconds.\n  */\n\t\tfor (var i = 0; i < timeRemainingSelectors.length; i++) {\n\t\t\ttimeRemainingSelectors[i].innerHTML = timeRemaining;\n\t\t}\n\t}\n\n\t/*\n \tReturn the publically available functions.\n */\n\treturn {\n\t\tsyncCurrentHours: syncCurrentHours,\n\t\tsyncCurrentMinutes: syncCurrentMinutes,\n\t\tsyncCurrentSeconds: syncCurrentSeconds,\n\t\tsyncCurrentTime: syncCurrentTime,\n\t\tresetCurrentHours: resetCurrentHours,\n\t\tresetCurrentMinutes: resetCurrentMinutes,\n\t\tresetCurrentSeconds: resetCurrentSeconds,\n\t\tresetCurrentTime: resetCurrentTime,\n\t\tsyncSongPlayedProgressBar: syncSongPlayedProgressBar,\n\t\tsetElementPlay: setElementPlay,\n\t\tsetElementPause: setElementPause,\n\t\tsyncDurationHours: syncDurationHours,\n\t\tsyncDurationMinutes: syncDurationMinutes,\n\t\tsyncDurationSeconds: syncDurationSeconds,\n\t\tsyncDurationTime: syncDurationTime,\n\t\tsyncCountDownTime: syncCountDownTime\n\t};\n}(); /**\n      * Imports the config module\n      * @module config\n      */\nexports.default = AmplitudeVisualSyncHelpers;\nmodule.exports = exports['default'];\n\n/***/ })\n/******/ ]);\n});","var _id = 0\nvar sheet = document.head.appendChild(document.createElement(\"style\")).sheet\n\nfunction hyphenate(str) {\n  return str.replace(/[A-Z]/g, \"-$&\").toLowerCase()\n}\n\nfunction insert(rule) {\n  sheet.insertRule(rule, sheet.cssRules.length)\n}\nfunction createStyle(obj) {\n  var id = \"p\" + _id++\n  parse(obj, \".\" + id).forEach(insert)\n  return id\n}\nfunction wrap(stringToWrap, wrapper) {\n  return wrapper + \"{\" + stringToWrap + \"}\"\n}\n\nfunction parse(obj, classname, isInsideObj) {\n  var arr = [\"\"]\n  isInsideObj = isInsideObj || 0\n  for (var prop in obj) {\n    var value = obj[prop]\n    prop = hyphenate(prop)\n    // Same as typeof value === 'object', but smaller\n    if (!value.sub) {\n      if (/^(:|>|\\.|\\*)/.test(prop)) {\n        prop = classname + prop\n      }\n      // replace & in \"&:hover\", \"p>&\"\n      prop = prop.replace(/&/g, classname)\n      arr.push(\n        wrap(parse(value, classname, 1 && !/^@/.test(prop)).join(\"\"), prop)\n      )\n    } else {\n      arr[0] += prop + \":\" + value + \";\"\n    }\n  }\n  if (!isInsideObj) {\n    arr[0] = wrap(arr[0], classname)\n  }\n  return arr\n}\nexport default function(h) {\n  return function(nodeName) {\n    var cache = {}\n    return function(decls) {\n      return function(attributes, children) {\n        attributes = attributes || {}\n        children = attributes.children || children\n        var nodeDecls = typeof decls == \"function\" ? decls(attributes) : decls\n        var key = JSON.stringify(nodeDecls)\n        cache[key] || (cache[key] = createStyle(nodeDecls))\n        attributes.class = [attributes.class, cache[key]]\n          .filter(Boolean)\n          .join(\" \")\n        return h(nodeName, attributes, children)\n      }\n    }\n  }\n}\nexport function keyframes(obj) {\n  var id = \"p\" + _id++\n  insert(wrap(parse(obj, id, 1).join(\"\"), \"@keyframes \" + id))\n  return id\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","var hasRAF = typeof window !== 'undefined' && window.requestAnimationFrame !== undefined;\r\nvar prevTime = 0;\r\nvar onNextFrame = hasRAF\r\n    ? function (callback) { return window.requestAnimationFrame(callback); }\r\n    : function (callback) {\r\n        var currentTime = Date.now();\r\n        var timeToCall = Math.max(0, 16.7 - (currentTime - prevTime));\r\n        prevTime = currentTime + timeToCall;\r\n        setTimeout(function () { return callback(prevTime); }, timeToCall);\r\n    };\n\nfunction createRenderStep(startRenderLoop) {\r\n    var functionsToRun = [];\r\n    var functionsToRunNextFrame = [];\r\n    var numThisFrame = 0;\r\n    var isProcessing = false;\r\n    var i = 0;\r\n    return {\r\n        cancel: function (callback) {\r\n            var indexOfCallback = functionsToRunNextFrame.indexOf(callback);\r\n            if (indexOfCallback !== -1) {\r\n                functionsToRunNextFrame.splice(indexOfCallback, 1);\r\n            }\r\n        },\r\n        process: function () {\r\n            isProcessing = true;\r\n            _a = [functionsToRunNextFrame, functionsToRun], functionsToRun = _a[0], functionsToRunNextFrame = _a[1];\r\n            functionsToRunNextFrame.length = 0;\r\n            numThisFrame = functionsToRun.length;\r\n            for (i = 0; i < numThisFrame; i++) {\r\n                functionsToRun[i]();\r\n            }\r\n            isProcessing = false;\r\n            var _a;\r\n        },\r\n        schedule: function (callback, immediate) {\r\n            if (immediate === void 0) { immediate = false; }\r\n            startRenderLoop();\r\n            var addToCurrentBuffer = immediate && isProcessing;\r\n            var buffer = addToCurrentBuffer ? functionsToRun : functionsToRunNextFrame;\r\n            if (buffer.indexOf(callback) === -1) {\r\n                buffer.push(callback);\r\n                if (addToCurrentBuffer) {\r\n                    numThisFrame = functionsToRun.length;\r\n                }\r\n            }\r\n        },\r\n    };\r\n}\n\nvar HAS_PERFORMANCE_NOW = typeof performance !== 'undefined' && performance.now !== undefined;\r\nvar currentTime = HAS_PERFORMANCE_NOW ? function () { return performance.now(); } : function () { return Date.now(); };\r\nvar willRenderNextFrame = false;\r\nvar MAX_ELAPSED = 40;\r\nvar defaultElapsed = 16.7;\r\nvar useDefaultElapsed = true;\r\nvar currentFramestamp = 0;\r\nvar elapsed = 0;\r\nfunction startRenderLoop() {\r\n    if (willRenderNextFrame)\r\n        return;\r\n    willRenderNextFrame = true;\r\n    useDefaultElapsed = true;\r\n    onNextFrame(processFrame);\r\n}\r\nvar frameStart = createRenderStep(startRenderLoop);\r\nvar frameUpdate = createRenderStep(startRenderLoop);\r\nvar frameRender = createRenderStep(startRenderLoop);\r\nvar frameEnd = createRenderStep(startRenderLoop);\r\nfunction processFrame(framestamp) {\r\n    willRenderNextFrame = false;\r\n    elapsed = useDefaultElapsed\r\n        ? defaultElapsed\r\n        : Math.max(Math.min(framestamp - currentFramestamp, MAX_ELAPSED), 1);\r\n    if (!useDefaultElapsed)\r\n        defaultElapsed = elapsed;\r\n    currentFramestamp = framestamp;\r\n    frameStart.process();\r\n    frameUpdate.process();\r\n    frameRender.process();\r\n    frameEnd.process();\r\n    if (willRenderNextFrame)\r\n        useDefaultElapsed = false;\r\n}\r\nvar onFrameStart = frameStart.schedule;\r\nvar onFrameUpdate = frameUpdate.schedule;\r\nvar onFrameRender = frameRender.schedule;\r\nvar onFrameEnd = frameEnd.schedule;\r\nvar cancelOnFrameStart = frameStart.cancel;\r\nvar cancelOnFrameUpdate = frameUpdate.cancel;\r\nvar cancelOnFrameRender = frameRender.cancel;\r\nvar cancelOnFrameEnd = frameEnd.cancel;\r\nvar timeSinceLastFrame = function () { return elapsed; };\r\nvar currentFrameTime = function () { return currentFramestamp; };\n\nexport { currentTime, onFrameStart, onFrameUpdate, onFrameRender, onFrameEnd, cancelOnFrameStart, cancelOnFrameUpdate, cancelOnFrameRender, cancelOnFrameEnd, timeSinceLastFrame, currentFrameTime };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar clamp = function (min, max) { return function (v) {\r\n    return Math.max(Math.min(v, max), min);\r\n}; };\r\nvar contains = function (term) { return function (v) {\r\n    return typeof v === 'string' && v.indexOf(term) !== -1;\r\n}; };\r\nvar isFirstChars = function (term) { return function (v) {\r\n    return typeof v === 'string' && v.indexOf(term) === 0;\r\n}; };\r\nvar getValueFromFunctionString = function (value) {\r\n    return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')'));\r\n};\r\nvar splitCommaDelimited = function (value) {\r\n    return typeof value === 'string' ? value.split(/,\\s*/) : [value];\r\n};\n\nvar number = {\r\n    test: function (v) { return typeof v === 'number'; },\r\n    parse: parseFloat,\r\n    transform: function (v) { return v; }\r\n};\r\nvar alpha = __assign({}, number, { transform: clamp(0, 1) });\r\nvar scale = __assign({}, number, { default: 1 });\n\nvar createUnitType = function (unit) {\r\n    var containsUnit = contains(unit);\r\n    return {\r\n        test: function (v) {\r\n            return typeof v === 'string' && containsUnit(v) && v.split(' ').length === 1;\r\n        },\r\n        parse: parseFloat,\r\n        transform: function (v) { return \"\" + v + unit; }\r\n    };\r\n};\r\nvar degrees = createUnitType('deg');\r\nvar percent = createUnitType('%');\r\nvar px = createUnitType('px');\r\nvar vh = createUnitType('vh');\r\nvar vw = createUnitType('vw');\n\nvar clampRgbUnit = clamp(0, 255);\r\nvar onlyColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$/i;\r\nvar isRgba = function (v) { return v.red !== undefined; };\r\nvar isHsla = function (v) { return v.hue !== undefined; };\r\nvar splitColorValues = function (terms) {\r\n    var numTerms = terms.length;\r\n    return function (v) {\r\n        if (typeof v !== 'string')\r\n            return v;\r\n        var values = {};\r\n        var valuesArray = splitCommaDelimited(getValueFromFunctionString(v));\r\n        for (var i = 0; i < numTerms; i++) {\r\n            values[terms[i]] =\r\n                valuesArray[i] !== undefined ? parseFloat(valuesArray[i]) : 1;\r\n        }\r\n        return values;\r\n    };\r\n};\r\nvar rgbaTemplate = function (_a) {\r\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n    return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha$$1 + \")\";\r\n};\r\nvar hslaTemplate = function (_a) {\r\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n    return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha$$1 + \")\";\r\n};\r\nvar rgbUnit = __assign({}, number, { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\r\nvar testRgbaString = isFirstChars('rgb');\r\nvar rgba = {\r\n    test: function (v) { return (typeof v === 'string' ? testRgbaString(v) : isRgba(v)); },\r\n    parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\r\n    transform: function (_a) {\r\n        var red = _a.red, green = _a.green, blue = _a.blue, alpha$$1 = _a.alpha;\r\n        return rgbaTemplate({\r\n            red: rgbUnit.transform(red),\r\n            green: rgbUnit.transform(green),\r\n            blue: rgbUnit.transform(blue),\r\n            alpha: alpha$$1\r\n        });\r\n    }\r\n};\r\nvar testHslaString = isFirstChars('hsl');\r\nvar hsla = {\r\n    test: function (v) { return (typeof v === 'string' ? testHslaString(v) : isHsla(v)); },\r\n    parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\r\n    transform: function (_a) {\r\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, alpha$$1 = _a.alpha;\r\n        return hslaTemplate({\r\n            hue: Math.round(hue),\r\n            saturation: percent.transform(saturation),\r\n            lightness: percent.transform(lightness),\r\n            alpha: alpha$$1\r\n        });\r\n    }\r\n};\r\nvar hex = __assign({}, rgba, { test: isFirstChars('#'), parse: function (v) {\r\n        var r = '';\r\n        var g = '';\r\n        var b = '';\r\n        if (v.length > 4) {\r\n            r = v.substr(1, 2);\r\n            g = v.substr(3, 2);\r\n            b = v.substr(5, 2);\r\n        }\r\n        else {\r\n            r = v.substr(1, 1);\r\n            g = v.substr(2, 1);\r\n            b = v.substr(3, 1);\r\n            r += r;\r\n            g += g;\r\n            b += b;\r\n        }\r\n        return {\r\n            red: parseInt(r, 16),\r\n            green: parseInt(g, 16),\r\n            blue: parseInt(b, 16),\r\n            alpha: 1\r\n        };\r\n    } });\r\nvar color = {\r\n    test: function (v) {\r\n        return (typeof v === 'string' && onlyColorRegex.test(v)) ||\r\n            rgba.test(v) ||\r\n            hsla.test(v) ||\r\n            hex.test(v);\r\n    },\r\n    parse: function (v) {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else if (hex.test(v)) {\r\n            return hex.parse(v);\r\n        }\r\n        return v;\r\n    },\r\n    transform: function (v) {\r\n        if (isRgba(v)) {\r\n            return rgba.transform(v);\r\n        }\r\n        else if (isHsla(v)) {\r\n            return hsla.transform(v);\r\n        }\r\n        return v;\r\n    }\r\n};\n\nvar floatRegex = /(-)?(\\d[\\d\\.]*)/g;\r\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\r\nvar COLOR_TOKEN = '${c}';\r\nvar NUMBER_TOKEN = '${n}';\r\nvar complex = {\r\n    test: function (v) {\r\n        if (typeof v !== 'string')\r\n            return false;\r\n        var numValues = 0;\r\n        var foundNumbers = v.match(floatRegex);\r\n        var foundColors = v.match(colorRegex);\r\n        if (foundNumbers)\r\n            numValues += foundNumbers.length;\r\n        if (foundColors)\r\n            numValues += foundColors.length;\r\n        return numValues > 1;\r\n    },\r\n    parse: function (v) {\r\n        var input = v;\r\n        var parsed = [];\r\n        var foundColors = input.match(colorRegex);\r\n        if (foundColors) {\r\n            input = input.replace(colorRegex, COLOR_TOKEN);\r\n            parsed.push.apply(parsed, foundColors.map(color.parse));\r\n        }\r\n        var foundNumbers = input.match(floatRegex);\r\n        if (foundNumbers) {\r\n            parsed.push.apply(parsed, foundNumbers.map(number.parse));\r\n        }\r\n        return parsed;\r\n    },\r\n    createTransformer: function (prop) {\r\n        var template = prop;\r\n        var token = 0;\r\n        var foundColors = prop.match(colorRegex);\r\n        var numColors = foundColors ? foundColors.length : 0;\r\n        if (foundColors) {\r\n            for (var i = 0; i < numColors; i++) {\r\n                template = template.replace(foundColors[i], COLOR_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        var foundNumbers = template.match(floatRegex);\r\n        var numNumbers = foundNumbers ? foundNumbers.length : 0;\r\n        if (foundNumbers) {\r\n            for (var i = 0; i < numNumbers; i++) {\r\n                template = template.replace(foundNumbers[i], NUMBER_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        return function (v) {\r\n            var output = template;\r\n            for (var i = 0; i < token; i++) {\r\n                output = output.replace(i < numColors ? COLOR_TOKEN : NUMBER_TOKEN, i < numColors ? color.transform(v[i]) : v[i]);\r\n            }\r\n            return output;\r\n        };\r\n    }\r\n};\n\nexport { number, scale, alpha, degrees, percent, px, vw, vh, rgba, rgbUnit, hex, hsla, color, complex };\n","var HEY_LISTEN = 'Hey, listen! ';\r\nvar warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(HEY_LISTEN + message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(HEY_LISTEN.toUpperCase() + message);\r\n        }\r\n    };\r\n}\n\nexport { warning, invariant };\n","import { onFrameRender } from 'framesync';\nimport { alpha, color, degrees, scale, px, percent } from 'style-value-types';\nimport { __assign } from 'tslib';\nimport { invariant } from 'hey-listen';\n\nvar createStyler = function (_a) {\n    var onRead = _a.onRead,\n        onRender = _a.onRender,\n        _b = _a.aliasMap,\n        aliasMap = _b === void 0 ? {} : _b,\n        _c = _a.useCache,\n        useCache = _c === void 0 ? true : _c;\n    return function (props) {\n        var state = {};\n        var changedValues = [];\n        var hasChanged = false;\n        var setValue = function (unmappedKey, value) {\n            var key = aliasMap[unmappedKey] || unmappedKey;\n            var currentValue = state[key];\n            state[key] = value;\n            if (state[key] !== currentValue) {\n                if (changedValues.indexOf(key) === -1) {\n                    changedValues.push(key);\n                }\n                if (!hasChanged) {\n                    hasChanged = true;\n                    onFrameRender(render);\n                }\n            }\n        };\n        function render(forceRender) {\n            if (forceRender === void 0) {\n                forceRender = false;\n            }\n            if (forceRender || hasChanged) {\n                onRender(state, props, changedValues);\n                hasChanged = false;\n                changedValues.length = 0;\n            }\n            return this;\n        }\n        return {\n            get: function (unmappedKey) {\n                var key = aliasMap[unmappedKey] || unmappedKey;\n                return key ? useCache && state[key] !== undefined ? state[key] : onRead(key, props) : state;\n            },\n            set: function (values, value) {\n                if (typeof values === 'string') {\n                    if (value !== undefined) {\n                        setValue(values, value);\n                    } else {\n                        return function (v) {\n                            return setValue(values, v);\n                        };\n                    }\n                } else {\n                    for (var key in values) {\n                        if (values.hasOwnProperty(key)) {\n                            setValue(key, values[key]);\n                        }\n                    }\n                }\n                return this;\n            },\n            render: render\n        };\n    };\n};\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = '$1-$2';\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\nvar setDomAttrs = function (element, attrs) {\n    for (var key in attrs) {\n        if (attrs.hasOwnProperty(key)) {\n            element.setAttribute(key, attrs[key]);\n        }\n    }\n};\n\nvar camelCache = /*#__PURE__*/new Map();\nvar dashCache = /*#__PURE__*/new Map();\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar testElement;\nvar testPrefix = function (key) {\n    if (typeof document === 'undefined') return;\n    testElement = testElement || document.createElement('div');\n    for (var i = 0; i < numPrefixes; i++) {\n        var prefix = prefixes[i];\n        var noPrefix = prefix === '';\n        var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n        if (prefixedPropertyName in testElement.style) {\n            camelCache.set(key, prefixedPropertyName);\n            dashCache.set(key, \"\" + (noPrefix ? '' : '-') + camelToDash(prefixedPropertyName));\n        }\n    }\n};\nvar prefixer = function (key, asDashCase) {\n    if (asDashCase === void 0) {\n        asDashCase = false;\n    }\n    var cache = asDashCase ? dashCache : camelCache;\n    if (!cache.has(key)) testPrefix(key);\n    return cache.get(key) || key;\n};\n\nvar axes = ['', 'X', 'Y', 'Z'];\nvar order = ['translate', 'scale', 'rotate', 'skew', 'transformPerspective'];\nvar TRANSFORM_ORIGIN_X = 'transformOriginX';\nvar TRANSFORM_ORIGIN_Y = 'transformOriginY';\nvar transformProps = /*#__PURE__*/order.reduce(function (acc, key) {\n    return axes.reduce(function (axesAcc, axesKey) {\n        axesAcc.push(key + axesKey);\n        return axesAcc;\n    }, acc);\n}, ['x', 'y', 'z']);\nvar transformPropDictionary = /*#__PURE__*/transformProps.reduce(function (dict, key) {\n    dict[key] = true;\n    return dict;\n}, {});\nvar isTransformProp = function (key) {\n    return transformPropDictionary[key] === true;\n};\nvar sortTransformProps = function (a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n};\nvar isTransformOriginProp = function (key) {\n    return key === TRANSFORM_ORIGIN_X || key === TRANSFORM_ORIGIN_Y;\n};\n\nvar valueTypes = {\n    color: color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    borderRadius: px,\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    left: px,\n    bottom: px,\n    right: px,\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale: scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    perspective: px,\n    opacity: alpha,\n    transformOriginX: percent,\n    transformOriginY: percent,\n    transformOriginZ: px\n};\nvar getValueType = function (key) {\n    return valueTypes[key];\n};\n\nvar aliasMap = {\n    x: 'translateX',\n    y: 'translateY',\n    z: 'translateZ',\n    originX: 'transformOriginX',\n    originY: 'transformOriginY',\n    originZ: 'transformOriginZ'\n};\nvar NUMBER = 'number';\nvar OBJECT = 'object';\nvar COLON = ':';\nvar SEMI_COLON = ';';\nvar TRANSFORM_ORIGIN = 'transform-origin';\nvar TRANSFORM = 'transform';\nvar TRANSLATE_Z = 'translateZ';\nvar TRANSFORM_NONE = ';transform: none';\nvar styleRule = function (key, value) {\n    return \"\" + SEMI_COLON + key + COLON + value;\n};\nfunction buildStylePropertyString(state, changedValues, enableHardwareAcceleration, blacklist) {\n    if (changedValues === void 0) {\n        changedValues = true;\n    }\n    if (enableHardwareAcceleration === void 0) {\n        enableHardwareAcceleration = true;\n    }\n    var valuesToChange = changedValues === true ? Object.keys(state) : changedValues;\n    var propertyString = '';\n    var transformString = '';\n    var hasTransformOrigin = false;\n    var transformIsDefault = true;\n    var hasTransform = false;\n    var transformHasZ = false;\n    var numChangedValues = valuesToChange.length;\n    for (var i = 0; i < numChangedValues; i++) {\n        var key = valuesToChange[i];\n        if (isTransformProp(key)) {\n            hasTransform = true;\n            for (var stateKey in state) {\n                if (isTransformProp(stateKey) && valuesToChange.indexOf(stateKey) === -1) {\n                    valuesToChange.push(stateKey);\n                }\n            }\n            break;\n        }\n    }\n    valuesToChange.sort(sortTransformProps);\n    var totalNumChangedValues = valuesToChange.length;\n    for (var i = 0; i < totalNumChangedValues; i++) {\n        var key = valuesToChange[i];\n        if (blacklist.has(key)) continue;\n        var isTransformKey = isTransformProp(key);\n        var value = state[key];\n        var valueType = getValueType(key);\n        if (isTransformKey) {\n            if (valueType.default && value !== valueType.default || !valueType.default && value !== 0) {\n                transformIsDefault = false;\n            }\n        }\n        if (valueType && (typeof value === NUMBER || typeof value === OBJECT) && valueType.transform) {\n            value = valueType.transform(value);\n        }\n        if (isTransformKey) {\n            transformString += key + '(' + value + ') ';\n            transformHasZ = key === TRANSLATE_Z ? true : transformHasZ;\n        } else if (isTransformOriginProp(key)) {\n            state[key] = value;\n            hasTransformOrigin = true;\n        } else {\n            propertyString += styleRule(prefixer(key, true), value);\n        }\n    }\n    if (hasTransformOrigin) {\n        propertyString += styleRule(TRANSFORM_ORIGIN, (state.transformOriginX || 0) + \" \" + (state.transformOriginY || 0) + \" \" + (state.transformOriginZ || 0));\n    }\n    if (hasTransform) {\n        if (!transformHasZ && enableHardwareAcceleration) {\n            transformString += TRANSLATE_Z + \"(0)\";\n        }\n        propertyString += styleRule(TRANSFORM, transformIsDefault ? TRANSFORM_NONE : transformString);\n    }\n    return propertyString;\n}\n\nvar SCROLL_LEFT = 'scrollLeft';\nvar SCROLL_TOP = 'scrollTop';\nvar scrollValues = /*#__PURE__*/new Set([SCROLL_LEFT, SCROLL_TOP]);\nvar cssStyler = /*#__PURE__*/createStyler({\n    onRead: function (key, _a) {\n        var element = _a.element,\n            preparseOutput = _a.preparseOutput;\n        var valueType = getValueType(key);\n        if (isTransformProp(key)) {\n            return valueType ? valueType.default || 0 : 0;\n        } else if (scrollValues.has(key)) {\n            return element[key];\n        } else {\n            var domValue = window.getComputedStyle(element, null).getPropertyValue(prefixer(key, true)) || 0;\n            return preparseOutput && valueType && valueType.parse ? valueType.parse(domValue) : domValue;\n        }\n    },\n    onRender: function (state, _a, changedValues) {\n        var element = _a.element,\n            enableHardwareAcceleration = _a.enableHardwareAcceleration;\n        element.style.cssText += buildStylePropertyString(state, changedValues, enableHardwareAcceleration, scrollValues);\n        if (changedValues.indexOf(SCROLL_LEFT) !== -1) element.scrollLeft = state.scrollLeft;\n        if (changedValues.indexOf(SCROLL_TOP) !== -1) element.scrollTop = state.scrollTop;\n    },\n    aliasMap: aliasMap,\n    uncachedValues: scrollValues\n});\nvar css = function (element, props) {\n    return cssStyler(__assign({ element: element, enableHardwareAcceleration: true, preparseOutput: true }, props));\n};\n\nvar ZERO_NOT_ZERO = 0.0000001;\nvar percentToPixels = function (percent$$1, length) {\n    return percent$$1 / 100 * length + 'px';\n};\nvar build = function (state, dimensions, isPath, pathLength) {\n    var hasTransform = false;\n    var hasDashArray = false;\n    var props = {};\n    var dashArrayStyles = isPath ? {\n        pathLength: '0',\n        pathSpacing: \"\" + pathLength\n    } : undefined;\n    var scale$$1 = state.scale !== undefined ? state.scale || ZERO_NOT_ZERO : state.scaleX || 1;\n    var scaleY = state.scaleY !== undefined ? state.scaleY || ZERO_NOT_ZERO : scale$$1 || 1;\n    var transformOriginX = dimensions.width * ((state.originX || 50) / 100) + dimensions.x;\n    var transformOriginY = dimensions.height * ((state.originY || 50) / 100) + dimensions.y;\n    var scaleTransformX = -transformOriginX * (scale$$1 * 1);\n    var scaleTransformY = -transformOriginY * (scaleY * 1);\n    var scaleReplaceX = transformOriginX / scale$$1;\n    var scaleReplaceY = transformOriginY / scaleY;\n    var transform = {\n        translate: \"translate(\" + state.translateX + \", \" + state.translateY + \") \",\n        scale: \"translate(\" + scaleTransformX + \", \" + scaleTransformY + \") scale(\" + scale$$1 + \", \" + scaleY + \") translate(\" + scaleReplaceX + \", \" + scaleReplaceY + \") \",\n        rotate: \"rotate(\" + state.rotate + \", \" + transformOriginX + \", \" + transformOriginY + \") \",\n        skewX: \"skewX(\" + state.skewX + \") \",\n        skewY: \"skewY(\" + state.skewY + \") \"\n    };\n    for (var key in state) {\n        if (state.hasOwnProperty(key)) {\n            var value = state[key];\n            if (isTransformProp(key)) {\n                hasTransform = true;\n            } else if (isPath && (key === 'pathLength' || key === 'pathSpacing') && typeof value === 'number') {\n                hasDashArray = true;\n                dashArrayStyles[key] = percentToPixels(value, pathLength);\n            } else if (isPath && key === 'pathOffset') {\n                props['stroke-dashoffset'] = percentToPixels(-value, pathLength);\n            } else {\n                props[camelToDash(key)] = value;\n            }\n        }\n    }\n    if (hasDashArray) {\n        props['stroke-dasharray'] = dashArrayStyles.pathLength + ' ' + dashArrayStyles.pathSpacing;\n    }\n    if (hasTransform) {\n        props.transform = '';\n        for (var key in transform) {\n            if (transform.hasOwnProperty(key)) {\n                var defaultValue = key === 'scale' ? '1' : '0';\n                props.transform += transform[key].replace(/undefined/g, defaultValue);\n            }\n        }\n    }\n    return props;\n};\n\nvar valueTypes$1 = {\n    fill: color,\n    stroke: color,\n    scale: scale,\n    scaleX: scale,\n    scaleY: scale,\n    opacity: alpha,\n    fillOpacity: alpha,\n    strokeOpacity: alpha\n};\nvar getValueType$1 = function (key) {\n    return valueTypes$1[key];\n};\n\nvar svgStyler = /*#__PURE__*/createStyler({\n    onRead: function (key, _a) {\n        var element = _a.element;\n        if (!isTransformProp(key)) {\n            return element.getAttribute(key);\n        } else {\n            var valueType = getValueType$1(key);\n            return valueType ? valueType.default : 0;\n        }\n    },\n    onRender: function (state, _a, changedValues) {\n        var dimensions = _a.dimensions,\n            element = _a.element,\n            isPath = _a.isPath,\n            pathLength = _a.pathLength;\n        setDomAttrs(element, build(state, dimensions, isPath, pathLength));\n    },\n    aliasMap: {\n        x: 'translateX',\n        y: 'translateY',\n        background: 'fill'\n    }\n});\nvar svg = function (element) {\n    var _a = element.getBBox(),\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n    var props = {\n        element: element,\n        dimensions: { x: x, y: y, width: width, height: height },\n        isPath: false\n    };\n    if (element.tagName === 'path') {\n        props.isPath = true;\n        props.pathLength = element.getTotalLength();\n    }\n    return svgStyler(props);\n};\n\nvar viewport = /*#__PURE__*/createStyler({\n    useCache: false,\n    onRead: function (key) {\n        return key === 'scrollTop' ? window.pageYOffset : window.pageXOffset;\n    },\n    onRender: function (_a) {\n        var _b = _a.scrollTop,\n            scrollTop = _b === void 0 ? 0 : _b,\n            _c = _a.scrollLeft,\n            scrollLeft = _c === void 0 ? 0 : _c;\n        return window.scrollTo(scrollLeft, scrollTop);\n    }\n});\n\nvar cache = /*#__PURE__*/new WeakMap();\nvar createDOMStyler = function (node, props) {\n    var styler;\n    if (node instanceof HTMLElement) {\n        styler = css(node, props);\n    } else if (node instanceof SVGElement) {\n        styler = svg(node);\n    } else if (typeof window !== 'undefined' && node === window) {\n        styler = viewport(node);\n    }\n    invariant(styler !== undefined, 'No valid node provided. Node must be HTMLElement, SVGElement or window.');\n    cache.set(node, styler);\n    return styler;\n};\nvar getStyler = function (node, props) {\n    return cache.has(node) ? cache.get(node) : createDOMStyler(node, props);\n};\nfunction index(nodeOrSelector, props) {\n    var node = typeof nodeOrSelector === 'string' ? document.querySelector(nodeOrSelector) : nodeOrSelector;\n    return getStyler(node, props);\n}\n\nexport default index;\nexport { createStyler as createStylerFactory, buildStylePropertyString as buildStyles };\n","import { __rest, __extends, __assign } from 'tslib';\nimport { currentFrameTime, timeSinceLastFrame, onFrameEnd, onFrameUpdate, currentTime, cancelOnFrameUpdate } from 'framesync';\nimport * as styleValueTypes from 'style-value-types';\nimport { color, hsla, complex, percent, degrees, vh, vw, px, number } from 'style-value-types';\nexport { styleValueTypes as valueTypes };\nimport { invariant, warning } from 'hey-listen';\nimport styler from 'stylefire';\nexport { default as styler } from 'stylefire';\n\nvar isNum = function (v) {\n    return typeof v === 'number';\n};\nvar isPoint = function (point) {\n    return point.x !== undefined && point.y !== undefined;\n};\nvar isPoint3D = function (point) {\n    return point.z !== undefined;\n};\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) {\n        precision = 2;\n    }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\nvar ZERO_POINT = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar distance1D = function (a, b) {\n    return Math.abs(a - b);\n};\nvar angle = function (a, b) {\n    if (b === void 0) {\n        b = ZERO_POINT;\n    }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\nvar degreesToRadians = function (degrees$$1) {\n    return degrees$$1 * Math.PI / 180;\n};\nvar dilate = function (a, b, dilation) {\n    return a + (b - a) * dilation;\n};\nvar distance = function (a, b) {\n    if (b === void 0) {\n        b = ZERO_POINT;\n    }\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    } else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n    return 0;\n};\nvar getProgressFromValue = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\nvar getValueFromProgress = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\nvar pointFromAngleAndDistance = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\nvar radiansToDegrees = function (radians) {\n    return radians * 180 / Math.PI;\n};\nvar smooth = function (newValue, oldValue, duration, smoothing) {\n    if (smoothing === void 0) {\n        smoothing = 0;\n    }\n    return toDecimal(oldValue + duration * (newValue - oldValue) / Math.max(smoothing, duration));\n};\nvar speedPerFrame = function (xps, frameDuration) {\n    return isNum(xps) ? xps / (1000 / frameDuration) : 0;\n};\nvar speedPerSecond = function (velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n};\nvar stepProgress = function (steps, progress) {\n    var segment = 1 / (steps - 1);\n    var target = 1 - 1 / steps;\n    var progressOfTarget = Math.min(progress / target, 1);\n    return Math.floor(progressOfTarget / segment) * segment;\n};\n\nvar calc = /*#__PURE__*/Object.freeze({\n    isPoint: isPoint,\n    isPoint3D: isPoint3D,\n    angle: angle,\n    degreesToRadians: degreesToRadians,\n    dilate: dilate,\n    distance: distance,\n    getProgressFromValue: getProgressFromValue,\n    getValueFromProgress: getValueFromProgress,\n    pointFromAngleAndDistance: pointFromAngleAndDistance,\n    radiansToDegrees: radiansToDegrees,\n    smooth: smooth,\n    speedPerFrame: speedPerFrame,\n    speedPerSecond: speedPerSecond,\n    stepProgress: stepProgress\n});\n\nvar noop = function (v) {\n    return v;\n};\nvar appendUnit = function (unit) {\n    return function (v) {\n        return \"\" + v + unit;\n    };\n};\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    var getOffset = function (v) {\n        return v - from;\n    };\n    var applyOffsetTo = function (v) {\n        return v + to;\n    };\n    return function (v) {\n        if (hasReceivedFrom) {\n            return applyOffsetTo(getOffset(v));\n        } else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\nvar blend = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(v * (toExpo - fromExpo) + fromExpo);\n};\nvar blendColor = function (from, to) {\n    var fromColor = typeof from === 'string' ? color.parse(from) : from;\n    var toColor = typeof to === 'string' ? color.parse(to) : to;\n    var blended = __assign({}, fromColor);\n    var blendFunc = from.hue !== undefined || typeof from === 'string' && hsla.test(from) ? getValueFromProgress : blend;\n    return function (v) {\n        blended = __assign({}, blended);\n        for (var key in blended) {\n            if (key !== 'alpha' && blended.hasOwnProperty(key)) {\n                blended[key] = blendFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = getValueFromProgress(fromColor.alpha, toColor.alpha, v);\n        return blended;\n    };\n};\nvar blendArray = function (from, to) {\n    var output = from.slice();\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        var toThis = to[i];\n        return typeof fromThis === 'number' ? function (v) {\n            return getValueFromProgress(fromThis, toThis, v);\n        } : blendColor(fromThis, toThis);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar clamp = function (min, max) {\n    return function (v) {\n        return Math.min(Math.max(v, min), max);\n    };\n};\nvar combineFunctions = function (a, b) {\n    return function (v) {\n        return b(a(v));\n    };\n};\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\nvar conditional = function (check, apply) {\n    return function (v) {\n        return check(v) ? apply(v) : v;\n    };\n};\nvar slowInterpolate = function (input, output, rangeLength, rangeEasing) {\n    var finalIndex = rangeLength - 1;\n    if (input[0] > input[finalIndex]) {\n        input.reverse();\n        output.reverse();\n    }\n    return function (v) {\n        if (v <= input[0]) {\n            return output[0];\n        }\n        if (v >= input[finalIndex]) {\n            return output[finalIndex];\n        }\n        var i = 1;\n        for (; i < rangeLength; i++) {\n            if (input[i] > v || i === finalIndex) {\n                break;\n            }\n        }\n        var progressInRange = getProgressFromValue(input[i - 1], input[i], v);\n        var easedProgress = rangeEasing ? rangeEasing[i - 1](progressInRange) : progressInRange;\n        return getValueFromProgress(output[i - 1], output[i], easedProgress);\n    };\n};\nvar fastInterpolate = function (minA, maxA, minB, maxB) {\n    return function (v) {\n        return (v - minA) * (maxB - minB) / (maxA - minA) + minB;\n    };\n};\nvar interpolate = function (input, output, rangeEasing) {\n    var rangeLength = input.length;\n    return rangeLength !== 2 ? slowInterpolate(input, output, rangeLength, rangeEasing) : fastInterpolate(input[0], input[1], output[0], output[1]);\n};\nvar generateStaticSpring = function (alterDisplacement) {\n    if (alterDisplacement === void 0) {\n        alterDisplacement = noop;\n    }\n    return function (constant, origin) {\n        return function (v) {\n            var displacement = origin - v;\n            var springModifiedDisplacement = -constant * (0 - alterDisplacement(Math.abs(displacement)));\n            return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n        };\n    };\n};\nvar linearSpring = /*#__PURE__*/generateStaticSpring();\nvar nonlinearSpring = /*#__PURE__*/generateStaticSpring(Math.sqrt);\nvar wrap = function (min, max) {\n    return function (v) {\n        var rangeSize = max - min;\n        return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n    };\n};\nvar smooth$1 = function (strength) {\n    if (strength === void 0) {\n        strength = 50;\n    }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = currentFrameTime();\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta ? smooth(v, previousValue, timeDelta, strength) : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) {\n            return Math.round(v / points) * points;\n        };\n    } else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance$$1 = Math.abs(point - v);\n                if (distance$$1 === 0) return point;\n                if (distance$$1 > lastDistance) return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1) return point;\n                lastDistance = distance$$1;\n            }\n        };\n    }\n};\nvar steps = function (st, min, max) {\n    if (min === void 0) {\n        min = 0;\n    }\n    if (max === void 0) {\n        max = 1;\n    }\n    return function (v) {\n        var progress = getProgressFromValue(min, max, v);\n        return getValueFromProgress(min, max, stepProgress(st, progress));\n    };\n};\nvar transformMap = function (childTransformers) {\n    return function (v) {\n        var output = __assign({}, v);\n        for (var key in childTransformers) {\n            if (childTransformers.hasOwnProperty(key)) {\n                var childTransformer = childTransformers[key];\n                output[key] = childTransformer(v[key]);\n            }\n        }\n        return output;\n    };\n};\n\nvar transformers = /*#__PURE__*/Object.freeze({\n    appendUnit: appendUnit,\n    applyOffset: applyOffset,\n    blendColor: blendColor,\n    blendArray: blendArray,\n    clamp: clamp,\n    pipe: pipe,\n    conditional: conditional,\n    interpolate: interpolate,\n    generateStaticSpring: generateStaticSpring,\n    linearSpring: linearSpring,\n    nonlinearSpring: nonlinearSpring,\n    wrap: wrap,\n    smooth: smooth$1,\n    snap: snap,\n    steps: steps,\n    transformMap: transformMap\n});\n\nvar Chainable = /*#__PURE__*/function () {\n    function Chainable(props) {\n        if (props === void 0) {\n            props = {};\n        }\n        this.props = props;\n    }\n    Chainable.prototype.applyMiddleware = function (middleware) {\n        return this.create(__assign({}, this.props, { middleware: this.props.middleware ? [middleware].concat(this.props.middleware) : [middleware] }));\n    };\n    Chainable.prototype.pipe = function () {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        var pipedUpdate = funcs.length === 1 ? funcs[0] : pipe.apply(void 0, funcs);\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return update(pipedUpdate(v));\n            };\n        });\n    };\n    Chainable.prototype.while = function (predicate) {\n        return this.applyMiddleware(function (update, complete) {\n            return function (v) {\n                return predicate(v) ? update(v) : complete();\n            };\n        });\n    };\n    Chainable.prototype.filter = function (predicate) {\n        return this.applyMiddleware(function (update, complete) {\n            return function (v) {\n                return predicate(v) && update(v);\n            };\n        });\n    };\n    return Chainable;\n}();\n\nvar Observer = /*#__PURE__*/function () {\n    function Observer(_a, observer) {\n        var middleware = _a.middleware,\n            onComplete = _a.onComplete;\n        var _this = this;\n        this.isActive = true;\n        this.update = function (v) {\n            if (_this.observer.update) _this.updateObserver(v);\n        };\n        this.complete = function () {\n            if (_this.observer.complete && _this.isActive) _this.observer.complete();\n            if (_this.onComplete) _this.onComplete();\n            _this.isActive = false;\n        };\n        this.error = function (err) {\n            if (_this.observer.error && _this.isActive) _this.observer.error(err);\n            _this.isActive = false;\n        };\n        this.observer = observer;\n        this.updateObserver = function (v) {\n            return observer.update(v);\n        };\n        this.onComplete = onComplete;\n        if (observer.update && middleware && middleware.length) {\n            middleware.forEach(function (m) {\n                return _this.updateObserver = m(_this.updateObserver, _this.complete);\n            });\n        }\n    }\n    return Observer;\n}();\nvar createObserver = function (observerCandidate, _a, onComplete) {\n    var middleware = _a.middleware;\n    if (typeof observerCandidate === 'function') {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, { update: observerCandidate });\n    } else {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, observerCandidate);\n    }\n};\n\nvar Action = /*#__PURE__*/function (_super) {\n    __extends(Action, _super);\n    function Action() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Action.prototype.create = function (props) {\n        return new Action(props);\n    };\n    Action.prototype.start = function (observerCandidate) {\n        if (observerCandidate === void 0) {\n            observerCandidate = {};\n        }\n        var isComplete = false;\n        var subscription = {\n            stop: function () {\n                return undefined;\n            }\n        };\n        var _a = this.props,\n            init = _a.init,\n            observerProps = __rest(_a, [\"init\"]);\n        var observer = createObserver(observerCandidate, observerProps, function () {\n            isComplete = true;\n            subscription.stop();\n        });\n        var api = init(observer);\n        subscription = api ? __assign({}, subscription, api) : subscription;\n        if (observerCandidate.registerParent) {\n            observerCandidate.registerParent(subscription);\n        }\n        if (isComplete) subscription.stop();\n        return subscription;\n    };\n    return Action;\n}(Chainable);\nvar action = function (init) {\n    return new Action({ init: init });\n};\n\nvar BaseMulticast = /*#__PURE__*/function (_super) {\n    __extends(BaseMulticast, _super);\n    function BaseMulticast() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.subscribers = [];\n        return _this;\n    }\n    BaseMulticast.prototype.complete = function () {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.complete();\n        });\n    };\n    BaseMulticast.prototype.error = function (err) {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.error(err);\n        });\n    };\n    BaseMulticast.prototype.update = function (v) {\n        for (var i = 0; i < this.subscribers.length; i++) {\n            this.subscribers[i].update(v);\n        }\n    };\n    BaseMulticast.prototype.subscribe = function (observerCandidate) {\n        var _this = this;\n        var observer = createObserver(observerCandidate, this.props);\n        this.subscribers.push(observer);\n        var subscription = {\n            unsubscribe: function () {\n                var index = _this.subscribers.indexOf(observer);\n                if (index !== -1) _this.subscribers.splice(index, 1);\n            }\n        };\n        return subscription;\n    };\n    BaseMulticast.prototype.stop = function () {\n        if (this.parent) this.parent.stop();\n    };\n    BaseMulticast.prototype.registerParent = function (subscription) {\n        this.stop();\n        this.parent = subscription;\n    };\n    return BaseMulticast;\n}(Chainable);\n\nvar Multicast = /*#__PURE__*/function (_super) {\n    __extends(Multicast, _super);\n    function Multicast() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Multicast.prototype.create = function (props) {\n        return new Multicast(props);\n    };\n    return Multicast;\n}(BaseMulticast);\nvar multicast = function () {\n    return new Multicast();\n};\n\nvar isValueList = function (v) {\n    return Array.isArray(v);\n};\nvar isSingleValue = function (v) {\n    var typeOfV = typeof v;\n    return typeOfV === 'string' || typeOfV === 'number';\n};\nvar ValueReaction = /*#__PURE__*/function (_super) {\n    __extends(ValueReaction, _super);\n    function ValueReaction(props) {\n        var _this = _super.call(this, props) || this;\n        _this.scheduleVelocityCheck = function () {\n            return onFrameEnd(_this.velocityCheck);\n        };\n        _this.velocityCheck = function () {\n            if (currentFrameTime() !== _this.lastUpdated) {\n                _this.prev = _this.current;\n            }\n        };\n        _this.prev = _this.current = props.value || 0;\n        if (isSingleValue(_this.current)) {\n            _this.updateCurrent = function (v) {\n                return _this.current = v;\n            };\n            _this.getVelocityOfCurrent = function () {\n                return _this.getSingleVelocity(_this.current, _this.prev);\n            };\n        } else if (isValueList(_this.current)) {\n            _this.updateCurrent = function (v) {\n                return _this.current = v.slice();\n            };\n            _this.getVelocityOfCurrent = function () {\n                return _this.getListVelocity();\n            };\n        } else {\n            _this.updateCurrent = function (v) {\n                _this.current = {};\n                for (var key in v) {\n                    if (v.hasOwnProperty(key)) {\n                        _this.current[key] = v[key];\n                    }\n                }\n            };\n            _this.getVelocityOfCurrent = function () {\n                return _this.getMapVelocity();\n            };\n        }\n        if (props.initialSubscription) _this.subscribe(props.initialSubscription);\n        return _this;\n    }\n    ValueReaction.prototype.create = function (props) {\n        return new ValueReaction(props);\n    };\n    ValueReaction.prototype.get = function () {\n        return this.current;\n    };\n    ValueReaction.prototype.getVelocity = function () {\n        return this.getVelocityOfCurrent();\n    };\n    ValueReaction.prototype.update = function (v) {\n        _super.prototype.update.call(this, v);\n        this.prev = this.current;\n        this.updateCurrent(v);\n        this.timeDelta = timeSinceLastFrame();\n        this.lastUpdated = currentFrameTime();\n        onFrameEnd(this.scheduleVelocityCheck);\n    };\n    ValueReaction.prototype.subscribe = function (observerCandidate) {\n        var sub = _super.prototype.subscribe.call(this, observerCandidate);\n        this.update(this.current);\n        return sub;\n    };\n    ValueReaction.prototype.getSingleVelocity = function (current, prev) {\n        return typeof current === 'number' && typeof prev === 'number' ? speedPerSecond(current - prev, this.timeDelta) : speedPerSecond(parseFloat(current) - parseFloat(prev), this.timeDelta) || 0;\n    };\n    ValueReaction.prototype.getListVelocity = function () {\n        var _this = this;\n        return this.current.map(function (c, i) {\n            return _this.getSingleVelocity(c, _this.prev[i]);\n        });\n    };\n    ValueReaction.prototype.getMapVelocity = function () {\n        var velocity = {};\n        for (var key in this.current) {\n            if (this.current.hasOwnProperty(key)) {\n                velocity[key] = this.getSingleVelocity(this.current[key], this.prev[key]);\n            }\n        }\n        return velocity;\n    };\n    return ValueReaction;\n}(BaseMulticast);\nvar value = function (value, initialSubscription) {\n    return new ValueReaction({ value: value, initialSubscription: initialSubscription });\n};\n\nvar multi = function (_a) {\n    var getCount = _a.getCount,\n        getFirst = _a.getFirst,\n        getOutput = _a.getOutput,\n        mapApi = _a.mapApi,\n        setProp = _a.setProp,\n        startActions = _a.startActions;\n    return function (actions) {\n        return action(function (_a) {\n            var update = _a.update,\n                complete = _a.complete,\n                error = _a.error;\n            var numActions = getCount(actions);\n            var output = getOutput();\n            var updateOutput = function () {\n                return update(output);\n            };\n            var numCompletedActions = 0;\n            var subs = startActions(actions, function (a, name) {\n                var hasCompleted = false;\n                return a.start({\n                    complete: function () {\n                        if (!hasCompleted) {\n                            hasCompleted = true;\n                            numCompletedActions++;\n                            if (numCompletedActions === numActions) onFrameUpdate(complete);\n                        }\n                    },\n                    error: error,\n                    update: function (v) {\n                        setProp(output, name, v);\n                        onFrameUpdate(updateOutput, true);\n                    }\n                });\n            });\n            return Object.keys(getFirst(subs)).reduce(function (api, methodName) {\n                api[methodName] = mapApi(subs, methodName);\n                return api;\n            }, {});\n        });\n    };\n};\n\nvar composite = /*#__PURE__*/multi({\n    getOutput: function () {\n        return {};\n    },\n    getCount: function (subs) {\n        return Object.keys(subs).length;\n    },\n    getFirst: function (subs) {\n        return subs[Object.keys(subs)[0]];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Object.keys(subs).reduce(function (output, propKey) {\n                if (subs[propKey][methodName]) {\n                    args[0] && args[0][propKey] !== undefined ? output[propKey] = subs[propKey][methodName](args[0][propKey]) : output[propKey] = (_a = subs[propKey])[methodName].apply(_a, args);\n                }\n                return output;\n                var _a;\n            }, {});\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return Object.keys(actions).reduce(function (subs, key) {\n            subs[key] = starter(actions[key], key);\n            return subs;\n        }, {});\n    }\n});\n\nvar parallel = /*#__PURE__*/multi({\n    getOutput: function () {\n        return [];\n    },\n    getCount: function (subs) {\n        return subs.length;\n    },\n    getFirst: function (subs) {\n        return subs[0];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return subs.map(function (sub, i) {\n                if (sub[methodName]) {\n                    return Array.isArray(args[0]) ? sub[methodName](args[0][i]) : sub[methodName].apply(sub, args);\n                }\n            });\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return actions.map(function (action, i) {\n            return starter(action, i);\n        });\n    }\n});\nvar parallel$1 = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return parallel(actions);\n};\n\nvar createVectorTests = function (typeTests) {\n    var testNames = Object.keys(typeTests);\n    var isVectorProp = function (prop, key) {\n        return prop !== undefined && !typeTests[key](prop);\n    };\n    var getVectorKeys = function (props) {\n        return testNames.reduce(function (vectorKeys, key) {\n            if (isVectorProp(props[key], key)) vectorKeys.push(key);\n            return vectorKeys;\n        }, []);\n    };\n    var testVectorProps = function (props) {\n        return props && testNames.reduce(function (isVector, key) {\n            return isVector || isVectorProp(props[key], key);\n        }, false);\n    };\n    return { getVectorKeys: getVectorKeys, testVectorProps: testVectorProps };\n};\nvar unitTypes = [px, percent, degrees, vh, vw];\nvar findUnitType = function (prop) {\n    return unitTypes.find(function (type) {\n        return type.test(prop);\n    });\n};\nvar isUnitProp = function (prop) {\n    return Boolean(findUnitType(prop));\n};\nvar createAction = function (action, props) {\n    return action(props);\n};\nvar reduceArrayValue = function (i) {\n    return function (props, key) {\n        props[key] = props[key][i];\n        return props;\n    };\n};\nvar createArrayAction = function (action, props, vectorKeys) {\n    var firstVectorKey = vectorKeys[0];\n    var actionList = props[firstVectorKey].map(function (v, i) {\n        var childActionProps = vectorKeys.reduce(reduceArrayValue(i), __assign({}, props));\n        return getActionCreator(v)(action, childActionProps);\n    });\n    return parallel$1.apply(void 0, actionList);\n};\nvar reduceObjectValue = function (key) {\n    return function (props, propKey) {\n        props[propKey] = props[propKey][key];\n        return props;\n    };\n};\nvar createObjectAction = function (action, props, vectorKeys) {\n    var firstVectorKey = vectorKeys[0];\n    var actionMap = Object.keys(props[firstVectorKey]).reduce(function (map, key) {\n        var childActionProps = vectorKeys.reduce(reduceObjectValue(key), __assign({}, props));\n        map[key] = getActionCreator(props[firstVectorKey][key])(action, childActionProps);\n        return map;\n    }, {});\n    return composite(actionMap);\n};\nvar createUnitAction = function (action, _a) {\n    var from = _a.from,\n        to = _a.to,\n        props = __rest(_a, [\"from\", \"to\"]);\n    var unitType = findUnitType(from) || findUnitType(to);\n    var transform = unitType.transform,\n        parse = unitType.parse;\n    return action(__assign({}, props, { from: typeof from === 'string' ? parse(from) : from, to: typeof to === 'string' ? parse(to) : to })).pipe(transform);\n};\nvar createColorAction = function (action, _a) {\n    var from = _a.from,\n        to = _a.to,\n        props = __rest(_a, [\"from\", \"to\"]);\n    return action(__assign({}, props, { from: 0, to: 1 })).pipe(blendColor(from, to), color.transform);\n};\nvar createComplexAction = function (action, _a) {\n    var from = _a.from,\n        to = _a.to,\n        props = __rest(_a, [\"from\", \"to\"]);\n    var valueTemplate = complex.createTransformer(from);\n    invariant(valueTemplate(from) === complex.createTransformer(to)(from), \"Values '\" + from + \"' and '\" + to + \"' are of different format, or a value might have changed value type.\");\n    return action(__assign({}, props, { from: 0, to: 1 })).pipe(blendArray(complex.parse(from), complex.parse(to)), valueTemplate);\n};\nvar createVectorAction = function (action, typeTests) {\n    var _a = createVectorTests(typeTests),\n        testVectorProps = _a.testVectorProps,\n        getVectorKeys = _a.getVectorKeys;\n    var vectorAction = function (props) {\n        var isVector = testVectorProps(props);\n        if (!isVector) return action(props);\n        var vectorKeys = getVectorKeys(props);\n        var testKey = vectorKeys[0];\n        var testProp = props[testKey];\n        return getActionCreator(testProp)(action, props, vectorKeys);\n    };\n    return vectorAction;\n};\nvar getActionCreator = function (prop) {\n    var actionCreator = createAction;\n    if (typeof prop === 'number') {\n        actionCreator = createAction;\n    } else if (Array.isArray(prop)) {\n        actionCreator = createArrayAction;\n    } else if (isUnitProp(prop)) {\n        actionCreator = createUnitAction;\n    } else if (color.test(prop)) {\n        actionCreator = createColorAction;\n    } else if (complex.test(prop)) {\n        actionCreator = createComplexAction;\n    } else if (typeof prop === 'object') {\n        actionCreator = createObjectAction;\n    }\n    return actionCreator;\n};\n\nvar frame = function () {\n    return action(function (_a) {\n        var update = _a.update;\n        var isActive = true;\n        var startTime = currentTime();\n        var nextFrame = function () {\n            if (!isActive) return;\n            update(Math.max(currentFrameTime() - startTime, 0));\n            onFrameUpdate(nextFrame);\n        };\n        onFrameUpdate(nextFrame);\n        return {\n            stop: function () {\n                return isActive = false;\n            }\n        };\n    });\n};\n\nvar decay = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0 : _b,\n            _c = props.from,\n            from = _c === void 0 ? 0 : _c,\n            _d = props.power,\n            power = _d === void 0 ? 0.8 : _d,\n            _e = props.timeConstant,\n            timeConstant = _e === void 0 ? 350 : _e,\n            _f = props.restDelta,\n            restDelta = _f === void 0 ? 0.5 : _f,\n            modifyTarget = props.modifyTarget;\n        var elapsed = 0;\n        var amplitude = power * velocity;\n        var idealTarget = Math.round(from + amplitude);\n        var target = typeof modifyTarget === 'undefined' ? idealTarget : modifyTarget(idealTarget);\n        var timer = frame().start(function () {\n            elapsed += timeSinceLastFrame();\n            var delta = -amplitude * Math.exp(-elapsed / timeConstant);\n            var isMoving = delta > restDelta || delta < -restDelta;\n            var current = isMoving ? target + delta : target;\n            update(current);\n            if (!isMoving) {\n                timer.stop();\n                complete();\n            }\n        });\n        return {\n            stop: function () {\n                return timer.stop();\n            }\n        };\n    });\n};\nvar vectorDecay = /*#__PURE__*/createVectorAction(decay, {\n    from: number.test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    },\n    velocity: number.test\n});\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar createReversedEasing = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar createMirroredEasing = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar linear = function (p) {\n    return p;\n};\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/createReversedEasing(easeIn);\nvar easeInOut = /*#__PURE__*/createMirroredEasing(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/createReversedEasing(circIn);\nvar circInOut = /*#__PURE__*/createMirroredEasing(circOut);\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/createReversedEasing(backIn);\nvar backInOut = /*#__PURE__*/createMirroredEasing(backIn);\nvar createAnticipateEasing = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\nvar anticipate = /*#__PURE__*/createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\nvar NEWTON_ITERATIONS = 8;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar K_SPLINE_TABLE_SIZE = 11;\nvar K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0);\nvar FLOAT_32_SUPPORTED = typeof Float32Array !== 'undefined';\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    var sampleValues = FLOAT_32_SUPPORTED ? new Float32Array(K_SPLINE_TABLE_SIZE) : new Array(K_SPLINE_TABLE_SIZE);\n    var _precomputed = false;\n    var binarySubdivide = function (aX, aA, aB) {\n        var i = 0;\n        var currentX;\n        var currentT;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            } else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    };\n    var newtonRaphsonIterate = function (aX, aGuessT) {\n        var i = 0;\n        var currentSlope = 0;\n        var currentX;\n        for (; i < NEWTON_ITERATIONS; ++i) {\n            currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    };\n    var calcSampleValues = function () {\n        for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\n            sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\n        }\n    };\n    var getTForX = function (aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = K_SPLINE_TABLE_SIZE - 1;\n        var dist = 0.0;\n        var guessForT = 0.0;\n        var initialSlope = 0.0;\n        for (; currentSample != lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += K_SAMPLE_STEP_SIZE;\n        }\n        --currentSample;\n        dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\n        initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\n        }\n    };\n    var precompute = function () {\n        _precomputed = true;\n        if (mX1 != mY1 || mX2 != mY2) {\n            calcSampleValues();\n        }\n    };\n    var resolver = function (aX) {\n        var returnValue;\n        if (!_precomputed) {\n            precompute();\n        }\n        if (mX1 === mY1 && mX2 === mY2) {\n            returnValue = aX;\n        } else if (aX === 0) {\n            returnValue = 0;\n        } else if (aX === 1) {\n            returnValue = 1;\n        } else {\n            returnValue = calcBezier(getTForX(aX), mY1, mY2);\n        }\n        return returnValue;\n    };\n    return resolver;\n}\n\nvar easing = /*#__PURE__*/Object.freeze({\n    createReversedEasing: createReversedEasing,\n    createMirroredEasing: createMirroredEasing,\n    linear: linear,\n    createExpoIn: createExpoIn,\n    easeIn: easeIn,\n    easeOut: easeOut,\n    easeInOut: easeInOut,\n    circIn: circIn,\n    circOut: circOut,\n    circInOut: circInOut,\n    createBackIn: createBackIn,\n    backIn: backIn,\n    backOut: backOut,\n    backInOut: backInOut,\n    createAnticipateEasing: createAnticipateEasing,\n    anticipate: anticipate,\n    cubicBezier: cubicBezier\n});\n\nvar scrubber = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        _d = _a.ease,\n        ease = _d === void 0 ? linear : _d;\n    return action(function (_a) {\n        var update = _a.update;\n        return {\n            seek: function (progress) {\n                return update(progress);\n            }\n        };\n    }).pipe(ease, function (v) {\n        return getValueFromProgress(from, to, v);\n    });\n};\nvar vectorScrubber = /*#__PURE__*/createVectorAction(scrubber, {\n    ease: function (func) {\n        return typeof func === 'function';\n    },\n    from: number.test,\n    to: number.test\n});\n\nvar clampProgress = /*#__PURE__*/clamp(0, 1);\nvar tween = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.duration,\n            duration = _b === void 0 ? 300 : _b,\n            _c = props.ease,\n            ease = _c === void 0 ? easeOut : _c,\n            _d = props.flip,\n            flip = _d === void 0 ? 0 : _d,\n            _e = props.loop,\n            loop = _e === void 0 ? 0 : _e,\n            _f = props.yoyo,\n            yoyo = _f === void 0 ? 0 : _f;\n        var _g = props.from,\n            from = _g === void 0 ? 0 : _g,\n            _h = props.to,\n            to = _h === void 0 ? 1 : _h,\n            _j = props.elapsed,\n            elapsed = _j === void 0 ? 0 : _j,\n            _k = props.playDirection,\n            playDirection = _k === void 0 ? 1 : _k,\n            _l = props.flipCount,\n            flipCount = _l === void 0 ? 0 : _l,\n            _m = props.yoyoCount,\n            yoyoCount = _m === void 0 ? 0 : _m,\n            _o = props.loopCount,\n            loopCount = _o === void 0 ? 0 : _o;\n        var playhead = vectorScrubber({ from: from, to: to, ease: ease }).start(update);\n        var progress = 0;\n        var tweenTimer;\n        var isActive = false;\n        var reverseTween = function () {\n            return playDirection *= -1;\n        };\n        var isTweenComplete = function () {\n            var isComplete = playDirection === 1 ? isActive && elapsed >= duration : isActive && elapsed <= 0;\n            if (!isComplete) return false;\n            if (isComplete && !loop && !flip && !yoyo) return true;\n            var isStepTaken = false;\n            if (loop && loopCount < loop) {\n                elapsed = 0;\n                loopCount++;\n                isStepTaken = true;\n            } else if (flip && flipCount < flip) {\n                elapsed = duration - elapsed;\n                _a = [to, from], from = _a[0], to = _a[1];\n                playhead = vectorScrubber({ from: from, to: to, ease: ease }).start(update);\n                flipCount++;\n                isStepTaken = true;\n            } else if (yoyo && yoyoCount < yoyo) {\n                reverseTween();\n                yoyoCount++;\n                isStepTaken = true;\n            }\n            return !isStepTaken;\n            var _a;\n        };\n        var updateTween = function () {\n            progress = clampProgress(getProgressFromValue(0, duration, elapsed));\n            playhead.seek(progress);\n        };\n        var startTimer = function () {\n            isActive = true;\n            tweenTimer = frame().start(function () {\n                elapsed += timeSinceLastFrame() * playDirection;\n                updateTween();\n                if (isTweenComplete() && complete) {\n                    tweenTimer.stop();\n                    onFrameUpdate(complete, true);\n                }\n            });\n        };\n        var stopTimer = function () {\n            isActive = false;\n            if (tweenTimer) tweenTimer.stop();\n        };\n        startTimer();\n        return {\n            isActive: function () {\n                return isActive;\n            },\n            getElapsed: function () {\n                return clamp(0, duration)(elapsed);\n            },\n            getProgress: function () {\n                return progress;\n            },\n            stop: function () {\n                stopTimer();\n            },\n            pause: function () {\n                stopTimer();\n                return this;\n            },\n            resume: function () {\n                startTimer();\n                return this;\n            },\n            seek: function (newProgress) {\n                elapsed = getValueFromProgress(0, duration, newProgress);\n                onFrameUpdate(updateTween, true);\n                return this;\n            },\n            reverse: function () {\n                reverseTween();\n                return this;\n            }\n        };\n    });\n};\n\nvar clampProgress$1 = /*#__PURE__*/clamp(0, 1);\nvar defaultEasings = function (values, easing) {\n    return values.map(function () {\n        return easing || easeOut;\n    }).splice(0, values.length - 1);\n};\nvar defaultTimings = function (values) {\n    var numValues = values.length;\n    return values.map(function (value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n};\nvar interpolateScrubbers = function (input, scrubbers, update) {\n    var rangeLength = input.length;\n    var finalInputIndex = rangeLength - 1;\n    var finalScrubberIndex = finalInputIndex - 1;\n    var subs = scrubbers.map(function (scrub) {\n        return scrub.start(update);\n    });\n    return function (v) {\n        if (v <= input[0]) {\n            subs[0].seek(0);\n        }\n        if (v >= input[finalInputIndex]) {\n            subs[finalScrubberIndex].seek(1);\n        }\n        var i = 1;\n        for (; i < rangeLength; i++) {\n            if (input[i] > v || i === finalInputIndex) break;\n        }\n        var progressInRange = getProgressFromValue(input[i - 1], input[i], v);\n        subs[i - 1].seek(clampProgress$1(progressInRange));\n    };\n};\nvar keyframes = function (_a) {\n    var easings = _a.easings,\n        _b = _a.ease,\n        ease = _b === void 0 ? linear : _b,\n        times = _a.times,\n        values = _a.values,\n        tweenProps = __rest(_a, [\"easings\", \"ease\", \"times\", \"values\"]);\n    easings = Array.isArray(easings) ? easings : defaultEasings(values, easings);\n    times = times || defaultTimings(values);\n    var scrubbers = easings.map(function (easing, i) {\n        return vectorScrubber({\n            from: values[i],\n            to: values[i + 1],\n            ease: easing\n        });\n    });\n    return tween(__assign({}, tweenProps, { ease: ease })).applyMiddleware(function (update) {\n        return interpolateScrubbers(times, scrubbers, update);\n    });\n};\n\nvar physics = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.acceleration,\n            acceleration = _b === void 0 ? 0 : _b,\n            _c = props.friction,\n            friction = _c === void 0 ? 0 : _c,\n            _d = props.velocity,\n            velocity = _d === void 0 ? 0 : _d,\n            springStrength = props.springStrength,\n            to = props.to;\n        var _e = props.restSpeed,\n            restSpeed = _e === void 0 ? 0.001 : _e,\n            _f = props.from,\n            from = _f === void 0 ? 0 : _f;\n        var current = from;\n        var timer = frame().start(function () {\n            var elapsed = Math.max(timeSinceLastFrame(), 16);\n            if (acceleration) velocity += speedPerFrame(acceleration, elapsed);\n            if (friction) velocity *= Math.pow(1 - friction, elapsed / 100);\n            if (springStrength !== undefined && to !== undefined) {\n                var distanceToTarget = to - current;\n                velocity += distanceToTarget * speedPerFrame(springStrength, elapsed);\n            }\n            current += speedPerFrame(velocity, elapsed);\n            update(current);\n            var isComplete = restSpeed !== false && (!velocity || Math.abs(velocity) <= restSpeed);\n            if (isComplete) {\n                timer.stop();\n                complete();\n            }\n        });\n        return {\n            set: function (v) {\n                current = v;\n                return this;\n            },\n            setAcceleration: function (v) {\n                acceleration = v;\n                return this;\n            },\n            setFriction: function (v) {\n                friction = v;\n                return this;\n            },\n            setSpringStrength: function (v) {\n                springStrength = v;\n                return this;\n            },\n            setSpringTarget: function (v) {\n                to = v;\n                return this;\n            },\n            setVelocity: function (v) {\n                velocity = v;\n                return this;\n            },\n            stop: function () {\n                return timer.stop();\n            }\n        };\n    });\n};\nvar vectorPhysics = /*#__PURE__*/createVectorAction(physics, {\n    acceleration: number.test,\n    friction: number.test,\n    velocity: number.test,\n    from: number.test,\n    to: number.test,\n    springStrength: number.test\n});\n\nvar spring = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0.0 : _b;\n        var _c = props.from,\n            from = _c === void 0 ? 0.0 : _c,\n            _d = props.to,\n            to = _d === void 0 ? 0.0 : _d,\n            _e = props.stiffness,\n            stiffness = _e === void 0 ? 100 : _e,\n            _f = props.damping,\n            damping = _f === void 0 ? 10 : _f,\n            _g = props.mass,\n            mass = _g === void 0 ? 1.0 : _g,\n            _h = props.restSpeed,\n            restSpeed = _h === void 0 ? 0.01 : _h,\n            _j = props.restDelta,\n            restDelta = _j === void 0 ? 0.01 : _j;\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var t = 0;\n        var delta = to - from;\n        var position = from;\n        var prevPosition = position;\n        var springTimer = frame().start(function () {\n            var timeDelta = timeSinceLastFrame();\n            t += timeDelta;\n            var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n            var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n            prevPosition = position;\n            if (dampingRatio < 1) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                position = to - envelope * ((initialVelocity + dampingRatio * angularFreq * delta) / expoDecay * Math.sin(expoDecay * t) + delta * Math.cos(expoDecay * t));\n            } else {\n                var envelope = Math.exp(-angularFreq * t);\n                position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\n            }\n            velocity = speedPerSecond(position - prevPosition, timeDelta);\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n            var isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\n            if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\n                position = to;\n                update(position);\n                springTimer.stop();\n                complete();\n            } else {\n                update(position);\n            }\n        });\n        return {\n            stop: function () {\n                return springTimer.stop();\n            }\n        };\n    });\n};\nvar vectorSpring = /*#__PURE__*/createVectorAction(spring, {\n    from: number.test,\n    to: number.test,\n    stiffness: number.test,\n    damping: number.test,\n    mass: number.test,\n    velocity: number.test\n});\n\nvar DEFAULT_DURATION = 300;\nvar flattenTimings = function (instructions) {\n    var flatInstructions = [];\n    var lastArg = instructions[instructions.length - 1];\n    var isStaggered = typeof lastArg === 'number';\n    var staggerDelay = isStaggered ? lastArg : 0;\n    var segments = isStaggered ? instructions.slice(0, -1) : instructions;\n    var numSegments = segments.length;\n    var offset = 0;\n    segments.forEach(function (item, i) {\n        flatInstructions.push(item);\n        if (i !== numSegments - 1) {\n            var duration = item.duration || DEFAULT_DURATION;\n            offset += staggerDelay;\n            flatInstructions.push(\"-\" + (duration - offset));\n        }\n    });\n    return flatInstructions;\n};\nvar flattenArrayInstructions = function (instructions, instruction) {\n    Array.isArray(instruction) ? instructions.push.apply(instructions, flattenTimings(instruction)) : instructions.push(instruction);\n    return instructions;\n};\nvar convertDefToProps = function (props, def, i) {\n    var duration = props.duration,\n        easings = props.easings,\n        times = props.times,\n        values = props.values;\n    var numValues = values.length;\n    var prevTimeTo = times[numValues - 1];\n    var timeFrom = def.at === 0 ? 0 : def.at / duration;\n    var timeTo = (def.at + def.duration) / duration;\n    if (i === 0) {\n        values.push(def.from);\n        times.push(timeFrom);\n    } else {\n        if (prevTimeTo !== timeFrom) {\n            if (def.from !== undefined) {\n                values.push(values[numValues - 1]);\n                times.push(timeFrom);\n                easings.push(linear);\n            }\n            var from = def.from !== undefined ? def.from : values[numValues - 1];\n            values.push(from);\n            times.push(timeFrom);\n            easings.push(linear);\n        } else if (def.from !== undefined) {\n            values.push(def.from);\n            times.push(timeFrom);\n            easings.push(linear);\n        }\n    }\n    values.push(def.to);\n    times.push(timeTo);\n    easings.push(def.ease || easeInOut);\n    return props;\n};\nvar timeline = function (instructions, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        duration = _b.duration,\n        elapsed = _b.elapsed,\n        ease = _b.ease,\n        loop = _b.loop,\n        flip = _b.flip,\n        yoyo = _b.yoyo;\n    var playhead = 0;\n    var calculatedDuration = 0;\n    var flatInstructions = instructions.reduce(flattenArrayInstructions, []);\n    var animationDefs = [];\n    flatInstructions.forEach(function (instruction) {\n        if (typeof instruction === 'string') {\n            playhead += parseFloat(instruction);\n        } else if (typeof instruction === 'number') {\n            playhead = instruction;\n        } else {\n            var def = __assign({}, instruction, { at: playhead });\n            def.duration = def.duration === undefined ? DEFAULT_DURATION : def.duration;\n            animationDefs.push(def);\n            playhead += def.duration;\n            calculatedDuration = Math.max(calculatedDuration, def.at + def.duration);\n        }\n    });\n    var tracks = {};\n    var numDefs = animationDefs.length;\n    for (var i = 0; i < numDefs; i++) {\n        var def = animationDefs[i];\n        var track = def.track;\n        if (track === undefined) {\n            throw new Error('No track defined');\n        }\n        if (!tracks.hasOwnProperty(track)) tracks[track] = [];\n        tracks[track].push(def);\n    }\n    var trackKeyframes = {};\n    for (var key in tracks) {\n        if (tracks.hasOwnProperty(key)) {\n            var keyframeProps = tracks[key].reduce(convertDefToProps, {\n                duration: calculatedDuration,\n                easings: [],\n                times: [],\n                values: []\n            });\n            trackKeyframes[key] = keyframes(__assign({}, keyframeProps, { duration: duration || calculatedDuration, ease: ease,\n                elapsed: elapsed,\n                loop: loop,\n                yoyo: yoyo,\n                flip: flip }));\n        }\n    }\n    return composite(trackKeyframes);\n};\n\nvar listen = function (element, events, options) {\n    return action(function (_a) {\n        var update = _a.update;\n        var eventNames = events.split(' ').map(function (eventName) {\n            element.addEventListener(eventName, update, options);\n            return eventName;\n        });\n        return {\n            stop: function () {\n                return eventNames.forEach(function (eventName) {\n                    return element.removeEventListener(eventName, update, options);\n                });\n            }\n        };\n    });\n};\n\nvar defaultPointerPos = function () {\n    return {\n        clientX: 0,\n        clientY: 0,\n        pageX: 0,\n        pageY: 0,\n        x: 0,\n        y: 0\n    };\n};\nvar eventToPoint = function (e, point) {\n    if (point === void 0) {\n        point = defaultPointerPos();\n    }\n    point.clientX = point.x = e.clientX;\n    point.clientY = point.y = e.clientY;\n    point.pageX = e.pageX;\n    point.pageY = e.pageY;\n    return point;\n};\n\nvar points = [/*#__PURE__*/defaultPointerPos()];\nvar isTouchDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointsLocation = function (_a) {\n        var touches = _a.touches;\n        isTouchDevice = true;\n        var numTouches = touches.length;\n        points.length = 0;\n        for (var i = 0; i < numTouches; i++) {\n            var thisTouch = touches[i];\n            points.push(eventToPoint(thisTouch));\n        }\n    };\n    listen(document, 'touchstart touchmove', true).start(updatePointsLocation);\n}\nvar multitouch = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.preventDefault,\n        preventDefault = _c === void 0 ? true : _c,\n        _d = _b.scale,\n        scale = _d === void 0 ? 1.0 : _d,\n        _e = _b.rotate,\n        rotate = _e === void 0 ? 0.0 : _e;\n    return action(function (_a) {\n        var update = _a.update;\n        var output = {\n            touches: points,\n            scale: scale,\n            rotate: rotate\n        };\n        var initialDistance = 0.0;\n        var initialRotation = 0.0;\n        var isGesture = points.length > 1;\n        if (isGesture) {\n            var firstTouch = points[0],\n                secondTouch = points[1];\n            initialDistance = distance(firstTouch, secondTouch);\n            initialRotation = angle(firstTouch, secondTouch);\n        }\n        var updatePoint = function () {\n            if (isGesture) {\n                var firstTouch = points[0],\n                    secondTouch = points[1];\n                var newDistance = distance(firstTouch, secondTouch);\n                var newRotation = angle(firstTouch, secondTouch);\n                output.scale = scale * (newDistance / initialDistance);\n                output.rotate = rotate + (newRotation - initialRotation);\n            }\n            update(output);\n        };\n        var onMove = function (e) {\n            if (preventDefault || e.touches.length > 1) e.preventDefault();\n            onFrameUpdate(updatePoint);\n        };\n        var updateOnMove = listen(document, 'touchmove', { passive: !preventDefault }).start(onMove);\n        if (isTouchDevice) onFrameUpdate(updatePoint);\n        return {\n            stop: function () {\n                cancelOnFrameUpdate(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\nvar getIsTouchDevice = function () {\n    return isTouchDevice;\n};\n\nvar point = /*#__PURE__*/defaultPointerPos();\nvar isMouseDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointLocation = function (e) {\n        isMouseDevice = true;\n        eventToPoint(e, point);\n    };\n    listen(document, 'mousedown mousemove', true).start(updatePointLocation);\n}\nvar mouse = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).preventDefault,\n        preventDefault = _b === void 0 ? true : _b;\n    return action(function (_a) {\n        var update = _a.update;\n        var updatePoint = function () {\n            return update(point);\n        };\n        var onMove = function (e) {\n            if (preventDefault) e.preventDefault();\n            onFrameUpdate(updatePoint);\n        };\n        var updateOnMove = listen(document, 'mousemove').start(onMove);\n        if (isMouseDevice) onFrameUpdate(updatePoint);\n        return {\n            stop: function () {\n                cancelOnFrameUpdate(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\n\nvar getFirstTouch = function (_a) {\n    var firstTouch = _a[0];\n    return firstTouch;\n};\nvar pointer = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return getIsTouchDevice() ? multitouch(props).pipe(function (_a) {\n        var touches = _a.touches;\n        return touches;\n    }, getFirstTouch) : mouse(props);\n};\nvar index = function (_a) {\n    if (_a === void 0) {\n        _a = {};\n    }\n    var x = _a.x,\n        y = _a.y,\n        props = __rest(_a, [\"x\", \"y\"]);\n    if (x !== undefined || y !== undefined) {\n        var applyXOffset_1 = applyOffset(x || 0);\n        var applyYOffset_1 = applyOffset(y || 0);\n        var delta_1 = { x: 0, y: 0 };\n        return pointer(props).pipe(function (point) {\n            delta_1.x = applyXOffset_1(point.x);\n            delta_1.y = applyYOffset_1(point.y);\n            return delta_1;\n        });\n    } else {\n        return pointer(props);\n    }\n};\n\nvar chain = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var i = 0;\n        var current;\n        var playCurrent = function () {\n            current = actions[i].start({\n                complete: function () {\n                    i++;\n                    i >= actions.length ? complete() : playCurrent();\n                },\n                update: update\n            });\n        };\n        playCurrent();\n        return {\n            stop: function () {\n                return current && current.stop();\n            }\n        };\n    });\n};\n\nvar crossfade = function (a, b) {\n    return action(function (observer) {\n        var balance = 0;\n        var fadable = parallel$1(a, b).start(__assign({}, observer, { update: function (_a) {\n                var va = _a[0],\n                    vb = _a[1];\n                observer.update(getValueFromProgress(va, vb, balance));\n            } }));\n        return {\n            setBalance: function (v) {\n                return balance = v;\n            },\n            stop: function () {\n                return fadable.stop();\n            }\n        };\n    });\n};\n\nvar delay = function (timeToDelay) {\n    return action(function (_a) {\n        var complete = _a.complete;\n        var timeout = setTimeout(complete, timeToDelay);\n        return {\n            stop: function () {\n                return clearTimeout(timeout);\n            }\n        };\n    });\n};\n\nvar merge = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (observer) {\n        var subs = actions.map(function (thisAction) {\n            return thisAction.start(observer);\n        });\n        return {\n            stop: function () {\n                return subs.forEach(function (sub) {\n                    return sub.stop();\n                });\n            }\n        };\n    });\n};\n\nvar schedule = function (scheduler, schedulee) {\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var latest;\n        var schedulerSub = scheduler.start({\n            update: function () {\n                return latest !== undefined && update(latest);\n            },\n            complete: complete\n        });\n        var scheduleeSub = schedulee.start({\n            update: function (v) {\n                return latest = v;\n            },\n            complete: complete\n        });\n        return {\n            stop: function () {\n                schedulerSub.stop();\n                scheduleeSub.stop();\n            }\n        };\n    });\n};\n\nvar stagger = function (actions, interval) {\n    var intervalIsNumber = typeof interval === 'number';\n    var actionsWithDelay = actions.map(function (a, i) {\n        var timeToDelay = intervalIsNumber ? interval * i : interval(i);\n        return chain(delay(timeToDelay), a);\n    });\n    return parallel$1.apply(void 0, actionsWithDelay);\n};\n\nvar css = function (element, props) {\n    warning(false, 'css() is deprecated, use styler instead');\n    return styler(element, props);\n};\nvar svg = function (element, props) {\n    warning(false, 'svg() is deprecated, use styler instead');\n    return styler(element, props);\n};\n\nexport { action, multicast, value, vectorDecay as decay, keyframes, frame as everyFrame, vectorPhysics as physics, vectorSpring as spring, timeline, tween, listen, index as pointer, mouse, multitouch, chain, composite, crossfade, delay, merge, parallel$1 as parallel, schedule, stagger, calc, easing, transformers as transform, css, svg, Action, ValueReaction };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isNum = function (v) { return typeof v === 'number'; };\nexports.isPoint = function (point) {\n    return point.x !== undefined && point.y !== undefined;\n};\nexports.isPoint3D = function (point) {\n    return point.z !== undefined;\n};\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) { precision = 2; }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\nvar ZERO_POINT = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar distance1D = function (a, b) { return Math.abs(a - b); };\nexports.angle = function (a, b) {\n    if (b === void 0) { b = ZERO_POINT; }\n    return exports.radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\nexports.degreesToRadians = function (degrees) { return degrees * Math.PI / 180; };\nexports.dilate = function (a, b, dilation) { return a + ((b - a) * dilation); };\nexports.distance = function (a, b) {\n    if (b === void 0) { b = ZERO_POINT; }\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (exports.isPoint(a) && exports.isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = (exports.isPoint3D(a) && exports.isPoint3D(b)) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt((Math.pow(xDelta, 2)) + (Math.pow(yDelta, 2)) + (Math.pow(zDelta, 2)));\n    }\n    return 0;\n};\nexports.getProgressFromValue = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\nexports.getValueFromProgress = function (from, to, progress) {\n    return (-progress * from) + (progress * to) + from;\n};\nexports.pointFromAngleAndDistance = function (origin, angle, distance) {\n    angle = exports.degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\nexports.radiansToDegrees = function (radians) { return radians * 180 / Math.PI; };\nexports.smooth = function (newValue, oldValue, duration, smoothing) {\n    if (smoothing === void 0) { smoothing = 0; }\n    return toDecimal(oldValue + (duration * (newValue - oldValue) / Math.max(smoothing, duration)));\n};\nexports.speedPerFrame = function (xps, frameDuration) {\n    return (isNum(xps)) ? xps / (1000 / frameDuration) : 0;\n};\nexports.speedPerSecond = function (velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n};\nexports.stepProgress = function (steps, progress) {\n    var segment = 1 / (steps - 1);\n    var target = 1 - (1 / steps);\n    var progressOfTarget = Math.min(progress / target, 1);\n    return Math.floor(progressOfTarget / segment) * segment;\n};\n//# sourceMappingURL=calc.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar framesync_1 = require(\"framesync\");\nvar style_value_types_1 = require(\"style-value-types\");\nvar calc_1 = require(\"./calc\");\nvar noop = function (v) { return v; };\nexports.appendUnit = function (unit) { return function (v) { return \"\" + v + unit; }; };\nexports.applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    var getOffset = function (v) { return v - from; };\n    var applyOffsetTo = function (v) { return v + to; };\n    return function (v) {\n        if (hasReceivedFrom) {\n            return applyOffsetTo(getOffset(v));\n        }\n        else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\nvar blend = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(v * (toExpo - fromExpo) + fromExpo);\n};\nexports.blendColor = function (from, to) {\n    var fromColor = typeof from === 'string' ? style_value_types_1.color.parse(from) : from;\n    var toColor = typeof to === 'string' ? style_value_types_1.color.parse(to) : to;\n    var blended = __assign({}, fromColor);\n    var blendFunc = from.hue !== undefined ||\n        (typeof from === 'string' && style_value_types_1.hsla.test(from))\n        ? calc_1.getValueFromProgress\n        : blend;\n    return function (v) {\n        blended = __assign({}, blended);\n        for (var key in blended) {\n            if (key !== 'alpha' && blended.hasOwnProperty(key)) {\n                blended[key] = blendFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = calc_1.getValueFromProgress(fromColor.alpha, toColor.alpha, v);\n        return blended;\n    };\n};\nexports.blendArray = function (from, to) {\n    var output = from.slice();\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        var toThis = to[i];\n        return typeof fromThis === 'number'\n            ? function (v) { return calc_1.getValueFromProgress(fromThis, toThis, v); }\n            : exports.blendColor(fromThis, toThis);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nexports.clamp = function (min, max) { return function (v) {\n    return Math.min(Math.max(v, min), max);\n}; };\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\nexports.pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\nexports.conditional = function (check, apply) { return function (v) {\n    return check(v) ? apply(v) : v;\n}; };\nvar slowInterpolate = function (input, output, rangeLength, rangeEasing) {\n    var finalIndex = rangeLength - 1;\n    if (input[0] > input[finalIndex]) {\n        input.reverse();\n        output.reverse();\n    }\n    return function (v) {\n        if (v <= input[0]) {\n            return output[0];\n        }\n        if (v >= input[finalIndex]) {\n            return output[finalIndex];\n        }\n        var i = 1;\n        for (; i < rangeLength; i++) {\n            if (input[i] > v || i === finalIndex) {\n                break;\n            }\n        }\n        var progressInRange = calc_1.getProgressFromValue(input[i - 1], input[i], v);\n        var easedProgress = rangeEasing\n            ? rangeEasing[i - 1](progressInRange)\n            : progressInRange;\n        return calc_1.getValueFromProgress(output[i - 1], output[i], easedProgress);\n    };\n};\nvar fastInterpolate = function (minA, maxA, minB, maxB) { return function (v) { return ((v - minA) * (maxB - minB)) / (maxA - minA) + minB; }; };\nexports.interpolate = function (input, output, rangeEasing) {\n    var rangeLength = input.length;\n    return rangeLength !== 2\n        ? slowInterpolate(input, output, rangeLength, rangeEasing)\n        : fastInterpolate(input[0], input[1], output[0], output[1]);\n};\nexports.generateStaticSpring = function (alterDisplacement) {\n    if (alterDisplacement === void 0) { alterDisplacement = noop; }\n    return function (constant, origin) { return function (v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -constant * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0\n            ? origin + springModifiedDisplacement\n            : origin - springModifiedDisplacement;\n    }; };\n};\nexports.linearSpring = exports.generateStaticSpring();\nexports.nonlinearSpring = exports.generateStaticSpring(Math.sqrt);\nexports.wrap = function (min, max) { return function (v) {\n    var rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n}; };\nexports.smooth = function (strength) {\n    if (strength === void 0) { strength = 50; }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = framesync_1.currentFrameTime();\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta\n            ? calc_1.smooth(v, previousValue, timeDelta, strength)\n            : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\nexports.snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) { return Math.round(v / points) * points; };\n    }\n    else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0)\n                    return point;\n                if (distance > lastDistance)\n                    return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1)\n                    return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\nexports.steps = function (st, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 1; }\n    return function (v) {\n        var progress = calc_1.getProgressFromValue(min, max, v);\n        return calc_1.getValueFromProgress(min, max, calc_1.stepProgress(st, progress));\n    };\n};\nexports.transformMap = function (childTransformers) { return function (v) {\n    var output = __assign({}, v);\n    for (var key in childTransformers) {\n        if (childTransformers.hasOwnProperty(key)) {\n            var childTransformer = childTransformers[key];\n            output[key] = childTransformer(v[key]);\n        }\n    }\n    return output;\n}; };\n//# sourceMappingURL=transformers.js.map","import { h } from 'hyperapp'\nimport picostyle from 'picostyle'\nimport { styler, value, listen, pointer, spring, chain } from 'popmotion'\nimport { nonlinearSpring } from 'popmotion/lib/transformers'\nimport { smooth } from 'popmotion/lib/calc'\n\nfunction makeInteractive (element, {playPause, nextSong, previousSong}) {\n  const THRESHOLD = 10\n\n  const handleStyler = styler(element)\n  const handle = {\n    x: value(0, handleStyler.set('x')),\n    y: value(0, handleStyler.set('y'))\n  }\n\n  const oneDirectionalPointer = axis => pointer({[axis]: 0}).pipe(v => v[axis])\n\n  let currentHandle\n  let direction = 'none'\n  let stopPointer\n  let axis\n  let springCurve\n\n  listen(element, 'mousedown touchstart')\n    .start((e) => {\n      let {stop} = pointer({x: 0, y: 0})\n        .start(({x, y}) => {\n          if (Math.abs(x) > THRESHOLD) {\n            axis = 'x'\n            direction = (x < 0)\n              ? 'left'\n              : 'right'\n            stop()\n          } else if (Math.abs(y) > THRESHOLD) {\n            axis = 'y'\n            direction = (y < 0)\n              ? 'top'\n              : 'bottom'\n            stop()\n          }\n\n          if (direction === 'none') return\n\n          switch (direction) {\n            case 'top':\n              springCurve = nonlinearSpring(1, 0)\n              break\n            case 'bottom':\n              springCurve = nonlinearSpring(0.2, 0)\n              break\n            case 'right':\n            case 'left':\n              springCurve = nonlinearSpring(3, 0)\n          }\n\n          currentHandle = handle[axis]\n\n          stopPointer = chain(\n            oneDirectionalPointer(axis),\n            smooth(30))\n            .pipe(springCurve)\n            .start(currentHandle)\n        })\n    })\n\n  listen(document, 'mouseup touchend')\n    .start((e) => {\n      stopPointer.stop()\n\n      switch (direction) {\n        case 'top':\n          playPause()\n          break\n        case 'left':\n          previousSong()\n          break\n        case 'right':\n          nextSong()\n          break\n        default:\n          console.log('clicked!')\n      }\n      direction = 'none'\n      axis = 'none'\n      spring({\n        from: currentHandle.get(),\n        velocity: currentHandle.getVelocity()\n      })\n        .start(currentHandle)\n    })\n}\n\nconst style = picostyle(h)\n\nconst Bubble = style('div')((props) => ({\n  backgroundColor: props.playingState ? '#fce9c7' : '#fcfcff',\n  transition: 'background-color 100ms',\n  borderRadius: '20px',\n  border: props.playingState ? '1px solid rgb(239, 197, 124)' : '1px solid #eee',\n  width: '100%',\n  maxWidth: '400px',\n  padding: '0.4em',\n  display: 'flex',\n  position: 'relative',\n  height: '4em',\n  cursor: 'default',\n  boxShadow: '0 1px 17px -3px rgba(0,0,0, 0.1)'\n}))\n\nconst Indicator = () => style('div')({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  position: 'absolute',\n  left: '0px',\n  top: '0px',\n  marginTop: '0.4em'\n})(\n  {},\n  style('div')({\n    height: '4px',\n    width: '30px',\n    backgroundColor: '#848484',\n    borderRadius: '100px'\n  })\n)\nconst SongCover = style('img')({\n  height: '100%',\n  borderRadius: '15px',\n  boxSizing: 'border-box',\n  pointerEvents: 'none'\n})\n\nconst Song = style('div')({\n  fontWeight: 'bold'\n})\n\nconst Artist = style('div')({\n  fontWeight: 'normal'\n})\n\nconst Info = style('div')({\n  paddingLeft: '1em',\n  alignSelf: 'center'\n})\n\nconst Wrapper = style('div')({\n  width: '100%',\n  display: 'flex',\n  position: 'absolute',\n  bottom: '0px',\n  padding: '1em',\n  boxSizing: 'border-box',\n  justifyContent: 'center'\n})\n\nconst ScrubBar = (props) =>\n  <Wrapper>\n    <Bubble playingState={props.playingState} oncreate={((props) => (element) => makeInteractive(element, props))(props)}>\n      <Indicator />\n      <SongCover draggable='false' src={props.image} />\n      <Info>\n        <Song>\n          {props.playingState ? '► ' : ''}{props.name}\n        </Song>\n        <Artist>\n          {props.artist}\n        </Artist>\n      </Info>\n    </Bubble>\n  </Wrapper>\n\nexport default ScrubBar\n","import placeholder from './public/placeholder.jpg'\n\nexport default [\n  {\n    name: 'Wowa CC0',\n    artist: 'Wowa',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Bach Collection',\n    artist: '...',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Wowa CC0',\n    artist: 'Wowa',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Bach Collection',\n    artist: '...',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Wowa CC0',\n    artist: 'Wowa',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Bach Collection',\n    artist: '...',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Wowa CC0',\n    artist: 'Wowa',\n    cover_art_url: placeholder\n  },\n  {\n    name: 'Bach Collection',\n    artist: '...',\n    cover_art_url: placeholder\n  }\n]\n","import { h } from 'hyperapp'\nimport picostyle from 'picostyle'\nimport { styler, spring, value, listen, pointer, chain } from 'popmotion'\nimport { snap } from 'popmotion/lib/transformers'\nimport { smooth } from 'popmotion/lib/calc'\n\nconst style = picostyle(h)\n\nfunction makeInteractive (element) {\n  element.style.transform = 'translateX(100%)'\n\n  const AXIS_LOCK_THRESHOLD = 15\n  let isAxisLocked = false\n  const handleStyler = styler(element)\n  const handleX = value(0, handleStyler.set('x'))\n\n  const pointerX = (preventDefault = false) => pointer({x: 0, preventDefault: preventDefault}).pipe(val => val.x).filter(x => x > 0)\n\n  // Initial slide-in\n  spring({\n    from: {x: '100%'},\n    to: {x: 0},\n    damping: 20,\n    mass: 0.5\n  }).start(handleStyler.set)\n  let handleSub\n  // Swipe-mechanism\n  listen(element, 'mousedown touchstart')\n    .start((e) => {\n      if (handleX.get() > 0) {\n        handleSub.unsubscribe()\n      }\n      let currentPointer\n      currentPointer = chain(pointer({x: 0, y: 0}), smooth(30)).start(({ x, y }) => {\n        if (Math.abs(y) >= AXIS_LOCK_THRESHOLD && !isAxisLocked) {\n          currentPointer.stop()\n          upListener.stop()\n          isAxisLocked = false\n          return\n        }\n        if (Math.abs(x) <= AXIS_LOCK_THRESHOLD) {\n          return\n        }\n\n        window.clickLock = true\n        isAxisLocked = true\n        currentPointer.stop()\n\n        currentPointer = chain(pointerX(true), smooth(30)).start(handleX)\n      })\n\n      let upListener = listen(element, 'mouseup touchend')\n        .start((e) => {\n          if (!isAxisLocked) {\n            currentPointer.stop()\n            upListener.stop()\n            return\n          }\n\n          isAxisLocked = false\n          upListener.stop()\n          currentPointer.stop()\n\n          let currentPos = handleX.get()\n          let velocity = handleX.getVelocity()\n          let isGoingBack = Boolean(!snap([\n            0,\n            (document.body.clientWidth / 1.5)\n          ])(currentPos + velocity))\n          let pageWidth = document.body.clientWidth\n\n          handleSub = handleX.subscribe(val => {\n            console.log(val)\n            if (val >= pageWidth) {\n              console.log('Way to often: ', val)\n              handleSub.unsubscribe()\n              window.clickLock = false\n              stopSpring()\n\n              window.flamous.killPage()\n            } else if (val === 0) {\n              handleSub.unsubscribe()\n              window.clickLock = false\n            }\n          })\n          let {stop: stopSpring} = spring({\n            from: currentPos,\n            to: !isGoingBack ? pageWidth * 1.2 : 0,\n            damping: 20,\n            mass: 0.5,\n            velocity: velocity\n          }).start(handleX)\n        })\n    })\n}\n\nconst Page = (props, children) => style('article')({\n  height: '100%',\n  width: '100%',\n  position: 'absolute',\n  overflowY: 'auto',\n  color: '#212121',\n  backgroundColor: 'white',\n  boxShadow: '0 0 2px 0 #848484'\n})({\n  oncreate: !props.hasOwnProperty('nonInteractive') && makeInteractive\n}, <div>\n  {children}\n</div>\n)\n\nexport default Page\n","import { h } from 'hyperapp'\nimport picostyle from 'picostyle'\nimport placeholder from '../public/song_placeholder.svg'\n\nconst style = picostyle(h)\n\nconst Gallery = (props) => style('div')({\n  width: '100%',\n  padding: '1em',\n  boxSizing: 'border-box',\n  marginBottom: '6em'\n})(\n  {},\n  <FlexWrapper>\n    {props.data.map((item) => {\n      return <Item image={item.cover_art_url || placeholder} name={item.name} artist={item.artist} onclick={() => { if (window.clickLock) return; window.flamous.addPage() }} />\n    })}\n  </FlexWrapper>\n)\n\nconst FlexWrapper = style('div')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  maxWidth: '1250px',\n  margin: '0 auto'\n})\n\nconst Item = (props) => style('div')({\n  color: '#212121',\n  textAlign: 'center',\n  fontWeight: 'bold',\n  fontSize: '1.3em',\n  padding: '1em',\n  width: '50%',\n  minWidth: '150px',\n  // maxWidth: '250px',\n  '@media (min-width: 1000px)': {\n    width: '250px',\n    maxWidth: '33%'\n  },\n  position: 'relative',\n  flexGrow: '1',\n  boxSizing: 'border-box',\n  ' .secondary': {\n    marginTop: '-1em',\n    color: '#848484'\n  }\n})(\n  props,\n  [\n    <Cover src={props.image} />,\n    <p>{props.name}</p>,\n    <p class='secondary'>by {props.artist}</p>\n  ]\n)\n\nconst Cover = (props) => style('img')({\n  width: '100%',\n  pointerEvents: 'none'\n})({\n  src: props.src\n})\n\nexport default Gallery\n","import { h } from 'hyperapp'\nimport picostyle from 'picostyle'\n\nconst style = picostyle(h)\n\nconst Header = (props, children) => style('header')({\n  fontSize: '2em',\n  maxWidth: '1100px',\n  margin: '1em',\n  '@media (min-width: 1000px)': {\n    fontSize: '3em'\n  },\n  '@media (min-width: 1250px)': {\n    margin: '0 auto'\n  },\n  ' .sub': {\n    fontSize: '0.6em',\n    marginTop: '-2em'\n  }\n})(\n  {},\n  [\n    // { children ? children :\n    <h1>{props.title}</h1>,\n    <p class='sub'>{props.sub}</p>\n  ]\n)\n\nexport default Header\n","import { h } from 'hyperapp'\nimport picostyle from 'picostyle'\nimport albums from '../albums.js'\nimport Page from './Page.js'\nimport Gallery from './Gallery.js'\nimport Header from './Header.js'\n\nconst style = picostyle(h)\n\nconst Home = () => {\n  return (\n    <Page nonInteractive>\n      <Header title='Flamous Music' sub='The best of Public Domain music.' />\n      <Gallery data={albums} />\n    </Page>\n  )\n}\n\nexport default Home\n","import images from './public/128/*.jpg'\nimport songs from './public/songs/*.mp3'\n\nexport default [{\n  id: 0,\n  name: 'Trumpets in Your Ears',\n  artist: 'Wowa & Chris Rede',\n  album: 'Wowa CC0',\n  url: songs[0],\n  cover_art_url: images[0]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 1,\n  name: 'Pipo Interludo',\n  artist: 'Pipo & Wowa',\n  album: 'Wowa CC0',\n  url: songs[1],\n  cover_art_url: images[1]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 2,\n  name: 'Blue Sky',\n  artist: 'Wowa & Chris Rede',\n  album: 'Wowa CC0',\n  url: songs[2],\n  cover_art_url: images[2]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 3,\n  name: 'Voisin',\n  artist: 'Wowa',\n  album: 'Wowa CC0',\n  url: songs[3],\n  cover_art_url: images[3]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 4,\n  name: 'Piratos',\n  artist: 'Wowa & Chris Rede',\n  album: 'Wowa CC0',\n  url: songs[4],\n  cover_art_url: images[4]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 5,\n  name: 'Viviq',\n  artist: 'Wowa',\n  album: 'Wowa CC0',\n  url: songs[5],\n  cover_art_url: images[5]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 6,\n  name: 'Kring',\n  artist: 'Wowa',\n  album: 'Wowa CC0',\n  url: songs[6],\n  cover_art_url: images[6]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n},\n{\n  id: 7,\n  name: 'Just Cool',\n  artist: 'Wowa & eckskwisit',\n  album: 'Wowa CC0',\n  url: songs[7],\n  cover_art_url: images[7]\n  // audio: new Audio(),\n  // length: null,\n  // currentPosition: null\n}\n]\n","// import { h, app } from 'hyperapp'\n// import songList from './songs.js'\n// import ScrubBar from './components/ScrubBar.js'\n\n// console.log(songList)\n\n// const state = {\n//   pages: [ // High level state of pages\n//   ],\n//   music: {\n//     history: [],\n//     isPlaying: false,\n//     shuffle: true,\n//     playingContext: null,\n//     songs: songList\n//   }\n// }\n\n// const actions = {\n//   addPage: () => ({pages}) => ({\n//     pages: (pages.push({id: pages.length}), pages)\n//   }),\n//   removePage: () => ({pages}) => ({\n//     pages: (pages.pop(), pages)\n//   }),\n//   music: {\n//     play: (id) => (state) => {\n//       console.log(state)\n//       console.log(id)\n//       switch (id) {\n//         case undefined:\n//           if (state.playingContext) {\n//             console.log('would continue to play song')\n//           }\n//           if (!state.playingContext) {\n//             console.log('would start shuffle play')\n//           }\n//           break\n\n//         default:\n//           console.log('default')\n//       }\n//     },\n//     pause: () => ({playingContext}) => {\n//       if (!playingContext) {\n//         console.log('nothing to pause')\n//         return\n//       }\n\n//       console.log('would pause now')\n//     }\n//   }\n// }\n\n// const Page = ({id: pageNumber, addPage, removePage}) =>\n//   h('div', { class: 'page-container' }, [\n//     h('h1', {}, pageNumber),\n//     h('button', {onclick: addPage}, '+ Add Page'),\n//     h('button', {onclick: removePage}, '- Remove Page')\n//   ])\n\n// // const view = ({pages}, {addPage, removePage, music: {play, pause}}) =>\n// //   h('div', {}, [\n// //     h('h1', {}, 'Lowest level'),\n// //     h('button', {onclick: () => play()}, 'play'),\n// //     h('button', {onclick: () => pause()}, 'pause'),\n// //     h('button', {onclick: addPage}, '+ Add Page'),\n// //     // console.log(state)\n// //     pages.map(({id}) => (\n// //       Page({id, addPage, removePage})\n// //     ))\n// //   ])\n\n// const view =\n//   <main>\n//     <ScrubBar />\n//     <p>This is some Bodytext</p>\n//   </main>\n\n// console.info(ScrubBar)\n// app(state, actions, view, document.body)\n\nimport { h, app } from 'hyperapp'\nimport Amplitude from 'amplitudejs'\nimport picostyle from 'picostyle'\nimport ScrubBar from './components/ScrubBar.js'\nimport Home from './components/Home.js'\nimport songList from './songs.js'\nimport placeholder from './public/song_placeholder.svg'\nimport Page from './components/Page.js'\nimport Gallery from './components/Gallery.js'\nimport Header from './components/Header.js'\n\n// const Page = import('./components/Page.js')\n\nconst style = picostyle(h)\n\nconst AppShell = style('div')({\n  height: '100%',\n  width: '100%',\n  position: 'relative',\n  overflow: 'hidden'\n})\n\nAmplitude.setDebug(true)\nAmplitude.init({\n  songs: songList,\n  default_album_art: placeholder,\n  callbacks: {\n    song_change: () => {\n      let meta = JSON.parse(JSON.stringify(Amplitude.getActiveSongMetadata())) // Deep copy so we don't modify the original object\n      let image = new window.Image()\n\n      if (meta.cover_art_url) {\n        image.src = meta.cover_art_url\n\n        if (!image.complete) {\n          meta.cover_art_url = placeholder\n          image.onload = () => {\n            meta.cover_art_url = image.src\n            flamous.updateMetaData(meta)\n          }\n        }\n      }\n\n      flamous.updateMetaData(meta)\n    },\n    before_play: () => {\n      flamous.setPlayState(true)\n    },\n    before_pause: () => {\n      flamous.setPlayState(false)\n    }\n  }\n})\n\nconst flamous = app(\n  {\n    playingState: false,\n    playingContext: {\n      artist: songList[0].artist,\n      name: songList[0].name,\n      cover_art_url: songList[0].cover_art_url || Amplitude.getDefaultAlbumArt()\n    },\n    pages: []\n  },\n  {\n    updateMetaData: (metaData) => {\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.metadata = new window.MediaMetadata({\n          title: metaData.name,\n          artist: metaData.artist,\n          artwork: [{\n            src: metaData.cover_art_url\n          }]\n        })\n      }\n\n      return {\n        playingContext: {\n          artist: metaData.artist,\n          name: metaData.name,\n          cover_art_url: metaData.cover_art_url || Amplitude.getDefaultAlbumArt()\n        }\n      }\n    },\n    addPage: () => (state) => {\n      state.pages.push([\n        <Header title='Awesome' />,\n        <Gallery data={songList} />\n      ]\n      )\n      // console.log(state)\n      return {\n        pages: state.pages\n      }\n    },\n    killPage: () => (state) => {\n      state.pages.pop()\n\n      return {\n        pages: state.pages\n      }\n    },\n    setPlayState: (isPlaying) => {\n      return {\n        playingState: isPlaying\n      }\n    }\n  },\n  ({playingContext, playingState, pages}) =>\n    <AppShell>\n      <Home />\n      { pages.map((item) => { return <Page>{item}</Page> }) }\n      <ScrubBar\n        playingState={playingState}\n        playPause={playPause}\n        nextSong={Amplitude.next}\n        previousSong={Amplitude.prev}\n        artist={playingContext.artist}\n        name={playingContext.name}\n        image={playingContext.cover_art_url} />\n    </AppShell>,\n  document.body\n)\n\nfunction playPause () {\n  console.log(Amplitude.audio())\n  if (!Amplitude.audio().paused) {\n    console.info('paused')\n    Amplitude.pause()\n  } else {\n    console.info('playing')\n    Amplitude.play()\n  }\n}\n\nif ('mediaSession' in navigator) {\n  navigator.mediaSession.metadata = new window.MediaMetadata({\n    title: songList[0].name,\n    artist: songList[0].artist,\n    artwork: [{\n      src: songList[0].cover_art_url\n    }]\n  })\n\n  navigator.mediaSession.setActionHandler('play', Amplitude.play)\n  navigator.mediaSession.setActionHandler('pause', Amplitude.pause)\n  navigator.mediaSession.setActionHandler('previoustrack', Amplitude.prev)\n  navigator.mediaSession.setActionHandler('nexttrack', Amplitude.next)\n}\n\n// window.setTimeout(() => {\n//   flamous.addPage()\n// }, 3000);\n\nwindow.flamous = flamous\n"]}